/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 19040.0, "series": [{"data": [[0.0, 1.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 9.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 10.0], [5.6, 10.0], [5.7, 10.0], [5.8, 10.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 13.0], [6.9, 13.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 16.0], [8.2, 16.0], [8.3, 16.0], [8.4, 16.0], [8.5, 17.0], [8.6, 17.0], [8.7, 18.0], [8.8, 18.0], [8.9, 18.0], [9.0, 18.0], [9.1, 19.0], [9.2, 19.0], [9.3, 19.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 21.0], [9.8, 21.0], [9.9, 21.0], [10.0, 22.0], [10.1, 22.0], [10.2, 22.0], [10.3, 23.0], [10.4, 23.0], [10.5, 23.0], [10.6, 24.0], [10.7, 24.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 26.0], [11.2, 26.0], [11.3, 26.0], [11.4, 26.0], [11.5, 27.0], [11.6, 27.0], [11.7, 27.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 29.0], [12.3, 29.0], [12.4, 29.0], [12.5, 30.0], [12.6, 30.0], [12.7, 30.0], [12.8, 30.0], [12.9, 31.0], [13.0, 31.0], [13.1, 32.0], [13.2, 32.0], [13.3, 32.0], [13.4, 33.0], [13.5, 33.0], [13.6, 33.0], [13.7, 33.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 35.0], [14.2, 35.0], [14.3, 35.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 36.0], [14.8, 37.0], [14.9, 37.0], [15.0, 37.0], [15.1, 38.0], [15.2, 38.0], [15.3, 38.0], [15.4, 39.0], [15.5, 39.0], [15.6, 39.0], [15.7, 40.0], [15.8, 40.0], [15.9, 40.0], [16.0, 40.0], [16.1, 41.0], [16.2, 41.0], [16.3, 41.0], [16.4, 42.0], [16.5, 42.0], [16.6, 42.0], [16.7, 43.0], [16.8, 43.0], [16.9, 43.0], [17.0, 44.0], [17.1, 44.0], [17.2, 44.0], [17.3, 44.0], [17.4, 45.0], [17.5, 45.0], [17.6, 45.0], [17.7, 45.0], [17.8, 45.0], [17.9, 46.0], [18.0, 46.0], [18.1, 46.0], [18.2, 46.0], [18.3, 46.0], [18.4, 47.0], [18.5, 47.0], [18.6, 47.0], [18.7, 47.0], [18.8, 47.0], [18.9, 48.0], [19.0, 48.0], [19.1, 48.0], [19.2, 49.0], [19.3, 49.0], [19.4, 49.0], [19.5, 49.0], [19.6, 50.0], [19.7, 50.0], [19.8, 50.0], [19.9, 51.0], [20.0, 51.0], [20.1, 51.0], [20.2, 51.0], [20.3, 51.0], [20.4, 52.0], [20.5, 52.0], [20.6, 52.0], [20.7, 53.0], [20.8, 53.0], [20.9, 53.0], [21.0, 53.0], [21.1, 54.0], [21.2, 54.0], [21.3, 54.0], [21.4, 54.0], [21.5, 55.0], [21.6, 55.0], [21.7, 56.0], [21.8, 56.0], [21.9, 56.0], [22.0, 56.0], [22.1, 56.0], [22.2, 57.0], [22.3, 57.0], [22.4, 57.0], [22.5, 58.0], [22.6, 58.0], [22.7, 58.0], [22.8, 58.0], [22.9, 59.0], [23.0, 59.0], [23.1, 59.0], [23.2, 60.0], [23.3, 60.0], [23.4, 60.0], [23.5, 61.0], [23.6, 61.0], [23.7, 62.0], [23.8, 62.0], [23.9, 62.0], [24.0, 62.0], [24.1, 62.0], [24.2, 63.0], [24.3, 63.0], [24.4, 64.0], [24.5, 64.0], [24.6, 64.0], [24.7, 64.0], [24.8, 64.0], [24.9, 65.0], [25.0, 65.0], [25.1, 65.0], [25.2, 66.0], [25.3, 66.0], [25.4, 66.0], [25.5, 66.0], [25.6, 66.0], [25.7, 66.0], [25.8, 67.0], [25.9, 67.0], [26.0, 67.0], [26.1, 67.0], [26.2, 68.0], [26.3, 68.0], [26.4, 68.0], [26.5, 68.0], [26.6, 69.0], [26.7, 69.0], [26.8, 69.0], [26.9, 69.0], [27.0, 70.0], [27.1, 70.0], [27.2, 70.0], [27.3, 70.0], [27.4, 71.0], [27.5, 71.0], [27.6, 72.0], [27.7, 72.0], [27.8, 72.0], [27.9, 72.0], [28.0, 73.0], [28.1, 73.0], [28.2, 73.0], [28.3, 73.0], [28.4, 74.0], [28.5, 74.0], [28.6, 75.0], [28.7, 75.0], [28.8, 75.0], [28.9, 75.0], [29.0, 76.0], [29.1, 76.0], [29.2, 76.0], [29.3, 76.0], [29.4, 77.0], [29.5, 77.0], [29.6, 77.0], [29.7, 77.0], [29.8, 77.0], [29.9, 77.0], [30.0, 78.0], [30.1, 78.0], [30.2, 78.0], [30.3, 78.0], [30.4, 79.0], [30.5, 79.0], [30.6, 79.0], [30.7, 80.0], [30.8, 80.0], [30.9, 80.0], [31.0, 80.0], [31.1, 80.0], [31.2, 80.0], [31.3, 81.0], [31.4, 81.0], [31.5, 81.0], [31.6, 81.0], [31.7, 82.0], [31.8, 82.0], [31.9, 82.0], [32.0, 83.0], [32.1, 83.0], [32.2, 83.0], [32.3, 84.0], [32.4, 84.0], [32.5, 84.0], [32.6, 84.0], [32.7, 84.0], [32.8, 85.0], [32.9, 85.0], [33.0, 85.0], [33.1, 86.0], [33.2, 86.0], [33.3, 86.0], [33.4, 86.0], [33.5, 87.0], [33.6, 87.0], [33.7, 87.0], [33.8, 87.0], [33.9, 88.0], [34.0, 88.0], [34.1, 88.0], [34.2, 88.0], [34.3, 88.0], [34.4, 89.0], [34.5, 89.0], [34.6, 89.0], [34.7, 89.0], [34.8, 90.0], [34.9, 90.0], [35.0, 90.0], [35.1, 91.0], [35.2, 91.0], [35.3, 91.0], [35.4, 92.0], [35.5, 92.0], [35.6, 92.0], [35.7, 92.0], [35.8, 93.0], [35.9, 93.0], [36.0, 93.0], [36.1, 93.0], [36.2, 94.0], [36.3, 94.0], [36.4, 94.0], [36.5, 94.0], [36.6, 94.0], [36.7, 94.0], [36.8, 95.0], [36.9, 95.0], [37.0, 95.0], [37.1, 95.0], [37.2, 95.0], [37.3, 96.0], [37.4, 96.0], [37.5, 96.0], [37.6, 96.0], [37.7, 96.0], [37.8, 97.0], [37.9, 97.0], [38.0, 97.0], [38.1, 97.0], [38.2, 97.0], [38.3, 98.0], [38.4, 98.0], [38.5, 99.0], [38.6, 99.0], [38.7, 99.0], [38.8, 100.0], [38.9, 100.0], [39.0, 100.0], [39.1, 101.0], [39.2, 101.0], [39.3, 101.0], [39.4, 102.0], [39.5, 102.0], [39.6, 103.0], [39.7, 103.0], [39.8, 104.0], [39.9, 104.0], [40.0, 105.0], [40.1, 106.0], [40.2, 106.0], [40.3, 106.0], [40.4, 106.0], [40.5, 107.0], [40.6, 107.0], [40.7, 107.0], [40.8, 107.0], [40.9, 108.0], [41.0, 108.0], [41.1, 108.0], [41.2, 108.0], [41.3, 109.0], [41.4, 109.0], [41.5, 110.0], [41.6, 110.0], [41.7, 111.0], [41.8, 111.0], [41.9, 112.0], [42.0, 112.0], [42.1, 113.0], [42.2, 113.0], [42.3, 113.0], [42.4, 114.0], [42.5, 114.0], [42.6, 115.0], [42.7, 115.0], [42.8, 115.0], [42.9, 116.0], [43.0, 116.0], [43.1, 117.0], [43.2, 117.0], [43.3, 117.0], [43.4, 118.0], [43.5, 118.0], [43.6, 119.0], [43.7, 119.0], [43.8, 119.0], [43.9, 120.0], [44.0, 120.0], [44.1, 120.0], [44.2, 121.0], [44.3, 121.0], [44.4, 122.0], [44.5, 122.0], [44.6, 122.0], [44.7, 122.0], [44.8, 123.0], [44.9, 123.0], [45.0, 124.0], [45.1, 124.0], [45.2, 124.0], [45.3, 124.0], [45.4, 125.0], [45.5, 125.0], [45.6, 125.0], [45.7, 126.0], [45.8, 126.0], [45.9, 126.0], [46.0, 127.0], [46.1, 127.0], [46.2, 128.0], [46.3, 128.0], [46.4, 129.0], [46.5, 129.0], [46.6, 130.0], [46.7, 130.0], [46.8, 131.0], [46.9, 132.0], [47.0, 132.0], [47.1, 133.0], [47.2, 134.0], [47.3, 134.0], [47.4, 135.0], [47.5, 135.0], [47.6, 136.0], [47.7, 136.0], [47.8, 137.0], [47.9, 138.0], [48.0, 138.0], [48.1, 140.0], [48.2, 140.0], [48.3, 141.0], [48.4, 142.0], [48.5, 142.0], [48.6, 143.0], [48.7, 143.0], [48.8, 144.0], [48.9, 144.0], [49.0, 145.0], [49.1, 147.0], [49.2, 148.0], [49.3, 148.0], [49.4, 150.0], [49.5, 150.0], [49.6, 150.0], [49.7, 151.0], [49.8, 152.0], [49.9, 152.0], [50.0, 153.0], [50.1, 154.0], [50.2, 155.0], [50.3, 156.0], [50.4, 157.0], [50.5, 157.0], [50.6, 158.0], [50.7, 159.0], [50.8, 159.0], [50.9, 160.0], [51.0, 160.0], [51.1, 161.0], [51.2, 161.0], [51.3, 162.0], [51.4, 162.0], [51.5, 163.0], [51.6, 163.0], [51.7, 164.0], [51.8, 165.0], [51.9, 165.0], [52.0, 165.0], [52.1, 166.0], [52.2, 167.0], [52.3, 167.0], [52.4, 168.0], [52.5, 168.0], [52.6, 169.0], [52.7, 169.0], [52.8, 170.0], [52.9, 171.0], [53.0, 171.0], [53.1, 172.0], [53.2, 172.0], [53.3, 173.0], [53.4, 173.0], [53.5, 174.0], [53.6, 175.0], [53.7, 175.0], [53.8, 176.0], [53.9, 176.0], [54.0, 177.0], [54.1, 178.0], [54.2, 178.0], [54.3, 178.0], [54.4, 179.0], [54.5, 179.0], [54.6, 180.0], [54.7, 180.0], [54.8, 180.0], [54.9, 181.0], [55.0, 181.0], [55.1, 182.0], [55.2, 182.0], [55.3, 183.0], [55.4, 183.0], [55.5, 183.0], [55.6, 184.0], [55.7, 184.0], [55.8, 184.0], [55.9, 184.0], [56.0, 185.0], [56.1, 185.0], [56.2, 186.0], [56.3, 186.0], [56.4, 187.0], [56.5, 187.0], [56.6, 187.0], [56.7, 187.0], [56.8, 188.0], [56.9, 188.0], [57.0, 188.0], [57.1, 188.0], [57.2, 189.0], [57.3, 189.0], [57.4, 189.0], [57.5, 190.0], [57.6, 190.0], [57.7, 191.0], [57.8, 191.0], [57.9, 192.0], [58.0, 192.0], [58.1, 192.0], [58.2, 193.0], [58.3, 193.0], [58.4, 193.0], [58.5, 194.0], [58.6, 194.0], [58.7, 195.0], [58.8, 196.0], [58.9, 196.0], [59.0, 196.0], [59.1, 196.0], [59.2, 197.0], [59.3, 197.0], [59.4, 198.0], [59.5, 198.0], [59.6, 198.0], [59.7, 199.0], [59.8, 199.0], [59.9, 199.0], [60.0, 200.0], [60.1, 200.0], [60.2, 200.0], [60.3, 201.0], [60.4, 201.0], [60.5, 202.0], [60.6, 202.0], [60.7, 203.0], [60.8, 203.0], [60.9, 203.0], [61.0, 204.0], [61.1, 204.0], [61.2, 204.0], [61.3, 205.0], [61.4, 205.0], [61.5, 206.0], [61.6, 206.0], [61.7, 206.0], [61.8, 207.0], [61.9, 207.0], [62.0, 207.0], [62.1, 208.0], [62.2, 208.0], [62.3, 209.0], [62.4, 209.0], [62.5, 209.0], [62.6, 210.0], [62.7, 210.0], [62.8, 210.0], [62.9, 211.0], [63.0, 211.0], [63.1, 211.0], [63.2, 212.0], [63.3, 213.0], [63.4, 213.0], [63.5, 213.0], [63.6, 213.0], [63.7, 214.0], [63.8, 214.0], [63.9, 215.0], [64.0, 215.0], [64.1, 215.0], [64.2, 216.0], [64.3, 216.0], [64.4, 216.0], [64.5, 217.0], [64.6, 217.0], [64.7, 217.0], [64.8, 218.0], [64.9, 218.0], [65.0, 218.0], [65.1, 218.0], [65.2, 218.0], [65.3, 219.0], [65.4, 219.0], [65.5, 219.0], [65.6, 220.0], [65.7, 220.0], [65.8, 221.0], [65.9, 222.0], [66.0, 222.0], [66.1, 222.0], [66.2, 222.0], [66.3, 223.0], [66.4, 223.0], [66.5, 223.0], [66.6, 223.0], [66.7, 224.0], [66.8, 224.0], [66.9, 225.0], [67.0, 225.0], [67.1, 225.0], [67.2, 226.0], [67.3, 226.0], [67.4, 226.0], [67.5, 227.0], [67.6, 227.0], [67.7, 228.0], [67.8, 228.0], [67.9, 229.0], [68.0, 229.0], [68.1, 229.0], [68.2, 230.0], [68.3, 230.0], [68.4, 230.0], [68.5, 231.0], [68.6, 231.0], [68.7, 231.0], [68.8, 232.0], [68.9, 232.0], [69.0, 232.0], [69.1, 233.0], [69.2, 233.0], [69.3, 234.0], [69.4, 234.0], [69.5, 235.0], [69.6, 235.0], [69.7, 235.0], [69.8, 236.0], [69.9, 237.0], [70.0, 237.0], [70.1, 237.0], [70.2, 237.0], [70.3, 238.0], [70.4, 238.0], [70.5, 238.0], [70.6, 239.0], [70.7, 239.0], [70.8, 239.0], [70.9, 240.0], [71.0, 240.0], [71.1, 241.0], [71.2, 241.0], [71.3, 242.0], [71.4, 242.0], [71.5, 243.0], [71.6, 243.0], [71.7, 244.0], [71.8, 244.0], [71.9, 244.0], [72.0, 245.0], [72.1, 245.0], [72.2, 246.0], [72.3, 247.0], [72.4, 247.0], [72.5, 247.0], [72.6, 247.0], [72.7, 248.0], [72.8, 248.0], [72.9, 248.0], [73.0, 248.0], [73.1, 249.0], [73.2, 249.0], [73.3, 250.0], [73.4, 250.0], [73.5, 250.0], [73.6, 251.0], [73.7, 251.0], [73.8, 251.0], [73.9, 252.0], [74.0, 252.0], [74.1, 252.0], [74.2, 252.0], [74.3, 253.0], [74.4, 253.0], [74.5, 253.0], [74.6, 254.0], [74.7, 254.0], [74.8, 255.0], [74.9, 255.0], [75.0, 255.0], [75.1, 256.0], [75.2, 256.0], [75.3, 256.0], [75.4, 257.0], [75.5, 257.0], [75.6, 257.0], [75.7, 258.0], [75.8, 258.0], [75.9, 259.0], [76.0, 259.0], [76.1, 260.0], [76.2, 260.0], [76.3, 260.0], [76.4, 261.0], [76.5, 261.0], [76.6, 262.0], [76.7, 262.0], [76.8, 262.0], [76.9, 263.0], [77.0, 263.0], [77.1, 264.0], [77.2, 264.0], [77.3, 264.0], [77.4, 265.0], [77.5, 265.0], [77.6, 265.0], [77.7, 266.0], [77.8, 266.0], [77.9, 267.0], [78.0, 267.0], [78.1, 267.0], [78.2, 267.0], [78.3, 268.0], [78.4, 268.0], [78.5, 268.0], [78.6, 269.0], [78.7, 269.0], [78.8, 269.0], [78.9, 270.0], [79.0, 270.0], [79.1, 271.0], [79.2, 271.0], [79.3, 271.0], [79.4, 272.0], [79.5, 272.0], [79.6, 272.0], [79.7, 272.0], [79.8, 273.0], [79.9, 273.0], [80.0, 274.0], [80.1, 274.0], [80.2, 275.0], [80.3, 275.0], [80.4, 275.0], [80.5, 276.0], [80.6, 276.0], [80.7, 277.0], [80.8, 277.0], [80.9, 278.0], [81.0, 279.0], [81.1, 279.0], [81.2, 280.0], [81.3, 280.0], [81.4, 280.0], [81.5, 281.0], [81.6, 281.0], [81.7, 282.0], [81.8, 282.0], [81.9, 282.0], [82.0, 283.0], [82.1, 283.0], [82.2, 284.0], [82.3, 284.0], [82.4, 285.0], [82.5, 286.0], [82.6, 286.0], [82.7, 286.0], [82.8, 287.0], [82.9, 287.0], [83.0, 288.0], [83.1, 288.0], [83.2, 289.0], [83.3, 289.0], [83.4, 290.0], [83.5, 290.0], [83.6, 291.0], [83.7, 291.0], [83.8, 292.0], [83.9, 293.0], [84.0, 293.0], [84.1, 294.0], [84.2, 295.0], [84.3, 295.0], [84.4, 296.0], [84.5, 297.0], [84.6, 297.0], [84.7, 299.0], [84.8, 300.0], [84.9, 300.0], [85.0, 301.0], [85.1, 302.0], [85.2, 304.0], [85.3, 304.0], [85.4, 305.0], [85.5, 305.0], [85.6, 307.0], [85.7, 308.0], [85.8, 309.0], [85.9, 310.0], [86.0, 311.0], [86.1, 313.0], [86.2, 314.0], [86.3, 322.0], [86.4, 329.0], [86.5, 334.0], [86.6, 338.0], [86.7, 346.0], [86.8, 349.0], [86.9, 354.0], [87.0, 359.0], [87.1, 362.0], [87.2, 367.0], [87.3, 372.0], [87.4, 375.0], [87.5, 378.0], [87.6, 383.0], [87.7, 386.0], [87.8, 390.0], [87.9, 396.0], [88.0, 404.0], [88.1, 7973.0], [88.2, 7978.0], [88.3, 7997.0], [88.4, 8000.0], [88.5, 8005.0], [88.6, 8008.0], [88.7, 8011.0], [88.8, 8014.0], [88.9, 13902.0], [89.0, 13904.0], [89.1, 13905.0], [89.2, 13906.0], [89.3, 13906.0], [89.4, 13907.0], [89.5, 13909.0], [89.6, 13909.0], [89.7, 13910.0], [89.8, 13911.0], [89.9, 13914.0], [90.0, 13915.0], [90.1, 13916.0], [90.2, 13919.0], [90.3, 14366.0], [90.4, 16292.0], [90.5, 16295.0], [90.6, 16296.0], [90.7, 16298.0], [90.8, 16299.0], [90.9, 16300.0], [91.0, 16300.0], [91.1, 16301.0], [91.2, 16301.0], [91.3, 16301.0], [91.4, 16302.0], [91.5, 16303.0], [91.6, 16304.0], [91.7, 16306.0], [91.8, 16307.0], [91.9, 16309.0], [92.0, 16590.0], [92.1, 16590.0], [92.2, 16591.0], [92.3, 16591.0], [92.4, 16592.0], [92.5, 16593.0], [92.6, 16594.0], [92.7, 16595.0], [92.8, 16596.0], [92.9, 16597.0], [93.0, 16597.0], [93.1, 16597.0], [93.2, 16598.0], [93.3, 16598.0], [93.4, 16598.0], [93.5, 16598.0], [93.6, 16599.0], [93.7, 16599.0], [93.8, 16599.0], [93.9, 16600.0], [94.0, 16600.0], [94.1, 16600.0], [94.2, 16601.0], [94.3, 16602.0], [94.4, 16602.0], [94.5, 16603.0], [94.6, 16605.0], [94.7, 16606.0], [94.8, 16607.0], [94.9, 16609.0], [95.0, 16610.0], [95.1, 16611.0], [95.2, 16611.0], [95.3, 16613.0], [95.4, 16613.0], [95.5, 16614.0], [95.6, 16614.0], [95.7, 16614.0], [95.8, 16615.0], [95.9, 16615.0], [96.0, 16616.0], [96.1, 16617.0], [96.2, 16618.0], [96.3, 16618.0], [96.4, 16619.0], [96.5, 16619.0], [96.6, 16626.0], [96.7, 16627.0], [96.8, 16631.0], [96.9, 16635.0], [97.0, 16635.0], [97.1, 16635.0], [97.2, 16636.0], [97.3, 16636.0], [97.4, 16636.0], [97.5, 16637.0], [97.6, 16638.0], [97.7, 16639.0], [97.8, 16641.0], [97.9, 16642.0], [98.0, 16643.0], [98.1, 16644.0], [98.2, 16644.0], [98.3, 16645.0], [98.4, 16645.0], [98.5, 16646.0], [98.6, 16646.0], [98.7, 16647.0], [98.8, 16647.0], [98.9, 16648.0], [99.0, 16651.0], [99.1, 16652.0], [99.2, 16667.0], [99.3, 16673.0], [99.4, 16673.0], [99.5, 16674.0], [99.6, 16676.0], [99.7, 16677.0], [99.8, 16680.0], [99.9, 16680.0], [100.0, 16683.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 101.0], [0.3, 202.0], [0.4, 2419.0], [0.5, 2422.0], [0.6, 2424.0], [0.7, 2428.0], [0.8, 2431.0], [0.9, 2433.0], [1.0, 2438.0], [1.1, 2451.0], [1.2, 2456.0], [1.3, 2460.0], [1.4, 2460.0], [1.5, 2462.0], [1.6, 2463.0], [1.7, 2465.0], [1.8, 2465.0], [1.9, 2466.0], [2.0, 2466.0], [2.1, 2467.0], [2.2, 2467.0], [2.3, 2468.0], [2.4, 2468.0], [2.5, 2469.0], [2.6, 2469.0], [2.7, 2469.0], [2.8, 2470.0], [2.9, 2470.0], [3.0, 2470.0], [3.1, 2471.0], [3.2, 2471.0], [3.3, 2472.0], [3.4, 2472.0], [3.5, 2473.0], [3.6, 2473.0], [3.7, 2473.0], [3.8, 2474.0], [3.9, 2475.0], [4.0, 2475.0], [4.1, 2476.0], [4.2, 2476.0], [4.3, 2476.0], [4.4, 2477.0], [4.5, 2477.0], [4.6, 2477.0], [4.7, 2477.0], [4.8, 2478.0], [4.9, 2478.0], [5.0, 2479.0], [5.1, 2479.0], [5.2, 2480.0], [5.3, 2480.0], [5.4, 2480.0], [5.5, 2480.0], [5.6, 2481.0], [5.7, 2481.0], [5.8, 2482.0], [5.9, 2482.0], [6.0, 2482.0], [6.1, 2483.0], [6.2, 2483.0], [6.3, 2484.0], [6.4, 2484.0], [6.5, 2485.0], [6.6, 2485.0], [6.7, 2486.0], [6.8, 2486.0], [6.9, 2486.0], [7.0, 2487.0], [7.1, 2488.0], [7.2, 2488.0], [7.3, 2490.0], [7.4, 2491.0], [7.5, 2491.0], [7.6, 2492.0], [7.7, 2492.0], [7.8, 2493.0], [7.9, 2493.0], [8.0, 2494.0], [8.1, 2495.0], [8.2, 2496.0], [8.3, 2497.0], [8.4, 2498.0], [8.5, 2499.0], [8.6, 2500.0], [8.7, 2501.0], [8.8, 2501.0], [8.9, 2503.0], [9.0, 2504.0], [9.1, 2507.0], [9.2, 2508.0], [9.3, 2511.0], [9.4, 2512.0], [9.5, 2513.0], [9.6, 2513.0], [9.7, 2514.0], [9.8, 2516.0], [9.9, 2516.0], [10.0, 2517.0], [10.1, 2518.0], [10.2, 2519.0], [10.3, 2520.0], [10.4, 2522.0], [10.5, 2523.0], [10.6, 2524.0], [10.7, 2525.0], [10.8, 2526.0], [10.9, 2526.0], [11.0, 2527.0], [11.1, 2529.0], [11.2, 2530.0], [11.3, 2530.0], [11.4, 2531.0], [11.5, 2532.0], [11.6, 2533.0], [11.7, 2534.0], [11.8, 2535.0], [11.9, 2536.0], [12.0, 2537.0], [12.1, 2538.0], [12.2, 2539.0], [12.3, 2539.0], [12.4, 2540.0], [12.5, 2541.0], [12.6, 2541.0], [12.7, 2542.0], [12.8, 2542.0], [12.9, 2543.0], [13.0, 2544.0], [13.1, 2545.0], [13.2, 2546.0], [13.3, 2546.0], [13.4, 2547.0], [13.5, 2547.0], [13.6, 2548.0], [13.7, 2548.0], [13.8, 2549.0], [13.9, 2551.0], [14.0, 2551.0], [14.1, 2551.0], [14.2, 2552.0], [14.3, 2552.0], [14.4, 2553.0], [14.5, 2553.0], [14.6, 2554.0], [14.7, 2555.0], [14.8, 2555.0], [14.9, 2556.0], [15.0, 2557.0], [15.1, 2558.0], [15.2, 2558.0], [15.3, 2559.0], [15.4, 2559.0], [15.5, 2560.0], [15.6, 2561.0], [15.7, 2561.0], [15.8, 2562.0], [15.9, 2563.0], [16.0, 2563.0], [16.1, 2563.0], [16.2, 2564.0], [16.3, 2565.0], [16.4, 2566.0], [16.5, 2567.0], [16.6, 2567.0], [16.7, 2568.0], [16.8, 2568.0], [16.9, 2570.0], [17.0, 2571.0], [17.1, 2572.0], [17.2, 2572.0], [17.3, 2573.0], [17.4, 2573.0], [17.5, 2574.0], [17.6, 2575.0], [17.7, 2576.0], [17.8, 2576.0], [17.9, 2577.0], [18.0, 2578.0], [18.1, 2579.0], [18.2, 2579.0], [18.3, 2579.0], [18.4, 2580.0], [18.5, 2581.0], [18.6, 2581.0], [18.7, 2582.0], [18.8, 2583.0], [18.9, 2583.0], [19.0, 2584.0], [19.1, 2585.0], [19.2, 2586.0], [19.3, 2586.0], [19.4, 2588.0], [19.5, 2588.0], [19.6, 2589.0], [19.7, 2589.0], [19.8, 2590.0], [19.9, 2590.0], [20.0, 2590.0], [20.1, 2591.0], [20.2, 2591.0], [20.3, 2592.0], [20.4, 2593.0], [20.5, 2593.0], [20.6, 2594.0], [20.7, 2594.0], [20.8, 2595.0], [20.9, 2595.0], [21.0, 2595.0], [21.1, 2596.0], [21.2, 2596.0], [21.3, 2597.0], [21.4, 2597.0], [21.5, 2597.0], [21.6, 2598.0], [21.7, 2599.0], [21.8, 2599.0], [21.9, 2599.0], [22.0, 2600.0], [22.1, 2600.0], [22.2, 2600.0], [22.3, 2601.0], [22.4, 2601.0], [22.5, 2601.0], [22.6, 2601.0], [22.7, 2602.0], [22.8, 2602.0], [22.9, 2603.0], [23.0, 2603.0], [23.1, 2604.0], [23.2, 2604.0], [23.3, 2604.0], [23.4, 2604.0], [23.5, 2605.0], [23.6, 2605.0], [23.7, 2606.0], [23.8, 2606.0], [23.9, 2607.0], [24.0, 2607.0], [24.1, 2608.0], [24.2, 2608.0], [24.3, 2608.0], [24.4, 2609.0], [24.5, 2609.0], [24.6, 2609.0], [24.7, 2609.0], [24.8, 2610.0], [24.9, 2610.0], [25.0, 2611.0], [25.1, 2611.0], [25.2, 2611.0], [25.3, 2611.0], [25.4, 2612.0], [25.5, 2612.0], [25.6, 2613.0], [25.7, 2613.0], [25.8, 2613.0], [25.9, 2614.0], [26.0, 2614.0], [26.1, 2614.0], [26.2, 2614.0], [26.3, 2615.0], [26.4, 2615.0], [26.5, 2616.0], [26.6, 2616.0], [26.7, 2617.0], [26.8, 2617.0], [26.9, 2617.0], [27.0, 2617.0], [27.1, 2617.0], [27.2, 2617.0], [27.3, 2618.0], [27.4, 2618.0], [27.5, 2618.0], [27.6, 2619.0], [27.7, 2619.0], [27.8, 2620.0], [27.9, 2620.0], [28.0, 2621.0], [28.1, 2621.0], [28.2, 2621.0], [28.3, 2621.0], [28.4, 2622.0], [28.5, 2622.0], [28.6, 2622.0], [28.7, 2622.0], [28.8, 2623.0], [28.9, 2623.0], [29.0, 2623.0], [29.1, 2624.0], [29.2, 2624.0], [29.3, 2624.0], [29.4, 2625.0], [29.5, 2625.0], [29.6, 2626.0], [29.7, 2626.0], [29.8, 2626.0], [29.9, 2627.0], [30.0, 2627.0], [30.1, 2627.0], [30.2, 2628.0], [30.3, 2628.0], [30.4, 2628.0], [30.5, 2629.0], [30.6, 2629.0], [30.7, 2629.0], [30.8, 2629.0], [30.9, 2630.0], [31.0, 2630.0], [31.1, 2630.0], [31.2, 2630.0], [31.3, 2631.0], [31.4, 2631.0], [31.5, 2631.0], [31.6, 2631.0], [31.7, 2632.0], [31.8, 2632.0], [31.9, 2632.0], [32.0, 2633.0], [32.1, 2633.0], [32.2, 2633.0], [32.3, 2634.0], [32.4, 2634.0], [32.5, 2634.0], [32.6, 2635.0], [32.7, 2635.0], [32.8, 2635.0], [32.9, 2635.0], [33.0, 2636.0], [33.1, 2636.0], [33.2, 2636.0], [33.3, 2636.0], [33.4, 2636.0], [33.5, 2636.0], [33.6, 2637.0], [33.7, 2637.0], [33.8, 2637.0], [33.9, 2637.0], [34.0, 2638.0], [34.1, 2638.0], [34.2, 2638.0], [34.3, 2639.0], [34.4, 2639.0], [34.5, 2639.0], [34.6, 2640.0], [34.7, 2640.0], [34.8, 2640.0], [34.9, 2640.0], [35.0, 2640.0], [35.1, 2641.0], [35.2, 2641.0], [35.3, 2641.0], [35.4, 2641.0], [35.5, 2641.0], [35.6, 2642.0], [35.7, 2642.0], [35.8, 2642.0], [35.9, 2642.0], [36.0, 2643.0], [36.1, 2643.0], [36.2, 2643.0], [36.3, 2643.0], [36.4, 2644.0], [36.5, 2644.0], [36.6, 2644.0], [36.7, 2644.0], [36.8, 2645.0], [36.9, 2645.0], [37.0, 2645.0], [37.1, 2646.0], [37.2, 2646.0], [37.3, 2646.0], [37.4, 2646.0], [37.5, 2647.0], [37.6, 2648.0], [37.7, 2648.0], [37.8, 2648.0], [37.9, 2648.0], [38.0, 2649.0], [38.1, 2649.0], [38.2, 2650.0], [38.3, 2651.0], [38.4, 2652.0], [38.5, 2652.0], [38.6, 2652.0], [38.7, 2652.0], [38.8, 2653.0], [38.9, 2653.0], [39.0, 2654.0], [39.1, 2654.0], [39.2, 2654.0], [39.3, 2655.0], [39.4, 2655.0], [39.5, 2656.0], [39.6, 2656.0], [39.7, 2656.0], [39.8, 2657.0], [39.9, 2657.0], [40.0, 2657.0], [40.1, 2658.0], [40.2, 2658.0], [40.3, 2659.0], [40.4, 2659.0], [40.5, 2659.0], [40.6, 2659.0], [40.7, 2660.0], [40.8, 2661.0], [40.9, 2661.0], [41.0, 2661.0], [41.1, 2661.0], [41.2, 2662.0], [41.3, 2662.0], [41.4, 2663.0], [41.5, 2663.0], [41.6, 2663.0], [41.7, 2663.0], [41.8, 2664.0], [41.9, 2664.0], [42.0, 2664.0], [42.1, 2664.0], [42.2, 2665.0], [42.3, 2666.0], [42.4, 2666.0], [42.5, 2666.0], [42.6, 2667.0], [42.7, 2667.0], [42.8, 2668.0], [42.9, 2668.0], [43.0, 2668.0], [43.1, 2669.0], [43.2, 2669.0], [43.3, 2670.0], [43.4, 2670.0], [43.5, 2670.0], [43.6, 2671.0], [43.7, 2671.0], [43.8, 2671.0], [43.9, 2671.0], [44.0, 2672.0], [44.1, 2672.0], [44.2, 2672.0], [44.3, 2673.0], [44.4, 2673.0], [44.5, 2673.0], [44.6, 2674.0], [44.7, 2674.0], [44.8, 2674.0], [44.9, 2674.0], [45.0, 2675.0], [45.1, 2675.0], [45.2, 2676.0], [45.3, 2676.0], [45.4, 2676.0], [45.5, 2676.0], [45.6, 2676.0], [45.7, 2677.0], [45.8, 2677.0], [45.9, 2678.0], [46.0, 2678.0], [46.1, 2678.0], [46.2, 2678.0], [46.3, 2679.0], [46.4, 2679.0], [46.5, 2680.0], [46.6, 2680.0], [46.7, 2680.0], [46.8, 2681.0], [46.9, 2681.0], [47.0, 2682.0], [47.1, 2682.0], [47.2, 2682.0], [47.3, 2683.0], [47.4, 2683.0], [47.5, 2683.0], [47.6, 2684.0], [47.7, 2684.0], [47.8, 2684.0], [47.9, 2685.0], [48.0, 2686.0], [48.1, 2686.0], [48.2, 2687.0], [48.3, 2687.0], [48.4, 2688.0], [48.5, 2688.0], [48.6, 2689.0], [48.7, 2690.0], [48.8, 2690.0], [48.9, 2691.0], [49.0, 2691.0], [49.1, 2692.0], [49.2, 2692.0], [49.3, 2692.0], [49.4, 2692.0], [49.5, 2692.0], [49.6, 2693.0], [49.7, 2694.0], [49.8, 2694.0], [49.9, 2694.0], [50.0, 2695.0], [50.1, 2695.0], [50.2, 2696.0], [50.3, 2697.0], [50.4, 2698.0], [50.5, 2698.0], [50.6, 2699.0], [50.7, 2700.0], [50.8, 2701.0], [50.9, 2701.0], [51.0, 2702.0], [51.1, 2702.0], [51.2, 2702.0], [51.3, 2703.0], [51.4, 2704.0], [51.5, 2704.0], [51.6, 2705.0], [51.7, 2706.0], [51.8, 2706.0], [51.9, 2707.0], [52.0, 2708.0], [52.1, 2708.0], [52.2, 2709.0], [52.3, 2710.0], [52.4, 2711.0], [52.5, 2711.0], [52.6, 2711.0], [52.7, 2713.0], [52.8, 2713.0], [52.9, 2713.0], [53.0, 2714.0], [53.1, 2715.0], [53.2, 2717.0], [53.3, 2717.0], [53.4, 2718.0], [53.5, 2719.0], [53.6, 2720.0], [53.7, 2720.0], [53.8, 2721.0], [53.9, 2721.0], [54.0, 2722.0], [54.1, 2723.0], [54.2, 2723.0], [54.3, 2725.0], [54.4, 2725.0], [54.5, 2726.0], [54.6, 2728.0], [54.7, 2729.0], [54.8, 2729.0], [54.9, 2729.0], [55.0, 2730.0], [55.1, 2731.0], [55.2, 2731.0], [55.3, 2732.0], [55.4, 2732.0], [55.5, 2733.0], [55.6, 2733.0], [55.7, 2734.0], [55.8, 2734.0], [55.9, 2735.0], [56.0, 2736.0], [56.1, 2737.0], [56.2, 2738.0], [56.3, 2738.0], [56.4, 2739.0], [56.5, 2739.0], [56.6, 2741.0], [56.7, 2741.0], [56.8, 2741.0], [56.9, 2742.0], [57.0, 2742.0], [57.1, 2742.0], [57.2, 2743.0], [57.3, 2744.0], [57.4, 2745.0], [57.5, 2746.0], [57.6, 2746.0], [57.7, 2746.0], [57.8, 2747.0], [57.9, 2747.0], [58.0, 2748.0], [58.1, 2748.0], [58.2, 2749.0], [58.3, 2750.0], [58.4, 2751.0], [58.5, 2752.0], [58.6, 2752.0], [58.7, 2753.0], [58.8, 2754.0], [58.9, 2755.0], [59.0, 2756.0], [59.1, 2758.0], [59.2, 2760.0], [59.3, 2760.0], [59.4, 2761.0], [59.5, 2762.0], [59.6, 2763.0], [59.7, 2764.0], [59.8, 2766.0], [59.9, 2766.0], [60.0, 2767.0], [60.1, 2767.0], [60.2, 2768.0], [60.3, 2769.0], [60.4, 2771.0], [60.5, 2773.0], [60.6, 2775.0], [60.7, 2777.0], [60.8, 2777.0], [60.9, 2779.0], [61.0, 2781.0], [61.1, 2782.0], [61.2, 2782.0], [61.3, 2785.0], [61.4, 2786.0], [61.5, 2787.0], [61.6, 2788.0], [61.7, 2788.0], [61.8, 2790.0], [61.9, 2790.0], [62.0, 2791.0], [62.1, 2791.0], [62.2, 2793.0], [62.3, 2793.0], [62.4, 2794.0], [62.5, 2794.0], [62.6, 2795.0], [62.7, 2795.0], [62.8, 2796.0], [62.9, 2796.0], [63.0, 2797.0], [63.1, 2798.0], [63.2, 2798.0], [63.3, 2799.0], [63.4, 2800.0], [63.5, 2801.0], [63.6, 2802.0], [63.7, 2804.0], [63.8, 2804.0], [63.9, 2805.0], [64.0, 2807.0], [64.1, 2809.0], [64.2, 2811.0], [64.3, 2812.0], [64.4, 2816.0], [64.5, 2819.0], [64.6, 2822.0], [64.7, 2822.0], [64.8, 2825.0], [64.9, 2827.0], [65.0, 2830.0], [65.1, 2832.0], [65.2, 2835.0], [65.3, 2837.0], [65.4, 2838.0], [65.5, 2842.0], [65.6, 2848.0], [65.7, 2849.0], [65.8, 2851.0], [65.9, 2855.0], [66.0, 2858.0], [66.1, 2866.0], [66.2, 2888.0], [66.3, 2905.0], [66.4, 2932.0], [66.5, 2967.0], [66.6, 7834.0], [66.7, 7868.0], [66.8, 7944.0], [66.9, 7967.0], [67.0, 8011.0], [67.1, 8033.0], [67.2, 8071.0], [67.3, 8104.0], [67.4, 8225.0], [67.5, 8315.0], [67.6, 8556.0], [67.7, 8569.0], [67.8, 8631.0], [67.9, 8668.0], [68.0, 8883.0], [68.1, 12899.0], [68.2, 12909.0], [68.3, 12925.0], [68.4, 12934.0], [68.5, 12944.0], [68.6, 12955.0], [68.7, 12967.0], [68.8, 12977.0], [68.9, 12991.0], [69.0, 13007.0], [69.1, 13018.0], [69.2, 13033.0], [69.3, 13055.0], [69.4, 13079.0], [69.5, 13136.0], [69.6, 13208.0], [69.7, 13244.0], [69.8, 13262.0], [69.9, 13278.0], [70.0, 13299.0], [70.1, 13394.0], [70.2, 13482.0], [70.3, 13609.0], [70.4, 13655.0], [70.5, 13678.0], [70.6, 13742.0], [70.7, 13767.0], [70.8, 13793.0], [70.9, 13817.0], [71.0, 13864.0], [71.1, 13898.0], [71.2, 13919.0], [71.3, 13923.0], [71.4, 13955.0], [71.5, 13984.0], [71.6, 14003.0], [71.7, 14035.0], [71.8, 14045.0], [71.9, 14085.0], [72.0, 14116.0], [72.1, 14161.0], [72.2, 14199.0], [72.3, 14272.0], [72.4, 14349.0], [72.5, 14459.0], [72.6, 14502.0], [72.7, 14516.0], [72.8, 14521.0], [72.9, 14542.0], [73.0, 14602.0], [73.1, 14730.0], [73.2, 14770.0], [73.3, 14848.0], [73.4, 15147.0], [73.5, 15262.0], [73.6, 15273.0], [73.7, 15388.0], [73.8, 15457.0], [73.9, 15521.0], [74.0, 15643.0], [74.1, 15707.0], [74.2, 16262.0], [74.3, 16294.0], [74.4, 16339.0], [74.5, 16402.0], [74.6, 16498.0], [74.7, 16506.0], [74.8, 16512.0], [74.9, 16523.0], [75.0, 16526.0], [75.1, 16560.0], [75.2, 16574.0], [75.3, 16616.0], [75.4, 16619.0], [75.5, 16630.0], [75.6, 16635.0], [75.7, 16649.0], [75.8, 16651.0], [75.9, 16657.0], [76.0, 16669.0], [76.1, 16672.0], [76.2, 16677.0], [76.3, 16681.0], [76.4, 16688.0], [76.5, 16692.0], [76.6, 16703.0], [76.7, 16709.0], [76.8, 16714.0], [76.9, 16715.0], [77.0, 16721.0], [77.1, 16724.0], [77.2, 16725.0], [77.3, 16730.0], [77.4, 16731.0], [77.5, 16734.0], [77.6, 16737.0], [77.7, 16740.0], [77.8, 16742.0], [77.9, 16745.0], [78.0, 16751.0], [78.1, 16754.0], [78.2, 16755.0], [78.3, 16757.0], [78.4, 16758.0], [78.5, 16761.0], [78.6, 16765.0], [78.7, 16767.0], [78.8, 16768.0], [78.9, 16769.0], [79.0, 16770.0], [79.1, 16772.0], [79.2, 16775.0], [79.3, 16776.0], [79.4, 16779.0], [79.5, 16779.0], [79.6, 16783.0], [79.7, 16784.0], [79.8, 16785.0], [79.9, 16787.0], [80.0, 16788.0], [80.1, 16789.0], [80.2, 16791.0], [80.3, 16793.0], [80.4, 16794.0], [80.5, 16795.0], [80.6, 16796.0], [80.7, 16799.0], [80.8, 16799.0], [80.9, 16800.0], [81.0, 16801.0], [81.1, 16803.0], [81.2, 16804.0], [81.3, 16807.0], [81.4, 16808.0], [81.5, 16809.0], [81.6, 16811.0], [81.7, 16813.0], [81.8, 16815.0], [81.9, 16817.0], [82.0, 16819.0], [82.1, 16821.0], [82.2, 16823.0], [82.3, 16825.0], [82.4, 16827.0], [82.5, 16829.0], [82.6, 16830.0], [82.7, 16832.0], [82.8, 16834.0], [82.9, 16835.0], [83.0, 16836.0], [83.1, 16837.0], [83.2, 16839.0], [83.3, 16840.0], [83.4, 16841.0], [83.5, 16842.0], [83.6, 16843.0], [83.7, 16844.0], [83.8, 16845.0], [83.9, 16846.0], [84.0, 16847.0], [84.1, 16847.0], [84.2, 16849.0], [84.3, 16851.0], [84.4, 16852.0], [84.5, 16854.0], [84.6, 16856.0], [84.7, 16857.0], [84.8, 16859.0], [84.9, 16860.0], [85.0, 16861.0], [85.1, 16864.0], [85.2, 16868.0], [85.3, 16870.0], [85.4, 16872.0], [85.5, 16873.0], [85.6, 16874.0], [85.7, 16876.0], [85.8, 16878.0], [85.9, 16879.0], [86.0, 16881.0], [86.1, 16882.0], [86.2, 16883.0], [86.3, 16887.0], [86.4, 16888.0], [86.5, 16890.0], [86.6, 16891.0], [86.7, 16894.0], [86.8, 16905.0], [86.9, 16915.0], [87.0, 16917.0], [87.1, 16924.0], [87.2, 16925.0], [87.3, 16926.0], [87.4, 16931.0], [87.5, 16934.0], [87.6, 16937.0], [87.7, 16941.0], [87.8, 16946.0], [87.9, 16948.0], [88.0, 16951.0], [88.1, 16953.0], [88.2, 16954.0], [88.3, 16957.0], [88.4, 16960.0], [88.5, 16962.0], [88.6, 16964.0], [88.7, 16966.0], [88.8, 16967.0], [88.9, 16970.0], [89.0, 16971.0], [89.1, 16973.0], [89.2, 16976.0], [89.3, 16981.0], [89.4, 16982.0], [89.5, 16985.0], [89.6, 16985.0], [89.7, 16988.0], [89.8, 16989.0], [89.9, 16991.0], [90.0, 16992.0], [90.1, 16993.0], [90.2, 16994.0], [90.3, 16995.0], [90.4, 16998.0], [90.5, 16999.0], [90.6, 17003.0], [90.7, 17005.0], [90.8, 17006.0], [90.9, 17007.0], [91.0, 17008.0], [91.1, 17010.0], [91.2, 17011.0], [91.3, 17012.0], [91.4, 17014.0], [91.5, 17015.0], [91.6, 17017.0], [91.7, 17017.0], [91.8, 17019.0], [91.9, 17020.0], [92.0, 17021.0], [92.1, 17022.0], [92.2, 17023.0], [92.3, 17027.0], [92.4, 17028.0], [92.5, 17030.0], [92.6, 17032.0], [92.7, 17034.0], [92.8, 17036.0], [92.9, 17039.0], [93.0, 17041.0], [93.1, 17043.0], [93.2, 17045.0], [93.3, 17047.0], [93.4, 17050.0], [93.5, 17054.0], [93.6, 17055.0], [93.7, 17058.0], [93.8, 17061.0], [93.9, 17063.0], [94.0, 17065.0], [94.1, 17069.0], [94.2, 17075.0], [94.3, 17077.0], [94.4, 17080.0], [94.5, 17083.0], [94.6, 17084.0], [94.7, 17090.0], [94.8, 17092.0], [94.9, 17096.0], [95.0, 17098.0], [95.1, 17107.0], [95.2, 17110.0], [95.3, 17115.0], [95.4, 17121.0], [95.5, 17126.0], [95.6, 17131.0], [95.7, 17134.0], [95.8, 17136.0], [95.9, 17142.0], [96.0, 17146.0], [96.1, 17150.0], [96.2, 17152.0], [96.3, 17153.0], [96.4, 17160.0], [96.5, 17166.0], [96.6, 17175.0], [96.7, 17179.0], [96.8, 17185.0], [96.9, 17196.0], [97.0, 17208.0], [97.1, 17213.0], [97.2, 17223.0], [97.3, 17247.0], [97.4, 17259.0], [97.5, 17261.0], [97.6, 17266.0], [97.7, 17278.0], [97.8, 17286.0], [97.9, 17298.0], [98.0, 17305.0], [98.1, 17312.0], [98.2, 17319.0], [98.3, 17327.0], [98.4, 17329.0], [98.5, 17333.0], [98.6, 17337.0], [98.7, 17340.0], [98.8, 17343.0], [98.9, 17353.0], [99.0, 17359.0], [99.1, 17363.0], [99.2, 17385.0], [99.3, 17409.0], [99.4, 17416.0], [99.5, 17421.0], [99.6, 17445.0], [99.7, 17492.0], [99.8, 17540.0], [99.9, 19040.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 0.0], [93.1, 0.0], [93.2, 0.0], [93.3, 0.0], [93.4, 0.0], [93.5, 0.0], [93.6, 0.0], [93.7, 0.0], [93.8, 0.0], [93.9, 0.0], [94.0, 0.0], [94.1, 0.0], [94.2, 0.0], [94.3, 0.0], [94.4, 0.0], [94.5, 0.0], [94.6, 0.0], [94.7, 0.0], [94.8, 0.0], [94.9, 0.0], [95.0, 0.0], [95.1, 0.0], [95.2, 0.0], [95.3, 0.0], [95.4, 0.0], [95.5, 0.0], [95.6, 0.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 10.0], [4.9, 10.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 12.0], [5.4, 12.0], [5.5, 13.0], [5.6, 13.0], [5.7, 14.0], [5.8, 14.0], [5.9, 15.0], [6.0, 15.0], [6.1, 15.0], [6.2, 16.0], [6.3, 17.0], [6.4, 17.0], [6.5, 17.0], [6.6, 18.0], [6.7, 18.0], [6.8, 19.0], [6.9, 20.0], [7.0, 20.0], [7.1, 21.0], [7.2, 21.0], [7.3, 22.0], [7.4, 22.0], [7.5, 23.0], [7.6, 23.0], [7.7, 24.0], [7.8, 25.0], [7.9, 26.0], [8.0, 26.0], [8.1, 27.0], [8.2, 27.0], [8.3, 28.0], [8.4, 28.0], [8.5, 29.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 30.0], [9.0, 31.0], [9.1, 31.0], [9.2, 32.0], [9.3, 34.0], [9.4, 34.0], [9.5, 34.0], [9.6, 34.0], [9.7, 36.0], [9.8, 36.0], [9.9, 37.0], [10.0, 38.0], [10.1, 38.0], [10.2, 39.0], [10.3, 39.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 43.0], [10.8, 43.0], [10.9, 43.0], [11.0, 44.0], [11.1, 44.0], [11.2, 45.0], [11.3, 45.0], [11.4, 45.0], [11.5, 45.0], [11.6, 46.0], [11.7, 47.0], [11.8, 48.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 50.0], [12.3, 50.0], [12.4, 50.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 51.0], [13.0, 51.0], [13.1, 51.0], [13.2, 51.0], [13.3, 51.0], [13.4, 52.0], [13.5, 52.0], [13.6, 52.0], [13.7, 53.0], [13.8, 53.0], [13.9, 53.0], [14.0, 54.0], [14.1, 54.0], [14.2, 54.0], [14.3, 55.0], [14.4, 55.0], [14.5, 55.0], [14.6, 55.0], [14.7, 55.0], [14.8, 56.0], [14.9, 56.0], [15.0, 56.0], [15.1, 56.0], [15.2, 57.0], [15.3, 57.0], [15.4, 57.0], [15.5, 58.0], [15.6, 58.0], [15.7, 58.0], [15.8, 58.0], [15.9, 58.0], [16.0, 58.0], [16.1, 58.0], [16.2, 59.0], [16.3, 59.0], [16.4, 59.0], [16.5, 59.0], [16.6, 60.0], [16.7, 60.0], [16.8, 60.0], [16.9, 61.0], [17.0, 61.0], [17.1, 61.0], [17.2, 62.0], [17.3, 62.0], [17.4, 62.0], [17.5, 63.0], [17.6, 63.0], [17.7, 63.0], [17.8, 64.0], [17.9, 64.0], [18.0, 65.0], [18.1, 65.0], [18.2, 66.0], [18.3, 66.0], [18.4, 66.0], [18.5, 66.0], [18.6, 66.0], [18.7, 67.0], [18.8, 67.0], [18.9, 67.0], [19.0, 68.0], [19.1, 68.0], [19.2, 68.0], [19.3, 68.0], [19.4, 69.0], [19.5, 69.0], [19.6, 69.0], [19.7, 70.0], [19.8, 70.0], [19.9, 70.0], [20.0, 70.0], [20.1, 70.0], [20.2, 71.0], [20.3, 71.0], [20.4, 71.0], [20.5, 71.0], [20.6, 72.0], [20.7, 72.0], [20.8, 72.0], [20.9, 73.0], [21.0, 73.0], [21.1, 74.0], [21.2, 74.0], [21.3, 75.0], [21.4, 75.0], [21.5, 75.0], [21.6, 76.0], [21.7, 76.0], [21.8, 76.0], [21.9, 76.0], [22.0, 76.0], [22.1, 76.0], [22.2, 77.0], [22.3, 77.0], [22.4, 77.0], [22.5, 77.0], [22.6, 77.0], [22.7, 77.0], [22.8, 77.0], [22.9, 78.0], [23.0, 78.0], [23.1, 78.0], [23.2, 78.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 79.0], [23.7, 79.0], [23.8, 79.0], [23.9, 79.0], [24.0, 79.0], [24.1, 79.0], [24.2, 79.0], [24.3, 79.0], [24.4, 79.0], [24.5, 79.0], [24.6, 80.0], [24.7, 80.0], [24.8, 80.0], [24.9, 80.0], [25.0, 80.0], [25.1, 81.0], [25.2, 81.0], [25.3, 81.0], [25.4, 81.0], [25.5, 81.0], [25.6, 82.0], [25.7, 82.0], [25.8, 82.0], [25.9, 82.0], [26.0, 83.0], [26.1, 83.0], [26.2, 83.0], [26.3, 83.0], [26.4, 84.0], [26.5, 84.0], [26.6, 84.0], [26.7, 86.0], [26.8, 86.0], [26.9, 86.0], [27.0, 87.0], [27.1, 88.0], [27.2, 88.0], [27.3, 88.0], [27.4, 89.0], [27.5, 89.0], [27.6, 90.0], [27.7, 90.0], [27.8, 90.0], [27.9, 91.0], [28.0, 91.0], [28.1, 91.0], [28.2, 92.0], [28.3, 92.0], [28.4, 92.0], [28.5, 93.0], [28.6, 94.0], [28.7, 94.0], [28.8, 95.0], [28.9, 95.0], [29.0, 95.0], [29.1, 95.0], [29.2, 96.0], [29.3, 97.0], [29.4, 97.0], [29.5, 97.0], [29.6, 98.0], [29.7, 98.0], [29.8, 98.0], [29.9, 98.0], [30.0, 99.0], [30.1, 99.0], [30.2, 99.0], [30.3, 100.0], [30.4, 100.0], [30.5, 100.0], [30.6, 100.0], [30.7, 101.0], [30.8, 101.0], [30.9, 102.0], [31.0, 103.0], [31.1, 103.0], [31.2, 104.0], [31.3, 104.0], [31.4, 105.0], [31.5, 105.0], [31.6, 105.0], [31.7, 106.0], [31.8, 106.0], [31.9, 107.0], [32.0, 107.0], [32.1, 107.0], [32.2, 108.0], [32.3, 108.0], [32.4, 108.0], [32.5, 108.0], [32.6, 108.0], [32.7, 108.0], [32.8, 109.0], [32.9, 109.0], [33.0, 109.0], [33.1, 110.0], [33.2, 110.0], [33.3, 112.0], [33.4, 112.0], [33.5, 112.0], [33.6, 113.0], [33.7, 113.0], [33.8, 114.0], [33.9, 114.0], [34.0, 114.0], [34.1, 114.0], [34.2, 115.0], [34.3, 115.0], [34.4, 115.0], [34.5, 116.0], [34.6, 116.0], [34.7, 116.0], [34.8, 116.0], [34.9, 116.0], [35.0, 117.0], [35.1, 118.0], [35.2, 118.0], [35.3, 118.0], [35.4, 118.0], [35.5, 119.0], [35.6, 119.0], [35.7, 120.0], [35.8, 120.0], [35.9, 120.0], [36.0, 120.0], [36.1, 121.0], [36.2, 121.0], [36.3, 122.0], [36.4, 122.0], [36.5, 122.0], [36.6, 123.0], [36.7, 123.0], [36.8, 124.0], [36.9, 125.0], [37.0, 125.0], [37.1, 125.0], [37.2, 126.0], [37.3, 126.0], [37.4, 126.0], [37.5, 127.0], [37.6, 128.0], [37.7, 129.0], [37.8, 129.0], [37.9, 130.0], [38.0, 131.0], [38.1, 131.0], [38.2, 131.0], [38.3, 132.0], [38.4, 133.0], [38.5, 133.0], [38.6, 134.0], [38.7, 135.0], [38.8, 136.0], [38.9, 138.0], [39.0, 138.0], [39.1, 139.0], [39.2, 139.0], [39.3, 140.0], [39.4, 141.0], [39.5, 141.0], [39.6, 141.0], [39.7, 142.0], [39.8, 142.0], [39.9, 142.0], [40.0, 144.0], [40.1, 145.0], [40.2, 146.0], [40.3, 146.0], [40.4, 148.0], [40.5, 148.0], [40.6, 149.0], [40.7, 151.0], [40.8, 151.0], [40.9, 152.0], [41.0, 152.0], [41.1, 153.0], [41.2, 153.0], [41.3, 154.0], [41.4, 154.0], [41.5, 155.0], [41.6, 157.0], [41.7, 158.0], [41.8, 158.0], [41.9, 159.0], [42.0, 161.0], [42.1, 161.0], [42.2, 163.0], [42.3, 164.0], [42.4, 166.0], [42.5, 166.0], [42.6, 168.0], [42.7, 169.0], [42.8, 169.0], [42.9, 170.0], [43.0, 171.0], [43.1, 172.0], [43.2, 173.0], [43.3, 174.0], [43.4, 175.0], [43.5, 175.0], [43.6, 175.0], [43.7, 176.0], [43.8, 176.0], [43.9, 177.0], [44.0, 178.0], [44.1, 179.0], [44.2, 182.0], [44.3, 183.0], [44.4, 185.0], [44.5, 186.0], [44.6, 186.0], [44.7, 187.0], [44.8, 188.0], [44.9, 189.0], [45.0, 191.0], [45.1, 192.0], [45.2, 194.0], [45.3, 195.0], [45.4, 198.0], [45.5, 200.0], [45.6, 201.0], [45.7, 202.0], [45.8, 202.0], [45.9, 203.0], [46.0, 204.0], [46.1, 204.0], [46.2, 204.0], [46.3, 206.0], [46.4, 207.0], [46.5, 207.0], [46.6, 208.0], [46.7, 208.0], [46.8, 210.0], [46.9, 211.0], [47.0, 212.0], [47.1, 213.0], [47.2, 214.0], [47.3, 214.0], [47.4, 214.0], [47.5, 214.0], [47.6, 215.0], [47.7, 215.0], [47.8, 215.0], [47.9, 215.0], [48.0, 216.0], [48.1, 216.0], [48.2, 216.0], [48.3, 217.0], [48.4, 217.0], [48.5, 217.0], [48.6, 217.0], [48.7, 217.0], [48.8, 217.0], [48.9, 217.0], [49.0, 218.0], [49.1, 218.0], [49.2, 218.0], [49.3, 218.0], [49.4, 218.0], [49.5, 218.0], [49.6, 218.0], [49.7, 218.0], [49.8, 218.0], [49.9, 219.0], [50.0, 219.0], [50.1, 219.0], [50.2, 219.0], [50.3, 219.0], [50.4, 219.0], [50.5, 219.0], [50.6, 219.0], [50.7, 219.0], [50.8, 219.0], [50.9, 219.0], [51.0, 219.0], [51.1, 220.0], [51.2, 220.0], [51.3, 220.0], [51.4, 220.0], [51.5, 220.0], [51.6, 220.0], [51.7, 220.0], [51.8, 220.0], [51.9, 220.0], [52.0, 220.0], [52.1, 220.0], [52.2, 220.0], [52.3, 220.0], [52.4, 221.0], [52.5, 221.0], [52.6, 221.0], [52.7, 221.0], [52.8, 221.0], [52.9, 221.0], [53.0, 221.0], [53.1, 221.0], [53.2, 221.0], [53.3, 221.0], [53.4, 221.0], [53.5, 221.0], [53.6, 221.0], [53.7, 221.0], [53.8, 221.0], [53.9, 222.0], [54.0, 222.0], [54.1, 222.0], [54.2, 222.0], [54.3, 222.0], [54.4, 222.0], [54.5, 222.0], [54.6, 222.0], [54.7, 222.0], [54.8, 222.0], [54.9, 222.0], [55.0, 222.0], [55.1, 222.0], [55.2, 222.0], [55.3, 222.0], [55.4, 222.0], [55.5, 223.0], [55.6, 223.0], [55.7, 223.0], [55.8, 223.0], [55.9, 223.0], [56.0, 223.0], [56.1, 223.0], [56.2, 223.0], [56.3, 223.0], [56.4, 223.0], [56.5, 223.0], [56.6, 223.0], [56.7, 223.0], [56.8, 223.0], [56.9, 224.0], [57.0, 224.0], [57.1, 224.0], [57.2, 224.0], [57.3, 224.0], [57.4, 224.0], [57.5, 224.0], [57.6, 224.0], [57.7, 224.0], [57.8, 224.0], [57.9, 224.0], [58.0, 224.0], [58.1, 224.0], [58.2, 225.0], [58.3, 225.0], [58.4, 225.0], [58.5, 225.0], [58.6, 225.0], [58.7, 225.0], [58.8, 225.0], [58.9, 225.0], [59.0, 225.0], [59.1, 225.0], [59.2, 225.0], [59.3, 225.0], [59.4, 225.0], [59.5, 225.0], [59.6, 225.0], [59.7, 226.0], [59.8, 226.0], [59.9, 226.0], [60.0, 226.0], [60.1, 226.0], [60.2, 226.0], [60.3, 227.0], [60.4, 227.0], [60.5, 227.0], [60.6, 227.0], [60.7, 227.0], [60.8, 228.0], [60.9, 228.0], [61.0, 228.0], [61.1, 228.0], [61.2, 228.0], [61.3, 228.0], [61.4, 228.0], [61.5, 228.0], [61.6, 228.0], [61.7, 228.0], [61.8, 228.0], [61.9, 228.0], [62.0, 228.0], [62.1, 228.0], [62.2, 229.0], [62.3, 229.0], [62.4, 229.0], [62.5, 229.0], [62.6, 229.0], [62.7, 229.0], [62.8, 229.0], [62.9, 229.0], [63.0, 229.0], [63.1, 230.0], [63.2, 230.0], [63.3, 230.0], [63.4, 230.0], [63.5, 230.0], [63.6, 231.0], [63.7, 231.0], [63.8, 232.0], [63.9, 232.0], [64.0, 232.0], [64.1, 232.0], [64.2, 232.0], [64.3, 232.0], [64.4, 232.0], [64.5, 233.0], [64.6, 233.0], [64.7, 233.0], [64.8, 233.0], [64.9, 233.0], [65.0, 233.0], [65.1, 234.0], [65.2, 234.0], [65.3, 234.0], [65.4, 235.0], [65.5, 236.0], [65.6, 237.0], [65.7, 237.0], [65.8, 237.0], [65.9, 238.0], [66.0, 238.0], [66.1, 238.0], [66.2, 238.0], [66.3, 239.0], [66.4, 239.0], [66.5, 240.0], [66.6, 240.0], [66.7, 240.0], [66.8, 241.0], [66.9, 241.0], [67.0, 241.0], [67.1, 242.0], [67.2, 246.0], [67.3, 247.0], [67.4, 250.0], [67.5, 250.0], [67.6, 251.0], [67.7, 252.0], [67.8, 254.0], [67.9, 255.0], [68.0, 258.0], [68.1, 260.0], [68.2, 261.0], [68.3, 262.0], [68.4, 264.0], [68.5, 265.0], [68.6, 266.0], [68.7, 266.0], [68.8, 268.0], [68.9, 268.0], [69.0, 269.0], [69.1, 270.0], [69.2, 272.0], [69.3, 272.0], [69.4, 272.0], [69.5, 272.0], [69.6, 273.0], [69.7, 273.0], [69.8, 273.0], [69.9, 275.0], [70.0, 275.0], [70.1, 276.0], [70.2, 276.0], [70.3, 277.0], [70.4, 277.0], [70.5, 278.0], [70.6, 278.0], [70.7, 278.0], [70.8, 278.0], [70.9, 279.0], [71.0, 279.0], [71.1, 280.0], [71.2, 281.0], [71.3, 281.0], [71.4, 281.0], [71.5, 281.0], [71.6, 282.0], [71.7, 282.0], [71.8, 282.0], [71.9, 283.0], [72.0, 283.0], [72.1, 284.0], [72.2, 284.0], [72.3, 284.0], [72.4, 285.0], [72.5, 285.0], [72.6, 285.0], [72.7, 286.0], [72.8, 286.0], [72.9, 287.0], [73.0, 288.0], [73.1, 288.0], [73.2, 289.0], [73.3, 290.0], [73.4, 293.0], [73.5, 294.0], [73.6, 298.0], [73.7, 302.0], [73.8, 307.0], [73.9, 308.0], [74.0, 310.0], [74.1, 310.0], [74.2, 311.0], [74.3, 311.0], [74.4, 312.0], [74.5, 312.0], [74.6, 313.0], [74.7, 313.0], [74.8, 313.0], [74.9, 314.0], [75.0, 315.0], [75.1, 316.0], [75.2, 318.0], [75.3, 321.0], [75.4, 321.0], [75.5, 321.0], [75.6, 322.0], [75.7, 322.0], [75.8, 323.0], [75.9, 323.0], [76.0, 323.0], [76.1, 324.0], [76.2, 325.0], [76.3, 325.0], [76.4, 325.0], [76.5, 325.0], [76.6, 326.0], [76.7, 326.0], [76.8, 327.0], [76.9, 327.0], [77.0, 328.0], [77.1, 328.0], [77.2, 328.0], [77.3, 328.0], [77.4, 328.0], [77.5, 329.0], [77.6, 329.0], [77.7, 330.0], [77.8, 330.0], [77.9, 331.0], [78.0, 331.0], [78.1, 331.0], [78.2, 331.0], [78.3, 332.0], [78.4, 333.0], [78.5, 338.0], [78.6, 339.0], [78.7, 339.0], [78.8, 340.0], [78.9, 340.0], [79.0, 341.0], [79.1, 344.0], [79.2, 347.0], [79.3, 348.0], [79.4, 348.0], [79.5, 349.0], [79.6, 353.0], [79.7, 355.0], [79.8, 356.0], [79.9, 357.0], [80.0, 359.0], [80.1, 359.0], [80.2, 360.0], [80.3, 360.0], [80.4, 360.0], [80.5, 360.0], [80.6, 360.0], [80.7, 363.0], [80.8, 363.0], [80.9, 364.0], [81.0, 365.0], [81.1, 367.0], [81.2, 367.0], [81.3, 369.0], [81.4, 370.0], [81.5, 371.0], [81.6, 372.0], [81.7, 372.0], [81.8, 372.0], [81.9, 373.0], [82.0, 373.0], [82.1, 373.0], [82.2, 374.0], [82.3, 374.0], [82.4, 375.0], [82.5, 377.0], [82.6, 377.0], [82.7, 378.0], [82.8, 378.0], [82.9, 379.0], [83.0, 379.0], [83.1, 379.0], [83.2, 381.0], [83.3, 383.0], [83.4, 384.0], [83.5, 387.0], [83.6, 388.0], [83.7, 390.0], [83.8, 393.0], [83.9, 395.0], [84.0, 396.0], [84.1, 397.0], [84.2, 400.0], [84.3, 402.0], [84.4, 403.0], [84.5, 404.0], [84.6, 405.0], [84.7, 407.0], [84.8, 410.0], [84.9, 416.0], [85.0, 425.0], [85.1, 431.0], [85.2, 435.0], [85.3, 445.0], [85.4, 449.0], [85.5, 487.0], [85.6, 537.0], [85.7, 570.0], [85.8, 634.0], [85.9, 871.0], [86.0, 7742.0], [86.1, 7766.0], [86.2, 7775.0], [86.3, 7847.0], [86.4, 7883.0], [86.5, 7923.0], [86.6, 7976.0], [86.7, 13813.0], [86.8, 13819.0], [86.9, 13827.0], [87.0, 13831.0], [87.1, 13840.0], [87.2, 13845.0], [87.3, 13856.0], [87.4, 13859.0], [87.5, 13862.0], [87.6, 13866.0], [87.7, 13871.0], [87.8, 13893.0], [87.9, 13896.0], [88.0, 13912.0], [88.1, 13920.0], [88.2, 14375.0], [88.3, 16228.0], [88.4, 16234.0], [88.5, 16244.0], [88.6, 16255.0], [88.7, 16258.0], [88.8, 16277.0], [88.9, 16284.0], [89.0, 16290.0], [89.1, 16294.0], [89.2, 16300.0], [89.3, 16302.0], [89.4, 16306.0], [89.5, 16499.0], [89.6, 16513.0], [89.7, 16516.0], [89.8, 16523.0], [89.9, 16527.0], [90.0, 16530.0], [90.1, 16531.0], [90.2, 16534.0], [90.3, 16534.0], [90.4, 16535.0], [90.5, 16536.0], [90.6, 16538.0], [90.7, 16539.0], [90.8, 16540.0], [90.9, 16541.0], [91.0, 16544.0], [91.1, 16546.0], [91.2, 16547.0], [91.3, 16548.0], [91.4, 16550.0], [91.5, 16550.0], [91.6, 16555.0], [91.7, 16557.0], [91.8, 16558.0], [91.9, 16559.0], [92.0, 16561.0], [92.1, 16561.0], [92.2, 16563.0], [92.3, 16566.0], [92.4, 16567.0], [92.5, 16568.0], [92.6, 16569.0], [92.7, 16571.0], [92.8, 16572.0], [92.9, 16573.0], [93.0, 16575.0], [93.1, 16576.0], [93.2, 16578.0], [93.3, 16579.0], [93.4, 16582.0], [93.5, 16584.0], [93.6, 16585.0], [93.7, 16586.0], [93.8, 16588.0], [93.9, 16589.0], [94.0, 16591.0], [94.1, 16591.0], [94.2, 16592.0], [94.3, 16593.0], [94.4, 16593.0], [94.5, 16594.0], [94.6, 16595.0], [94.7, 16595.0], [94.8, 16597.0], [94.9, 16597.0], [95.0, 16598.0], [95.1, 16598.0], [95.2, 16599.0], [95.3, 16600.0], [95.4, 16601.0], [95.5, 16601.0], [95.6, 16602.0], [95.7, 16603.0], [95.8, 16604.0], [95.9, 16604.0], [96.0, 16605.0], [96.1, 16607.0], [96.2, 16608.0], [96.3, 16609.0], [96.4, 16610.0], [96.5, 16612.0], [96.6, 16612.0], [96.7, 16613.0], [96.8, 16613.0], [96.9, 16615.0], [97.0, 16615.0], [97.1, 16615.0], [97.2, 16616.0], [97.3, 16617.0], [97.4, 16618.0], [97.5, 16618.0], [97.6, 16620.0], [97.7, 16621.0], [97.8, 16627.0], [97.9, 16628.0], [98.0, 16629.0], [98.1, 16630.0], [98.2, 16631.0], [98.3, 16632.0], [98.4, 16633.0], [98.5, 16635.0], [98.6, 16636.0], [98.7, 16636.0], [98.8, 16637.0], [98.9, 16638.0], [99.0, 16640.0], [99.1, 16641.0], [99.2, 16644.0], [99.3, 16645.0], [99.4, 16647.0], [99.5, 16658.0], [99.6, 16662.0], [99.7, 16669.0], [99.8, 16673.0], [99.9, 16675.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 7.0], [3.6, 7.0], [3.7, 8.0], [3.8, 8.0], [3.9, 8.0], [4.0, 9.0], [4.1, 9.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 12.0], [5.2, 12.0], [5.3, 13.0], [5.4, 13.0], [5.5, 14.0], [5.6, 15.0], [5.7, 15.0], [5.8, 16.0], [5.9, 17.0], [6.0, 18.0], [6.1, 18.0], [6.2, 19.0], [6.3, 20.0], [6.4, 20.0], [6.5, 21.0], [6.6, 22.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 24.0], [7.1, 27.0], [7.2, 27.0], [7.3, 29.0], [7.4, 29.0], [7.5, 31.0], [7.6, 31.0], [7.7, 32.0], [7.8, 33.0], [7.9, 35.0], [8.0, 35.0], [8.1, 37.0], [8.2, 38.0], [8.3, 39.0], [8.4, 40.0], [8.5, 41.0], [8.6, 42.0], [8.7, 42.0], [8.8, 43.0], [8.9, 43.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 45.0], [9.4, 45.0], [9.5, 45.0], [9.6, 45.0], [9.7, 45.0], [9.8, 46.0], [9.9, 47.0], [10.0, 47.0], [10.1, 47.0], [10.2, 47.0], [10.3, 47.0], [10.4, 48.0], [10.5, 49.0], [10.6, 50.0], [10.7, 50.0], [10.8, 50.0], [10.9, 50.0], [11.0, 50.0], [11.1, 51.0], [11.2, 51.0], [11.3, 51.0], [11.4, 51.0], [11.5, 52.0], [11.6, 52.0], [11.7, 52.0], [11.8, 52.0], [11.9, 53.0], [12.0, 53.0], [12.1, 53.0], [12.2, 53.0], [12.3, 54.0], [12.4, 54.0], [12.5, 54.0], [12.6, 55.0], [12.7, 55.0], [12.8, 55.0], [12.9, 55.0], [13.0, 56.0], [13.1, 56.0], [13.2, 57.0], [13.3, 57.0], [13.4, 57.0], [13.5, 57.0], [13.6, 58.0], [13.7, 58.0], [13.8, 58.0], [13.9, 58.0], [14.0, 59.0], [14.1, 59.0], [14.2, 59.0], [14.3, 59.0], [14.4, 60.0], [14.5, 60.0], [14.6, 60.0], [14.7, 61.0], [14.8, 61.0], [14.9, 61.0], [15.0, 61.0], [15.1, 62.0], [15.2, 62.0], [15.3, 63.0], [15.4, 63.0], [15.5, 63.0], [15.6, 63.0], [15.7, 63.0], [15.8, 64.0], [15.9, 64.0], [16.0, 64.0], [16.1, 64.0], [16.2, 65.0], [16.3, 65.0], [16.4, 65.0], [16.5, 66.0], [16.6, 66.0], [16.7, 66.0], [16.8, 66.0], [16.9, 67.0], [17.0, 67.0], [17.1, 67.0], [17.2, 67.0], [17.3, 68.0], [17.4, 68.0], [17.5, 69.0], [17.6, 69.0], [17.7, 69.0], [17.8, 69.0], [17.9, 70.0], [18.0, 71.0], [18.1, 71.0], [18.2, 71.0], [18.3, 72.0], [18.4, 72.0], [18.5, 72.0], [18.6, 73.0], [18.7, 73.0], [18.8, 73.0], [18.9, 74.0], [19.0, 74.0], [19.1, 74.0], [19.2, 75.0], [19.3, 75.0], [19.4, 76.0], [19.5, 76.0], [19.6, 76.0], [19.7, 76.0], [19.8, 76.0], [19.9, 76.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 78.0], [20.6, 78.0], [20.7, 78.0], [20.8, 78.0], [20.9, 78.0], [21.0, 78.0], [21.1, 79.0], [21.2, 79.0], [21.3, 79.0], [21.4, 79.0], [21.5, 79.0], [21.6, 80.0], [21.7, 80.0], [21.8, 81.0], [21.9, 81.0], [22.0, 81.0], [22.1, 82.0], [22.2, 82.0], [22.3, 83.0], [22.4, 83.0], [22.5, 83.0], [22.6, 83.0], [22.7, 84.0], [22.8, 84.0], [22.9, 84.0], [23.0, 84.0], [23.1, 85.0], [23.2, 85.0], [23.3, 85.0], [23.4, 86.0], [23.5, 86.0], [23.6, 87.0], [23.7, 88.0], [23.8, 88.0], [23.9, 89.0], [24.0, 90.0], [24.1, 90.0], [24.2, 90.0], [24.3, 91.0], [24.4, 91.0], [24.5, 92.0], [24.6, 92.0], [24.7, 93.0], [24.8, 94.0], [24.9, 94.0], [25.0, 95.0], [25.1, 95.0], [25.2, 95.0], [25.3, 97.0], [25.4, 97.0], [25.5, 97.0], [25.6, 97.0], [25.7, 98.0], [25.8, 98.0], [25.9, 99.0], [26.0, 99.0], [26.1, 100.0], [26.2, 100.0], [26.3, 100.0], [26.4, 100.0], [26.5, 101.0], [26.6, 101.0], [26.7, 102.0], [26.8, 103.0], [26.9, 103.0], [27.0, 103.0], [27.1, 104.0], [27.2, 104.0], [27.3, 105.0], [27.4, 105.0], [27.5, 106.0], [27.6, 106.0], [27.7, 107.0], [27.8, 108.0], [27.9, 108.0], [28.0, 109.0], [28.1, 110.0], [28.2, 110.0], [28.3, 111.0], [28.4, 111.0], [28.5, 112.0], [28.6, 113.0], [28.7, 113.0], [28.8, 114.0], [28.9, 114.0], [29.0, 115.0], [29.1, 115.0], [29.2, 116.0], [29.3, 117.0], [29.4, 117.0], [29.5, 119.0], [29.6, 119.0], [29.7, 119.0], [29.8, 120.0], [29.9, 121.0], [30.0, 121.0], [30.1, 122.0], [30.2, 122.0], [30.3, 122.0], [30.4, 123.0], [30.5, 123.0], [30.6, 123.0], [30.7, 124.0], [30.8, 125.0], [30.9, 125.0], [31.0, 125.0], [31.1, 125.0], [31.2, 126.0], [31.3, 127.0], [31.4, 127.0], [31.5, 128.0], [31.6, 128.0], [31.7, 128.0], [31.8, 128.0], [31.9, 129.0], [32.0, 129.0], [32.1, 130.0], [32.2, 131.0], [32.3, 131.0], [32.4, 132.0], [32.5, 133.0], [32.6, 133.0], [32.7, 133.0], [32.8, 134.0], [32.9, 134.0], [33.0, 134.0], [33.1, 135.0], [33.2, 136.0], [33.3, 136.0], [33.4, 136.0], [33.5, 137.0], [33.6, 138.0], [33.7, 138.0], [33.8, 139.0], [33.9, 139.0], [34.0, 140.0], [34.1, 140.0], [34.2, 141.0], [34.3, 141.0], [34.4, 141.0], [34.5, 142.0], [34.6, 142.0], [34.7, 142.0], [34.8, 143.0], [34.9, 143.0], [35.0, 143.0], [35.1, 143.0], [35.2, 144.0], [35.3, 144.0], [35.4, 145.0], [35.5, 146.0], [35.6, 146.0], [35.7, 146.0], [35.8, 147.0], [35.9, 149.0], [36.0, 149.0], [36.1, 149.0], [36.2, 150.0], [36.3, 151.0], [36.4, 152.0], [36.5, 153.0], [36.6, 154.0], [36.7, 155.0], [36.8, 155.0], [36.9, 156.0], [37.0, 156.0], [37.1, 157.0], [37.2, 157.0], [37.3, 158.0], [37.4, 159.0], [37.5, 159.0], [37.6, 159.0], [37.7, 159.0], [37.8, 160.0], [37.9, 161.0], [38.0, 161.0], [38.1, 162.0], [38.2, 162.0], [38.3, 162.0], [38.4, 163.0], [38.5, 163.0], [38.6, 163.0], [38.7, 163.0], [38.8, 164.0], [38.9, 164.0], [39.0, 164.0], [39.1, 164.0], [39.2, 164.0], [39.3, 165.0], [39.4, 165.0], [39.5, 165.0], [39.6, 165.0], [39.7, 165.0], [39.8, 166.0], [39.9, 166.0], [40.0, 166.0], [40.1, 167.0], [40.2, 167.0], [40.3, 167.0], [40.4, 168.0], [40.5, 168.0], [40.6, 168.0], [40.7, 169.0], [40.8, 169.0], [40.9, 169.0], [41.0, 170.0], [41.1, 170.0], [41.2, 170.0], [41.3, 170.0], [41.4, 170.0], [41.5, 170.0], [41.6, 171.0], [41.7, 171.0], [41.8, 171.0], [41.9, 171.0], [42.0, 171.0], [42.1, 172.0], [42.2, 172.0], [42.3, 172.0], [42.4, 172.0], [42.5, 173.0], [42.6, 173.0], [42.7, 173.0], [42.8, 173.0], [42.9, 173.0], [43.0, 173.0], [43.1, 174.0], [43.2, 174.0], [43.3, 175.0], [43.4, 175.0], [43.5, 175.0], [43.6, 175.0], [43.7, 176.0], [43.8, 176.0], [43.9, 176.0], [44.0, 176.0], [44.1, 176.0], [44.2, 177.0], [44.3, 177.0], [44.4, 177.0], [44.5, 177.0], [44.6, 178.0], [44.7, 178.0], [44.8, 178.0], [44.9, 179.0], [45.0, 179.0], [45.1, 179.0], [45.2, 180.0], [45.3, 180.0], [45.4, 180.0], [45.5, 180.0], [45.6, 180.0], [45.7, 181.0], [45.8, 181.0], [45.9, 181.0], [46.0, 181.0], [46.1, 181.0], [46.2, 181.0], [46.3, 182.0], [46.4, 182.0], [46.5, 182.0], [46.6, 182.0], [46.7, 182.0], [46.8, 183.0], [46.9, 183.0], [47.0, 183.0], [47.1, 184.0], [47.2, 184.0], [47.3, 184.0], [47.4, 184.0], [47.5, 185.0], [47.6, 185.0], [47.7, 185.0], [47.8, 185.0], [47.9, 185.0], [48.0, 185.0], [48.1, 186.0], [48.2, 186.0], [48.3, 186.0], [48.4, 186.0], [48.5, 186.0], [48.6, 187.0], [48.7, 187.0], [48.8, 187.0], [48.9, 188.0], [49.0, 188.0], [49.1, 188.0], [49.2, 188.0], [49.3, 188.0], [49.4, 189.0], [49.5, 189.0], [49.6, 189.0], [49.7, 190.0], [49.8, 190.0], [49.9, 190.0], [50.0, 190.0], [50.1, 190.0], [50.2, 190.0], [50.3, 191.0], [50.4, 191.0], [50.5, 191.0], [50.6, 192.0], [50.7, 192.0], [50.8, 192.0], [50.9, 192.0], [51.0, 192.0], [51.1, 193.0], [51.2, 193.0], [51.3, 194.0], [51.4, 194.0], [51.5, 194.0], [51.6, 194.0], [51.7, 195.0], [51.8, 195.0], [51.9, 195.0], [52.0, 195.0], [52.1, 195.0], [52.2, 196.0], [52.3, 196.0], [52.4, 196.0], [52.5, 196.0], [52.6, 197.0], [52.7, 197.0], [52.8, 197.0], [52.9, 198.0], [53.0, 198.0], [53.1, 198.0], [53.2, 198.0], [53.3, 198.0], [53.4, 199.0], [53.5, 199.0], [53.6, 199.0], [53.7, 200.0], [53.8, 200.0], [53.9, 200.0], [54.0, 201.0], [54.1, 201.0], [54.2, 201.0], [54.3, 202.0], [54.4, 202.0], [54.5, 202.0], [54.6, 202.0], [54.7, 202.0], [54.8, 203.0], [54.9, 203.0], [55.0, 203.0], [55.1, 203.0], [55.2, 203.0], [55.3, 203.0], [55.4, 204.0], [55.5, 204.0], [55.6, 204.0], [55.7, 204.0], [55.8, 205.0], [55.9, 205.0], [56.0, 205.0], [56.1, 205.0], [56.2, 205.0], [56.3, 206.0], [56.4, 206.0], [56.5, 206.0], [56.6, 206.0], [56.7, 206.0], [56.8, 206.0], [56.9, 207.0], [57.0, 207.0], [57.1, 207.0], [57.2, 208.0], [57.3, 208.0], [57.4, 208.0], [57.5, 208.0], [57.6, 208.0], [57.7, 208.0], [57.8, 209.0], [57.9, 209.0], [58.0, 209.0], [58.1, 209.0], [58.2, 210.0], [58.3, 210.0], [58.4, 210.0], [58.5, 211.0], [58.6, 211.0], [58.7, 211.0], [58.8, 211.0], [58.9, 211.0], [59.0, 212.0], [59.1, 212.0], [59.2, 212.0], [59.3, 213.0], [59.4, 213.0], [59.5, 213.0], [59.6, 213.0], [59.7, 213.0], [59.8, 214.0], [59.9, 214.0], [60.0, 214.0], [60.1, 214.0], [60.2, 215.0], [60.3, 215.0], [60.4, 215.0], [60.5, 215.0], [60.6, 215.0], [60.7, 215.0], [60.8, 215.0], [60.9, 216.0], [61.0, 216.0], [61.1, 216.0], [61.2, 216.0], [61.3, 216.0], [61.4, 216.0], [61.5, 217.0], [61.6, 217.0], [61.7, 217.0], [61.8, 217.0], [61.9, 217.0], [62.0, 217.0], [62.1, 217.0], [62.2, 217.0], [62.3, 218.0], [62.4, 218.0], [62.5, 218.0], [62.6, 218.0], [62.7, 219.0], [62.8, 219.0], [62.9, 219.0], [63.0, 220.0], [63.1, 220.0], [63.2, 220.0], [63.3, 220.0], [63.4, 220.0], [63.5, 220.0], [63.6, 221.0], [63.7, 221.0], [63.8, 221.0], [63.9, 221.0], [64.0, 222.0], [64.1, 222.0], [64.2, 222.0], [64.3, 223.0], [64.4, 223.0], [64.5, 224.0], [64.6, 224.0], [64.7, 224.0], [64.8, 224.0], [64.9, 225.0], [65.0, 225.0], [65.1, 226.0], [65.2, 226.0], [65.3, 227.0], [65.4, 227.0], [65.5, 227.0], [65.6, 228.0], [65.7, 228.0], [65.8, 228.0], [65.9, 228.0], [66.0, 229.0], [66.1, 229.0], [66.2, 230.0], [66.3, 230.0], [66.4, 231.0], [66.5, 231.0], [66.6, 232.0], [66.7, 233.0], [66.8, 233.0], [66.9, 233.0], [67.0, 234.0], [67.1, 234.0], [67.2, 234.0], [67.3, 235.0], [67.4, 235.0], [67.5, 235.0], [67.6, 236.0], [67.7, 236.0], [67.8, 237.0], [67.9, 237.0], [68.0, 237.0], [68.1, 238.0], [68.2, 238.0], [68.3, 238.0], [68.4, 239.0], [68.5, 239.0], [68.6, 239.0], [68.7, 240.0], [68.8, 240.0], [68.9, 241.0], [69.0, 241.0], [69.1, 241.0], [69.2, 241.0], [69.3, 242.0], [69.4, 242.0], [69.5, 242.0], [69.6, 243.0], [69.7, 243.0], [69.8, 244.0], [69.9, 244.0], [70.0, 245.0], [70.1, 245.0], [70.2, 246.0], [70.3, 246.0], [70.4, 246.0], [70.5, 247.0], [70.6, 248.0], [70.7, 248.0], [70.8, 249.0], [70.9, 249.0], [71.0, 250.0], [71.1, 251.0], [71.2, 251.0], [71.3, 252.0], [71.4, 253.0], [71.5, 253.0], [71.6, 253.0], [71.7, 254.0], [71.8, 254.0], [71.9, 254.0], [72.0, 255.0], [72.1, 256.0], [72.2, 256.0], [72.3, 256.0], [72.4, 256.0], [72.5, 257.0], [72.6, 257.0], [72.7, 258.0], [72.8, 258.0], [72.9, 259.0], [73.0, 259.0], [73.1, 259.0], [73.2, 260.0], [73.3, 260.0], [73.4, 261.0], [73.5, 262.0], [73.6, 262.0], [73.7, 262.0], [73.8, 262.0], [73.9, 263.0], [74.0, 264.0], [74.1, 264.0], [74.2, 265.0], [74.3, 265.0], [74.4, 266.0], [74.5, 266.0], [74.6, 267.0], [74.7, 267.0], [74.8, 268.0], [74.9, 268.0], [75.0, 268.0], [75.1, 269.0], [75.2, 269.0], [75.3, 269.0], [75.4, 270.0], [75.5, 271.0], [75.6, 271.0], [75.7, 271.0], [75.8, 272.0], [75.9, 272.0], [76.0, 272.0], [76.1, 273.0], [76.2, 273.0], [76.3, 273.0], [76.4, 274.0], [76.5, 274.0], [76.6, 275.0], [76.7, 275.0], [76.8, 276.0], [76.9, 276.0], [77.0, 278.0], [77.1, 278.0], [77.2, 280.0], [77.3, 280.0], [77.4, 280.0], [77.5, 281.0], [77.6, 281.0], [77.7, 281.0], [77.8, 282.0], [77.9, 282.0], [78.0, 283.0], [78.1, 284.0], [78.2, 284.0], [78.3, 285.0], [78.4, 286.0], [78.5, 286.0], [78.6, 287.0], [78.7, 288.0], [78.8, 289.0], [78.9, 291.0], [79.0, 292.0], [79.1, 294.0], [79.2, 297.0], [79.3, 300.0], [79.4, 301.0], [79.5, 303.0], [79.6, 306.0], [79.7, 308.0], [79.8, 309.0], [79.9, 312.0], [80.0, 312.0], [80.1, 313.0], [80.2, 313.0], [80.3, 314.0], [80.4, 314.0], [80.5, 314.0], [80.6, 314.0], [80.7, 315.0], [80.8, 315.0], [80.9, 315.0], [81.0, 316.0], [81.1, 316.0], [81.2, 317.0], [81.3, 317.0], [81.4, 318.0], [81.5, 318.0], [81.6, 318.0], [81.7, 319.0], [81.8, 319.0], [81.9, 320.0], [82.0, 321.0], [82.1, 321.0], [82.2, 321.0], [82.3, 323.0], [82.4, 324.0], [82.5, 325.0], [82.6, 326.0], [82.7, 327.0], [82.8, 328.0], [82.9, 328.0], [83.0, 330.0], [83.1, 331.0], [83.2, 331.0], [83.3, 332.0], [83.4, 332.0], [83.5, 333.0], [83.6, 333.0], [83.7, 333.0], [83.8, 334.0], [83.9, 334.0], [84.0, 335.0], [84.1, 335.0], [84.2, 336.0], [84.3, 337.0], [84.4, 338.0], [84.5, 340.0], [84.6, 340.0], [84.7, 340.0], [84.8, 342.0], [84.9, 342.0], [85.0, 344.0], [85.1, 345.0], [85.2, 345.0], [85.3, 345.0], [85.4, 346.0], [85.5, 346.0], [85.6, 347.0], [85.7, 347.0], [85.8, 348.0], [85.9, 348.0], [86.0, 349.0], [86.1, 350.0], [86.2, 350.0], [86.3, 351.0], [86.4, 351.0], [86.5, 351.0], [86.6, 352.0], [86.7, 353.0], [86.8, 354.0], [86.9, 355.0], [87.0, 355.0], [87.1, 356.0], [87.2, 357.0], [87.3, 358.0], [87.4, 358.0], [87.5, 359.0], [87.6, 360.0], [87.7, 361.0], [87.8, 362.0], [87.9, 363.0], [88.0, 363.0], [88.1, 365.0], [88.2, 367.0], [88.3, 367.0], [88.4, 368.0], [88.5, 368.0], [88.6, 369.0], [88.7, 369.0], [88.8, 369.0], [88.9, 370.0], [89.0, 370.0], [89.1, 371.0], [89.2, 372.0], [89.3, 372.0], [89.4, 373.0], [89.5, 374.0], [89.6, 374.0], [89.7, 375.0], [89.8, 375.0], [89.9, 376.0], [90.0, 377.0], [90.1, 377.0], [90.2, 377.0], [90.3, 378.0], [90.4, 379.0], [90.5, 380.0], [90.6, 381.0], [90.7, 383.0], [90.8, 383.0], [90.9, 385.0], [91.0, 386.0], [91.1, 387.0], [91.2, 388.0], [91.3, 388.0], [91.4, 391.0], [91.5, 393.0], [91.6, 395.0], [91.7, 395.0], [91.8, 397.0], [91.9, 398.0], [92.0, 399.0], [92.1, 400.0], [92.2, 402.0], [92.3, 403.0], [92.4, 408.0], [92.5, 411.0], [92.6, 413.0], [92.7, 414.0], [92.8, 415.0], [92.9, 415.0], [93.0, 416.0], [93.1, 417.0], [93.2, 419.0], [93.3, 421.0], [93.4, 422.0], [93.5, 423.0], [93.6, 424.0], [93.7, 425.0], [93.8, 428.0], [93.9, 431.0], [94.0, 433.0], [94.1, 438.0], [94.2, 444.0], [94.3, 448.0], [94.4, 449.0], [94.5, 452.0], [94.6, 468.0], [94.7, 482.0], [94.8, 487.0], [94.9, 493.0], [95.0, 507.0], [95.1, 511.0], [95.2, 530.0], [95.3, 539.0], [95.4, 550.0], [95.5, 568.0], [95.6, 603.0], [95.7, 638.0], [95.8, 13024.0], [95.9, 13839.0], [96.0, 13885.0], [96.1, 13896.0], [96.2, 13911.0], [96.3, 13917.0], [96.4, 14369.0], [96.5, 16249.0], [96.6, 16263.0], [96.7, 16283.0], [96.8, 16295.0], [96.9, 16308.0], [97.0, 16491.0], [97.1, 16498.0], [97.2, 16502.0], [97.3, 16504.0], [97.4, 16511.0], [97.5, 16515.0], [97.6, 16519.0], [97.7, 16522.0], [97.8, 16524.0], [97.9, 16537.0], [98.0, 16542.0], [98.1, 16544.0], [98.2, 16547.0], [98.3, 16548.0], [98.4, 16560.0], [98.5, 16565.0], [98.6, 16567.0], [98.7, 16570.0], [98.8, 16573.0], [98.9, 16577.0], [99.0, 16585.0], [99.1, 16589.0], [99.2, 16599.0], [99.3, 16601.0], [99.4, 16605.0], [99.5, 16608.0], [99.6, 16612.0], [99.7, 16618.0], [99.8, 16623.0], [99.9, 16626.0], [100.0, 16647.0]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3356.0, "series": [{"data": [[0.0, 1317.0], [200.0, 843.0], [13800.0, 2.0], [13900.0, 48.0], [14300.0, 1.0], [16300.0, 36.0], [16200.0, 19.0], [16500.0, 66.0], [16600.0, 208.0], [300.0, 109.0], [100.0, 719.0], [400.0, 3.0], [7900.0, 11.0], [8000.0, 15.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[0.0, 5.0], [2400.0, 285.0], [2500.0, 464.0], [2600.0, 996.0], [2800.0, 102.0], [2700.0, 438.0], [2900.0, 9.0], [7900.0, 8.0], [7800.0, 8.0], [8100.0, 3.0], [8000.0, 10.0], [8700.0, 1.0], [8600.0, 7.0], [8500.0, 8.0], [8300.0, 2.0], [8200.0, 4.0], [8900.0, 1.0], [9000.0, 1.0], [8800.0, 1.0], [13300.0, 3.0], [13200.0, 15.0], [13100.0, 5.0], [13000.0, 17.0], [12900.0, 29.0], [12800.0, 1.0], [13800.0, 9.0], [13700.0, 11.0], [13600.0, 10.0], [13400.0, 5.0], [14300.0, 6.0], [14200.0, 4.0], [14100.0, 8.0], [14000.0, 15.0], [13900.0, 15.0], [14600.0, 3.0], [14500.0, 15.0], [14400.0, 2.0], [14800.0, 1.0], [14700.0, 7.0], [15300.0, 3.0], [15200.0, 7.0], [15100.0, 1.0], [15000.0, 2.0], [14900.0, 1.0], [15800.0, 1.0], [15700.0, 2.0], [15600.0, 4.0], [15500.0, 4.0], [15400.0, 5.0], [16300.0, 5.0], [16200.0, 6.0], [16600.0, 48.0], [17000.0, 157.0], [17100.0, 67.0], [16900.0, 129.0], [16800.0, 206.0], [16700.0, 147.0], [16400.0, 4.0], [16500.0, 21.0], [17400.0, 16.0], [17300.0, 46.0], [17200.0, 33.0], [17500.0, 4.0], [19000.0, 6.0], [100.0, 4.0], [200.0, 2.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[0.0, 3356.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[0.0, 1057.0], [600.0, 3.0], [700.0, 1.0], [200.0, 984.0], [800.0, 1.0], [13800.0, 47.0], [13900.0, 6.0], [14300.0, 2.0], [16300.0, 11.0], [16200.0, 33.0], [16500.0, 202.0], [16400.0, 1.0], [16600.0, 165.0], [1100.0, 1.0], [300.0, 368.0], [400.0, 49.0], [100.0, 533.0], [7700.0, 10.0], [7900.0, 6.0], [7800.0, 8.0], [500.0, 8.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[0.0, 904.0], [600.0, 4.0], [700.0, 1.0], [200.0, 890.0], [13000.0, 2.0], [13800.0, 10.0], [13900.0, 7.0], [14300.0, 4.0], [16300.0, 3.0], [16200.0, 14.0], [16500.0, 74.0], [16400.0, 7.0], [16600.0, 26.0], [300.0, 443.0], [100.0, 959.0], [400.0, 101.0], [7700.0, 1.0], [500.0, 22.0]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12588.0, "series": [{"data": [[0.0, 12588.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 39.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4499.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 60.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 135.16826703246474, "minX": 1.70661666E12, "maxY": 140.0, "series": [{"data": [[1.70661678E12, 140.0], [1.70661672E12, 140.0], [1.7066169E12, 140.0], [1.70661684E12, 140.0], [1.70661696E12, 135.16826703246474], [1.70661666E12, 135.49633610161197]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661696E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 5.0, "maxY": 9003.0, "series": [{"data": [[134.0, 158.0], [140.0, 1971.7865505854097], [107.0, 292.25], [106.0, 297.0], [105.0, 7997.615384615384], [111.0, 275.5], [110.0, 283.5], [108.0, 284.1666666666667], [115.0, 263.0], [114.0, 267.0], [113.0, 270.5], [112.0, 269.0], [119.0, 215.33333333333334], [118.0, 218.0], [117.0, 233.2], [116.0, 253.5], [123.0, 199.0], [121.0, 212.5], [124.0, 186.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[139.4350897851045, 1997.627318221961]], "isOverall": false, "label": "log out-Aggregated", "isController": false}, {"data": [[32.0, 8216.0], [35.0, 8315.0], [34.0, 8259.0], [37.0, 8422.0], [38.0, 8507.0], [40.0, 8556.0], [43.0, 8571.5], [44.0, 8575.333333333334], [46.0, 8615.0], [54.0, 8631.0], [63.0, 8650.0], [67.0, 8668.0], [66.0, 8651.0], [70.0, 8670.0], [73.0, 8677.0], [82.0, 9003.0], [80.0, 8801.0], [5.0, 7837.0], [88.0, 8934.0], [123.0, 2532.0], [127.0, 2546.8888888888887], [126.0, 2525.0], [125.0, 2518.1666666666665], [124.0, 2518.714285714286], [135.0, 2640.7142857142862], [134.0, 2631.5], [133.0, 2622.5], [132.0, 2613.3333333333335], [131.0, 2608.3333333333335], [130.0, 2577.1111111111113], [128.0, 2574.0], [8.0, 7890.0], [140.0, 7188.137154861956], [139.0, 2700.166666666667], [138.0, 2665.5], [137.0, 2653.0], [136.0, 2644.0], [11.0, 7913.6], [14.0, 7960.0], [16.0, 7967.0], [18.0, 8001.5], [22.0, 8039.666666666667], [23.0, 8026.0], [26.0, 8065.0], [27.0, 8071.0], [28.0, 8104.0], [30.0, 8103.0], [31.0, 8183.5]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[138.13333333333338, 7099.994805194816]], "isOverall": false, "label": "confirm menu-Aggregated", "isController": false}, {"data": [[134.0, 0.0], [140.0, 0.04353047132993107], [107.0, 0.0], [111.0, 0.0], [110.0, 0.0], [108.0, 0.2], [115.0, 1.0], [113.0, 0.0], [119.0, 0.0], [117.0, 0.0], [116.0, 0.0], [123.0, 0.5], [121.0, 0.0], [124.0, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[139.81555423122768, 0.04410011918951143]], "isOverall": false, "label": "调试取样器-Aggregated", "isController": false}, {"data": [[57.0, 326.4], [58.0, 333.3333333333333], [59.0, 358.0], [60.0, 373.5], [61.0, 386.0], [62.0, 403.0], [63.0, 376.71428571428567], [64.0, 373.6666666666667], [65.0, 374.0], [66.0, 371.0], [67.0, 373.0], [68.0, 368.5], [69.0, 362.5], [70.0, 355.0], [71.0, 349.5], [72.0, 321.0], [73.0, 297.0], [74.0, 292.5], [75.0, 279.5], [76.0, 259.5], [77.0, 225.66666666666666], [90.0, 360.0], [92.0, 2219.5], [93.0, 395.0], [95.0, 407.5], [96.0, 416.0], [98.0, 428.0], [99.0, 444.1666666666667], [100.0, 2865.3333333333335], [101.0, 408.5], [105.0, 7528.478260869566], [106.0, 400.0], [107.0, 398.0], [109.0, 381.0], [111.0, 383.0], [110.0, 277.0], [112.0, 377.0], [114.0, 372.0], [116.0, 372.0], [118.0, 373.0], [122.0, 365.0], [124.0, 383.0], [126.0, 379.0], [128.0, 371.0], [130.0, 371.0], [133.0, 268.0], [135.0, 180.50000000000003], [134.0, 158.0], [140.0, 2405.5986272754435], [139.0, 141.4], [138.0, 143.57142857142856]], "isOverall": false, "label": "login", "isController": false}, {"data": [[138.03632723112102, 2371.035469107552]], "isOverall": false, "label": "login-Aggregated", "isController": false}, {"data": [[78.0, 193.0], [79.0, 202.33333333333334], [80.0, 221.33333333333334], [81.0, 244.0], [82.0, 262.0], [83.0, 276.5], [84.0, 287.0], [85.0, 298.0], [86.0, 317.25], [87.0, 339.3333333333333], [88.0, 353.5], [89.0, 354.5], [90.0, 365.0], [91.0, 367.0], [92.0, 380.6666666666667], [93.0, 397.0], [94.0, 399.6666666666667], [95.0, 409.5], [96.0, 414.5], [97.0, 421.0], [98.0, 424.5], [99.0, 443.5833333333333], [105.0, 7791.0], [111.0, 273.0], [110.0, 280.0], [115.0, 295.3333333333333], [113.0, 267.0], [119.0, 294.5], [117.0, 244.0], [120.0, 369.0], [121.0, 230.14285714285714], [123.0, 239.0], [124.0, 226.75], [127.0, 276.5], [126.0, 181.0], [129.0, 375.0], [132.0, 215.75], [135.0, 228.66666666666666], [133.0, 162.0], [130.0, 164.5], [137.0, 375.0], [140.0, 878.9405292893264], [138.0, 143.0]], "isOverall": false, "label": "get menu", "isController": false}, {"data": [[138.87240783410132, 863.1347926267301]], "isOverall": false, "label": "get menu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 140.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11909.083333333334, "minX": 1.70661666E12, "maxY": 40552.7, "series": [{"data": [[1.70661678E12, 35628.85], [1.70661672E12, 40552.7], [1.7066169E12, 35852.76666666667], [1.70661684E12, 35600.95], [1.70661696E12, 23994.933333333334], [1.70661666E12, 24079.533333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70661678E12, 18120.233333333334], [1.70661672E12, 19838.916666666668], [1.7066169E12, 17991.633333333335], [1.70661684E12, 18047.15], [1.70661696E12, 13103.183333333332], [1.70661666E12, 11909.083333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661696E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.030351437699680503, "minX": 1.70661666E12, "maxY": 7807.070393374752, "series": [{"data": [[1.70661678E12, 1034.4595469255667], [1.70661672E12, 2373.6788732394384], [1.7066169E12, 2490.75873015873], [1.70661684E12, 2212.886581469649], [1.70661696E12, 3238.4853932584247], [1.70661666E12, 178.6983695652174]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661678E12, 7584.995341614908], [1.70661672E12, 6216.881818181825], [1.7066169E12, 7255.472089314178], [1.70661684E12, 7373.064770932065], [1.70661696E12, 7807.070393374752], [1.70661666E12, 6283.389952153109]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661678E12, 0.050161812297734684], [1.70661672E12, 0.05492957746478874], [1.7066169E12, 0.039682539682539694], [1.70661684E12, 0.030351437699680503], [1.70661696E12, 0.03217821782178217], [1.70661666E12, 0.057065217391304414]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661678E12, 2775.0163934426228], [1.70661672E12, 2155.444444444445], [1.7066169E12, 3051.738437001593], [1.70661684E12, 2949.3779904306257], [1.70661696E12, 2529.9908883826893], [1.70661666E12, 290.7604395604394]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661678E12, 1786.3871473354247], [1.70661672E12, 1000.6206415620649], [1.7066169E12, 540.3296529968454], [1.70661684E12, 782.6375198728131], [1.70661696E12, 360.7043269230768], [1.70661666E12, 353.2945205479451]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661696E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661666E12, "maxY": 7806.5900621117935, "series": [{"data": [[1.70661678E12, 1034.391585760517], [1.70661672E12, 2373.5830985915477], [1.7066169E12, 2490.6873015873034], [1.70661684E12, 2212.825878594249], [1.70661696E12, 3238.3977528089895], [1.70661666E12, 178.53804347826082]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661678E12, 7584.925465838508], [1.70661672E12, 6216.306060606066], [1.7066169E12, 7255.387559808618], [1.70661684E12, 7372.52132701422], [1.70661696E12, 7806.5900621117935], [1.70661666E12, 6283.272727272725]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661678E12, 0.0], [1.70661672E12, 0.0], [1.7066169E12, 0.0], [1.70661684E12, 0.0], [1.70661696E12, 0.0], [1.70661666E12, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661678E12, 2774.960655737705], [1.70661672E12, 2155.07588075881], [1.7066169E12, 3051.523125996811], [1.70661684E12, 2949.3125996810195], [1.70661696E12, 2529.699316628702], [1.70661666E12, 289.69230769230774]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661678E12, 1786.305642633231], [1.70661672E12, 999.9483960948402], [1.7066169E12, 539.7570977917981], [1.70661684E12, 782.2019077901431], [1.70661696E12, 360.6177884615386], [1.70661666E12, 352.41324200913283]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661696E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661666E12, "maxY": 293.0547945205482, "series": [{"data": [[1.70661678E12, 128.16181229773457], [1.70661672E12, 141.59999999999997], [1.7066169E12, 131.62539682539716], [1.70661684E12, 129.4105431309904], [1.70661696E12, 148.29438202247186], [1.70661666E12, 175.55434782608688]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661678E12, 141.1785714285714], [1.70661672E12, 199.48939393939398], [1.7066169E12, 145.0813397129188], [1.70661684E12, 150.19115323854666], [1.70661696E12, 151.2360248447206], [1.70661666E12, 260.84449760765574]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661678E12, 0.0], [1.70661672E12, 0.0], [1.7066169E12, 0.0], [1.70661684E12, 0.0], [1.70661696E12, 0.0], [1.70661666E12, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661678E12, 137.48688524590173], [1.70661672E12, 175.8563685636857], [1.7066169E12, 131.1642743221692], [1.70661684E12, 133.65550239234466], [1.70661696E12, 155.27790432801837], [1.70661666E12, 289.1846153846155]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661678E12, 140.57366771159843], [1.70661672E12, 213.5718270571827], [1.7066169E12, 147.9416403785491], [1.70661684E12, 151.42130365659787], [1.70661696E12, 181.12500000000009], [1.70661666E12, 293.0547945205482]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661696E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661666E12, "maxY": 19040.0, "series": [{"data": [[1.70661678E12, 17492.0], [1.70661672E12, 17540.0], [1.7066169E12, 17437.0], [1.70661684E12, 17473.0], [1.70661696E12, 19040.0], [1.70661666E12, 14390.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70661678E12, 16543.0], [1.70661672E12, 13904.6], [1.7066169E12, 16614.1], [1.70661684E12, 16598.0], [1.70661696E12, 16623.4], [1.70661666E12, 2804.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70661678E12, 17258.13], [1.70661672E12, 16857.600000000002], [1.7066169E12, 17135.22], [1.70661684E12, 17166.0], [1.70661696E12, 17181.0], [1.70661666E12, 14068.800000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70661678E12, 16826.75], [1.70661672E12, 16291.3], [1.7066169E12, 16793.1], [1.70661684E12, 16803.0], [1.70661696E12, 16842.8], [1.70661666E12, 13025.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70661678E12, 0.0], [1.70661672E12, 0.0], [1.7066169E12, 0.0], [1.70661684E12, 0.0], [1.70661696E12, 0.0], [1.70661666E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70661678E12, 140.5], [1.70661672E12, 191.0], [1.7066169E12, 161.0], [1.70661684E12, 169.0], [1.70661696E12, 222.0], [1.70661666E12, 256.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661696E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 5.0, "maxY": 13834.0, "series": [{"data": [[522.0, 69.0], [515.0, 66.0], [558.0, 80.0], [599.0, 103.0], [5.0, 3.0], [10.0, 4.0], [11.0, 214.0], [12.0, 5.5], [13.0, 187.0], [15.0, 29.0], [20.0, 5.0], [21.0, 215.0], [38.0, 8022.5], [55.0, 250.0], [60.0, 5.0], [64.0, 416.0], [67.0, 7997.0], [79.0, 198.0], [81.0, 187.0], [83.0, 222.0], [85.0, 22.0], [91.0, 212.5], [95.0, 207.0], [96.0, 187.5], [107.0, 219.0], [109.0, 205.0], [117.0, 219.0], [135.0, 333.0], [133.0, 279.0], [145.0, 373.0], [166.0, 13237.0], [172.0, 290.5], [196.0, 334.0], [213.0, 10.0], [251.0, 13834.0], [270.0, 155.0], [279.0, 125.0], [325.0, 45.0], [356.0, 175.0], [358.0, 141.0], [375.0, 205.0], [377.0, 226.0], [398.0, 208.0], [395.0, 298.0], [413.0, 248.0], [431.0, 251.5], [417.0, 277.0], [444.0, 226.0], [462.0, 339.0], [454.0, 233.0], [448.0, 228.0], [460.0, 228.0], [457.0, 228.0], [463.0, 237.0], [464.0, 225.0], [469.0, 43.0], [491.0, 256.0], [492.0, 65.0], [511.0, 71.0], [496.0, 67.0], [509.0, 69.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[166.0, 1.0], [196.0, 334.0], [251.0, 2.0], [64.0, 493.0], [270.0, 111.0], [81.0, 276.0], [85.0, 6.5], [356.0, 20.0], [358.0, 101.0], [395.0, 1.0], [431.0, 101.0], [417.0, 101.0], [462.0, 202.0], [454.0, 101.0], [448.0, 51.0], [460.0, 1.0], [457.0, 51.0], [463.0, 51.0], [464.0, 1.0], [491.0, 101.0], [509.0, 95.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 599.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 5.0, "maxY": 13834.0, "series": [{"data": [[522.0, 69.0], [515.0, 66.0], [558.0, 80.0], [599.0, 103.0], [5.0, 3.0], [10.0, 4.0], [11.0, 214.0], [12.0, 5.5], [13.0, 187.0], [15.0, 29.0], [20.0, 5.0], [21.0, 215.0], [38.0, 8022.5], [55.0, 250.0], [60.0, 4.5], [64.0, 416.0], [67.0, 7997.0], [79.0, 198.0], [81.0, 187.0], [83.0, 221.0], [85.0, 22.0], [91.0, 212.5], [95.0, 207.0], [96.0, 187.5], [107.0, 219.0], [109.0, 205.0], [117.0, 219.0], [135.0, 333.0], [133.0, 279.0], [145.0, 372.0], [166.0, 13237.0], [172.0, 290.5], [196.0, 333.0], [213.0, 10.0], [251.0, 13834.0], [270.0, 155.0], [279.0, 125.0], [325.0, 45.0], [356.0, 174.0], [358.0, 141.0], [375.0, 205.0], [377.0, 226.0], [398.0, 208.0], [395.0, 298.0], [413.0, 247.0], [431.0, 251.5], [417.0, 277.0], [444.0, 226.0], [462.0, 339.0], [454.0, 233.0], [448.0, 228.0], [460.0, 228.0], [457.0, 228.0], [463.0, 237.0], [464.0, 225.0], [469.0, 43.0], [491.0, 256.0], [492.0, 65.0], [511.0, 71.0], [496.0, 67.0], [509.0, 69.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[166.0, 0.0], [196.0, 334.0], [251.0, 0.0], [64.0, 493.0], [270.0, 111.0], [81.0, 276.0], [85.0, 6.0], [356.0, 20.0], [358.0, 101.0], [395.0, 0.0], [431.0, 0.0], [417.0, 0.0], [462.0, 0.0], [454.0, 0.0], [448.0, 0.0], [460.0, 0.0], [457.0, 0.0], [463.0, 0.0], [464.0, 0.0], [491.0, 0.0], [509.0, 95.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 599.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 34.11666666666667, "minX": 1.70661666E12, "maxY": 58.916666666666664, "series": [{"data": [[1.70661678E12, 52.13333333333333], [1.70661672E12, 58.916666666666664], [1.7066169E12, 52.46666666666667], [1.70661684E12, 52.35], [1.70661696E12, 34.11666666666667], [1.70661666E12, 36.45]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661696E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70661666E12, "maxY": 58.55, "series": [{"data": [[1.70661678E12, 52.13333333333333], [1.70661672E12, 58.55], [1.7066169E12, 52.3], [1.70661684E12, 52.25], [1.70661696E12, 36.35], [1.70661666E12, 33.85]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70661672E12, 0.11666666666666667], [1.7066169E12, 0.03333333333333333], [1.70661696E12, 0.016666666666666666], [1.70661666E12, 0.13333333333333333]], "isOverall": false, "label": "401", "isController": false}, {"data": [[1.70661672E12, 0.25], [1.7066169E12, 0.13333333333333333], [1.70661684E12, 0.1], [1.70661696E12, 0.08333333333333333], [1.70661666E12, 0.13333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661696E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70661666E12, "maxY": 12.233333333333333, "series": [{"data": [[1.70661678E12, 10.633333333333333], [1.70661672E12, 11.766666666666667], [1.7066169E12, 10.483333333333333], [1.70661684E12, 10.433333333333334], [1.70661696E12, 6.9], [1.70661666E12, 7.183333333333334]], "isOverall": false, "label": "get menu-success", "isController": false}, {"data": [[1.70661672E12, 0.18333333333333332], [1.7066169E12, 0.08333333333333333], [1.70661684E12, 0.05], [1.70661696E12, 0.03333333333333333], [1.70661666E12, 0.11666666666666667]], "isOverall": false, "label": "get menu-failure", "isController": false}, {"data": [[1.70661678E12, 10.3], [1.70661672E12, 11.766666666666667], [1.7066169E12, 10.483333333333333], [1.70661684E12, 10.433333333333334], [1.70661696E12, 7.4], [1.70661666E12, 6.05]], "isOverall": false, "label": "log out-success", "isController": false}, {"data": [[1.70661672E12, 0.06666666666666667], [1.7066169E12, 0.016666666666666666], [1.70661696E12, 0.016666666666666666], [1.70661666E12, 0.08333333333333333]], "isOverall": false, "label": "log out-failure", "isController": false}, {"data": [[1.70661678E12, 10.3], [1.70661672E12, 11.833333333333334], [1.7066169E12, 10.5], [1.70661684E12, 10.433333333333334], [1.70661696E12, 6.733333333333333], [1.70661666E12, 6.133333333333334]], "isOverall": false, "label": "调试取样器-success", "isController": false}, {"data": [[1.70661678E12, 10.166666666666666], [1.70661672E12, 12.233333333333333], [1.7066169E12, 10.433333333333334], [1.70661684E12, 10.45], [1.70661696E12, 7.3], [1.70661666E12, 7.516666666666667]], "isOverall": false, "label": "login-success", "isController": false}, {"data": [[1.70661672E12, 0.05], [1.7066169E12, 0.05], [1.70661684E12, 0.05], [1.70661696E12, 0.03333333333333333]], "isOverall": false, "label": "confirm menu-failure", "isController": false}, {"data": [[1.70661678E12, 10.733333333333333], [1.70661672E12, 10.95], [1.7066169E12, 10.4], [1.70661684E12, 10.5], [1.70661696E12, 8.016666666666667], [1.70661666E12, 6.966666666666667]], "isOverall": false, "label": "confirm menu-success", "isController": false}, {"data": [[1.70661672E12, 0.06666666666666667], [1.7066169E12, 0.016666666666666666], [1.70661696E12, 0.016666666666666666], [1.70661666E12, 0.06666666666666667]], "isOverall": false, "label": "login-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661696E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.70661666E12, "maxY": 58.55, "series": [{"data": [[1.70661678E12, 52.13333333333333], [1.70661672E12, 58.55], [1.7066169E12, 52.3], [1.70661684E12, 52.25], [1.70661696E12, 36.35], [1.70661666E12, 33.85]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70661672E12, 0.36666666666666664], [1.7066169E12, 0.16666666666666666], [1.70661684E12, 0.1], [1.70661696E12, 0.1], [1.70661666E12, 0.26666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661696E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

