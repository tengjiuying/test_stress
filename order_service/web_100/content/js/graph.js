/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 6745.0, "series": [{"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 12.0], [8.0, 12.0], [8.1, 13.0], [8.2, 13.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 15.0], [8.7, 16.0], [8.8, 16.0], [8.9, 16.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 18.0], [9.5, 18.0], [9.6, 18.0], [9.7, 19.0], [9.8, 19.0], [9.9, 20.0], [10.0, 20.0], [10.1, 21.0], [10.2, 21.0], [10.3, 21.0], [10.4, 21.0], [10.5, 22.0], [10.6, 22.0], [10.7, 23.0], [10.8, 23.0], [10.9, 24.0], [11.0, 24.0], [11.1, 24.0], [11.2, 24.0], [11.3, 25.0], [11.4, 26.0], [11.5, 26.0], [11.6, 26.0], [11.7, 26.0], [11.8, 26.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 29.0], [12.6, 29.0], [12.7, 29.0], [12.8, 29.0], [12.9, 30.0], [13.0, 30.0], [13.1, 31.0], [13.2, 31.0], [13.3, 31.0], [13.4, 32.0], [13.5, 32.0], [13.6, 32.0], [13.7, 33.0], [13.8, 33.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 35.0], [14.3, 35.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 37.0], [14.8, 37.0], [14.9, 38.0], [15.0, 38.0], [15.1, 39.0], [15.2, 39.0], [15.3, 39.0], [15.4, 39.0], [15.5, 40.0], [15.6, 40.0], [15.7, 41.0], [15.8, 41.0], [15.9, 42.0], [16.0, 42.0], [16.1, 43.0], [16.2, 43.0], [16.3, 44.0], [16.4, 44.0], [16.5, 44.0], [16.6, 45.0], [16.7, 45.0], [16.8, 46.0], [16.9, 47.0], [17.0, 47.0], [17.1, 48.0], [17.2, 48.0], [17.3, 49.0], [17.4, 49.0], [17.5, 49.0], [17.6, 49.0], [17.7, 50.0], [17.8, 50.0], [17.9, 50.0], [18.0, 50.0], [18.1, 50.0], [18.2, 51.0], [18.3, 51.0], [18.4, 51.0], [18.5, 51.0], [18.6, 51.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 52.0], [19.2, 52.0], [19.3, 53.0], [19.4, 53.0], [19.5, 53.0], [19.6, 53.0], [19.7, 53.0], [19.8, 53.0], [19.9, 53.0], [20.0, 53.0], [20.1, 53.0], [20.2, 53.0], [20.3, 54.0], [20.4, 54.0], [20.5, 54.0], [20.6, 54.0], [20.7, 54.0], [20.8, 55.0], [20.9, 55.0], [21.0, 55.0], [21.1, 55.0], [21.2, 55.0], [21.3, 55.0], [21.4, 55.0], [21.5, 55.0], [21.6, 56.0], [21.7, 56.0], [21.8, 56.0], [21.9, 56.0], [22.0, 56.0], [22.1, 57.0], [22.2, 57.0], [22.3, 57.0], [22.4, 57.0], [22.5, 57.0], [22.6, 57.0], [22.7, 58.0], [22.8, 58.0], [22.9, 58.0], [23.0, 58.0], [23.1, 58.0], [23.2, 58.0], [23.3, 59.0], [23.4, 59.0], [23.5, 59.0], [23.6, 59.0], [23.7, 60.0], [23.8, 60.0], [23.9, 60.0], [24.0, 60.0], [24.1, 60.0], [24.2, 60.0], [24.3, 60.0], [24.4, 61.0], [24.5, 61.0], [24.6, 61.0], [24.7, 61.0], [24.8, 61.0], [24.9, 62.0], [25.0, 62.0], [25.1, 62.0], [25.2, 62.0], [25.3, 62.0], [25.4, 62.0], [25.5, 63.0], [25.6, 63.0], [25.7, 63.0], [25.8, 63.0], [25.9, 63.0], [26.0, 64.0], [26.1, 64.0], [26.2, 64.0], [26.3, 64.0], [26.4, 64.0], [26.5, 65.0], [26.6, 65.0], [26.7, 65.0], [26.8, 65.0], [26.9, 65.0], [27.0, 66.0], [27.1, 66.0], [27.2, 66.0], [27.3, 66.0], [27.4, 66.0], [27.5, 66.0], [27.6, 67.0], [27.7, 67.0], [27.8, 67.0], [27.9, 67.0], [28.0, 67.0], [28.1, 68.0], [28.2, 68.0], [28.3, 68.0], [28.4, 68.0], [28.5, 68.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 69.0], [29.0, 70.0], [29.1, 70.0], [29.2, 70.0], [29.3, 70.0], [29.4, 71.0], [29.5, 71.0], [29.6, 71.0], [29.7, 71.0], [29.8, 72.0], [29.9, 72.0], [30.0, 72.0], [30.1, 72.0], [30.2, 72.0], [30.3, 72.0], [30.4, 73.0], [30.5, 73.0], [30.6, 73.0], [30.7, 73.0], [30.8, 73.0], [30.9, 74.0], [31.0, 74.0], [31.1, 74.0], [31.2, 75.0], [31.3, 75.0], [31.4, 75.0], [31.5, 75.0], [31.6, 76.0], [31.7, 76.0], [31.8, 76.0], [31.9, 76.0], [32.0, 76.0], [32.1, 77.0], [32.2, 77.0], [32.3, 77.0], [32.4, 77.0], [32.5, 78.0], [32.6, 78.0], [32.7, 78.0], [32.8, 78.0], [32.9, 78.0], [33.0, 78.0], [33.1, 79.0], [33.2, 79.0], [33.3, 79.0], [33.4, 79.0], [33.5, 79.0], [33.6, 80.0], [33.7, 80.0], [33.8, 80.0], [33.9, 80.0], [34.0, 81.0], [34.1, 81.0], [34.2, 81.0], [34.3, 81.0], [34.4, 82.0], [34.5, 82.0], [34.6, 82.0], [34.7, 82.0], [34.8, 82.0], [34.9, 82.0], [35.0, 83.0], [35.1, 83.0], [35.2, 83.0], [35.3, 84.0], [35.4, 84.0], [35.5, 84.0], [35.6, 84.0], [35.7, 84.0], [35.8, 84.0], [35.9, 85.0], [36.0, 85.0], [36.1, 85.0], [36.2, 85.0], [36.3, 85.0], [36.4, 86.0], [36.5, 86.0], [36.6, 86.0], [36.7, 86.0], [36.8, 86.0], [36.9, 86.0], [37.0, 87.0], [37.1, 87.0], [37.2, 87.0], [37.3, 87.0], [37.4, 87.0], [37.5, 88.0], [37.6, 88.0], [37.7, 88.0], [37.8, 88.0], [37.9, 88.0], [38.0, 89.0], [38.1, 89.0], [38.2, 89.0], [38.3, 89.0], [38.4, 89.0], [38.5, 89.0], [38.6, 90.0], [38.7, 90.0], [38.8, 90.0], [38.9, 90.0], [39.0, 90.0], [39.1, 91.0], [39.2, 91.0], [39.3, 91.0], [39.4, 91.0], [39.5, 91.0], [39.6, 91.0], [39.7, 92.0], [39.8, 92.0], [39.9, 92.0], [40.0, 92.0], [40.1, 92.0], [40.2, 92.0], [40.3, 93.0], [40.4, 93.0], [40.5, 93.0], [40.6, 93.0], [40.7, 93.0], [40.8, 94.0], [40.9, 94.0], [41.0, 94.0], [41.1, 94.0], [41.2, 94.0], [41.3, 94.0], [41.4, 94.0], [41.5, 94.0], [41.6, 95.0], [41.7, 95.0], [41.8, 95.0], [41.9, 95.0], [42.0, 96.0], [42.1, 96.0], [42.2, 96.0], [42.3, 96.0], [42.4, 96.0], [42.5, 96.0], [42.6, 97.0], [42.7, 97.0], [42.8, 97.0], [42.9, 97.0], [43.0, 97.0], [43.1, 97.0], [43.2, 98.0], [43.3, 98.0], [43.4, 98.0], [43.5, 98.0], [43.6, 98.0], [43.7, 99.0], [43.8, 99.0], [43.9, 99.0], [44.0, 99.0], [44.1, 99.0], [44.2, 99.0], [44.3, 99.0], [44.4, 100.0], [44.5, 100.0], [44.6, 100.0], [44.7, 100.0], [44.8, 100.0], [44.9, 100.0], [45.0, 100.0], [45.1, 101.0], [45.2, 101.0], [45.3, 101.0], [45.4, 101.0], [45.5, 101.0], [45.6, 101.0], [45.7, 102.0], [45.8, 102.0], [45.9, 102.0], [46.0, 102.0], [46.1, 102.0], [46.2, 103.0], [46.3, 103.0], [46.4, 103.0], [46.5, 103.0], [46.6, 103.0], [46.7, 103.0], [46.8, 103.0], [46.9, 103.0], [47.0, 104.0], [47.1, 104.0], [47.2, 104.0], [47.3, 104.0], [47.4, 104.0], [47.5, 105.0], [47.6, 105.0], [47.7, 105.0], [47.8, 105.0], [47.9, 105.0], [48.0, 105.0], [48.1, 106.0], [48.2, 106.0], [48.3, 106.0], [48.4, 106.0], [48.5, 106.0], [48.6, 106.0], [48.7, 106.0], [48.8, 107.0], [48.9, 107.0], [49.0, 107.0], [49.1, 107.0], [49.2, 107.0], [49.3, 107.0], [49.4, 108.0], [49.5, 108.0], [49.6, 108.0], [49.7, 108.0], [49.8, 108.0], [49.9, 108.0], [50.0, 109.0], [50.1, 109.0], [50.2, 109.0], [50.3, 109.0], [50.4, 109.0], [50.5, 109.0], [50.6, 110.0], [50.7, 110.0], [50.8, 110.0], [50.9, 110.0], [51.0, 110.0], [51.1, 110.0], [51.2, 111.0], [51.3, 111.0], [51.4, 111.0], [51.5, 111.0], [51.6, 111.0], [51.7, 111.0], [51.8, 112.0], [51.9, 112.0], [52.0, 112.0], [52.1, 112.0], [52.2, 112.0], [52.3, 113.0], [52.4, 113.0], [52.5, 113.0], [52.6, 113.0], [52.7, 113.0], [52.8, 113.0], [52.9, 114.0], [53.0, 114.0], [53.1, 114.0], [53.2, 114.0], [53.3, 114.0], [53.4, 114.0], [53.5, 114.0], [53.6, 115.0], [53.7, 115.0], [53.8, 115.0], [53.9, 115.0], [54.0, 115.0], [54.1, 116.0], [54.2, 116.0], [54.3, 116.0], [54.4, 116.0], [54.5, 116.0], [54.6, 116.0], [54.7, 117.0], [54.8, 117.0], [54.9, 117.0], [55.0, 117.0], [55.1, 117.0], [55.2, 117.0], [55.3, 117.0], [55.4, 118.0], [55.5, 118.0], [55.6, 118.0], [55.7, 118.0], [55.8, 118.0], [55.9, 118.0], [56.0, 119.0], [56.1, 119.0], [56.2, 119.0], [56.3, 119.0], [56.4, 119.0], [56.5, 119.0], [56.6, 119.0], [56.7, 120.0], [56.8, 120.0], [56.9, 120.0], [57.0, 120.0], [57.1, 120.0], [57.2, 120.0], [57.3, 121.0], [57.4, 121.0], [57.5, 121.0], [57.6, 121.0], [57.7, 121.0], [57.8, 121.0], [57.9, 121.0], [58.0, 121.0], [58.1, 122.0], [58.2, 122.0], [58.3, 122.0], [58.4, 122.0], [58.5, 122.0], [58.6, 122.0], [58.7, 122.0], [58.8, 123.0], [58.9, 123.0], [59.0, 123.0], [59.1, 123.0], [59.2, 123.0], [59.3, 123.0], [59.4, 124.0], [59.5, 124.0], [59.6, 124.0], [59.7, 124.0], [59.8, 124.0], [59.9, 124.0], [60.0, 124.0], [60.1, 125.0], [60.2, 125.0], [60.3, 125.0], [60.4, 125.0], [60.5, 125.0], [60.6, 125.0], [60.7, 126.0], [60.8, 126.0], [60.9, 126.0], [61.0, 126.0], [61.1, 126.0], [61.2, 126.0], [61.3, 126.0], [61.4, 127.0], [61.5, 127.0], [61.6, 127.0], [61.7, 127.0], [61.8, 127.0], [61.9, 127.0], [62.0, 127.0], [62.1, 128.0], [62.2, 128.0], [62.3, 128.0], [62.4, 128.0], [62.5, 128.0], [62.6, 128.0], [62.7, 128.0], [62.8, 129.0], [62.9, 129.0], [63.0, 129.0], [63.1, 129.0], [63.2, 129.0], [63.3, 129.0], [63.4, 130.0], [63.5, 130.0], [63.6, 130.0], [63.7, 130.0], [63.8, 130.0], [63.9, 130.0], [64.0, 131.0], [64.1, 131.0], [64.2, 131.0], [64.3, 131.0], [64.4, 131.0], [64.5, 131.0], [64.6, 131.0], [64.7, 131.0], [64.8, 132.0], [64.9, 132.0], [65.0, 132.0], [65.1, 132.0], [65.2, 132.0], [65.3, 132.0], [65.4, 133.0], [65.5, 133.0], [65.6, 133.0], [65.7, 133.0], [65.8, 133.0], [65.9, 133.0], [66.0, 134.0], [66.1, 134.0], [66.2, 134.0], [66.3, 134.0], [66.4, 134.0], [66.5, 134.0], [66.6, 134.0], [66.7, 135.0], [66.8, 135.0], [66.9, 135.0], [67.0, 135.0], [67.1, 135.0], [67.2, 135.0], [67.3, 135.0], [67.4, 136.0], [67.5, 136.0], [67.6, 136.0], [67.7, 136.0], [67.8, 136.0], [67.9, 136.0], [68.0, 137.0], [68.1, 137.0], [68.2, 137.0], [68.3, 137.0], [68.4, 137.0], [68.5, 137.0], [68.6, 138.0], [68.7, 138.0], [68.8, 138.0], [68.9, 138.0], [69.0, 138.0], [69.1, 138.0], [69.2, 139.0], [69.3, 139.0], [69.4, 139.0], [69.5, 139.0], [69.6, 139.0], [69.7, 139.0], [69.8, 139.0], [69.9, 140.0], [70.0, 140.0], [70.1, 140.0], [70.2, 140.0], [70.3, 140.0], [70.4, 140.0], [70.5, 140.0], [70.6, 141.0], [70.7, 141.0], [70.8, 141.0], [70.9, 141.0], [71.0, 141.0], [71.1, 142.0], [71.2, 142.0], [71.3, 142.0], [71.4, 142.0], [71.5, 142.0], [71.6, 142.0], [71.7, 142.0], [71.8, 143.0], [71.9, 143.0], [72.0, 143.0], [72.1, 143.0], [72.2, 143.0], [72.3, 143.0], [72.4, 144.0], [72.5, 144.0], [72.6, 144.0], [72.7, 144.0], [72.8, 144.0], [72.9, 144.0], [73.0, 144.0], [73.1, 144.0], [73.2, 145.0], [73.3, 145.0], [73.4, 145.0], [73.5, 145.0], [73.6, 145.0], [73.7, 145.0], [73.8, 146.0], [73.9, 146.0], [74.0, 146.0], [74.1, 146.0], [74.2, 146.0], [74.3, 146.0], [74.4, 147.0], [74.5, 147.0], [74.6, 147.0], [74.7, 147.0], [74.8, 147.0], [74.9, 147.0], [75.0, 147.0], [75.1, 147.0], [75.2, 148.0], [75.3, 148.0], [75.4, 148.0], [75.5, 148.0], [75.6, 148.0], [75.7, 148.0], [75.8, 149.0], [75.9, 149.0], [76.0, 149.0], [76.1, 149.0], [76.2, 149.0], [76.3, 150.0], [76.4, 150.0], [76.5, 150.0], [76.6, 150.0], [76.7, 150.0], [76.8, 150.0], [76.9, 150.0], [77.0, 150.0], [77.1, 151.0], [77.2, 151.0], [77.3, 151.0], [77.4, 151.0], [77.5, 151.0], [77.6, 151.0], [77.7, 151.0], [77.8, 152.0], [77.9, 152.0], [78.0, 152.0], [78.1, 152.0], [78.2, 152.0], [78.3, 153.0], [78.4, 153.0], [78.5, 153.0], [78.6, 153.0], [78.7, 153.0], [78.8, 153.0], [78.9, 153.0], [79.0, 154.0], [79.1, 154.0], [79.2, 154.0], [79.3, 154.0], [79.4, 154.0], [79.5, 154.0], [79.6, 155.0], [79.7, 155.0], [79.8, 155.0], [79.9, 155.0], [80.0, 155.0], [80.1, 156.0], [80.2, 156.0], [80.3, 156.0], [80.4, 156.0], [80.5, 156.0], [80.6, 156.0], [80.7, 157.0], [80.8, 157.0], [80.9, 157.0], [81.0, 157.0], [81.1, 157.0], [81.2, 157.0], [81.3, 158.0], [81.4, 158.0], [81.5, 158.0], [81.6, 158.0], [81.7, 158.0], [81.8, 158.0], [81.9, 158.0], [82.0, 159.0], [82.1, 159.0], [82.2, 159.0], [82.3, 159.0], [82.4, 159.0], [82.5, 159.0], [82.6, 160.0], [82.7, 160.0], [82.8, 160.0], [82.9, 160.0], [83.0, 160.0], [83.1, 160.0], [83.2, 161.0], [83.3, 161.0], [83.4, 161.0], [83.5, 161.0], [83.6, 161.0], [83.7, 161.0], [83.8, 161.0], [83.9, 162.0], [84.0, 162.0], [84.1, 162.0], [84.2, 162.0], [84.3, 162.0], [84.4, 162.0], [84.5, 163.0], [84.6, 163.0], [84.7, 163.0], [84.8, 163.0], [84.9, 163.0], [85.0, 163.0], [85.1, 164.0], [85.2, 164.0], [85.3, 164.0], [85.4, 164.0], [85.5, 164.0], [85.6, 164.0], [85.7, 164.0], [85.8, 165.0], [85.9, 165.0], [86.0, 165.0], [86.1, 165.0], [86.2, 165.0], [86.3, 166.0], [86.4, 166.0], [86.5, 166.0], [86.6, 166.0], [86.7, 166.0], [86.8, 167.0], [86.9, 167.0], [87.0, 167.0], [87.1, 167.0], [87.2, 167.0], [87.3, 167.0], [87.4, 167.0], [87.5, 168.0], [87.6, 168.0], [87.7, 168.0], [87.8, 168.0], [87.9, 168.0], [88.0, 169.0], [88.1, 169.0], [88.2, 169.0], [88.3, 169.0], [88.4, 169.0], [88.5, 170.0], [88.6, 170.0], [88.7, 170.0], [88.8, 170.0], [88.9, 170.0], [89.0, 170.0], [89.1, 171.0], [89.2, 171.0], [89.3, 171.0], [89.4, 171.0], [89.5, 171.0], [89.6, 172.0], [89.7, 172.0], [89.8, 172.0], [89.9, 172.0], [90.0, 172.0], [90.1, 172.0], [90.2, 173.0], [90.3, 173.0], [90.4, 173.0], [90.5, 173.0], [90.6, 174.0], [90.7, 174.0], [90.8, 174.0], [90.9, 174.0], [91.0, 174.0], [91.1, 174.0], [91.2, 174.0], [91.3, 175.0], [91.4, 175.0], [91.5, 175.0], [91.6, 175.0], [91.7, 175.0], [91.8, 176.0], [91.9, 176.0], [92.0, 176.0], [92.1, 177.0], [92.2, 177.0], [92.3, 177.0], [92.4, 177.0], [92.5, 177.0], [92.6, 178.0], [92.7, 178.0], [92.8, 178.0], [92.9, 179.0], [93.0, 179.0], [93.1, 179.0], [93.2, 180.0], [93.3, 180.0], [93.4, 180.0], [93.5, 180.0], [93.6, 181.0], [93.7, 181.0], [93.8, 181.0], [93.9, 182.0], [94.0, 182.0], [94.1, 182.0], [94.2, 182.0], [94.3, 183.0], [94.4, 183.0], [94.5, 183.0], [94.6, 184.0], [94.7, 184.0], [94.8, 185.0], [94.9, 185.0], [95.0, 185.0], [95.1, 186.0], [95.2, 186.0], [95.3, 186.0], [95.4, 187.0], [95.5, 187.0], [95.6, 187.0], [95.7, 188.0], [95.8, 188.0], [95.9, 189.0], [96.0, 189.0], [96.1, 190.0], [96.2, 190.0], [96.3, 191.0], [96.4, 191.0], [96.5, 192.0], [96.6, 192.0], [96.7, 193.0], [96.8, 194.0], [96.9, 194.0], [97.0, 195.0], [97.1, 195.0], [97.2, 195.0], [97.3, 196.0], [97.4, 197.0], [97.5, 197.0], [97.6, 198.0], [97.7, 199.0], [97.8, 199.0], [97.9, 200.0], [98.0, 200.0], [98.1, 201.0], [98.2, 201.0], [98.3, 202.0], [98.4, 203.0], [98.5, 204.0], [98.6, 205.0], [98.7, 206.0], [98.8, 207.0], [98.9, 208.0], [99.0, 210.0], [99.1, 211.0], [99.2, 212.0], [99.3, 214.0], [99.4, 216.0], [99.5, 220.0], [99.6, 226.0], [99.7, 2183.0], [99.8, 4069.0], [99.9, 4117.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[0.0, 2406.0], [0.1, 2411.0], [0.2, 2412.0], [0.3, 2413.0], [0.4, 2414.0], [0.5, 2414.0], [0.6, 2415.0], [0.7, 2416.0], [0.8, 2417.0], [0.9, 2417.0], [1.0, 2418.0], [1.1, 2419.0], [1.2, 2420.0], [1.3, 2431.0], [1.4, 2437.0], [1.5, 2440.0], [1.6, 2442.0], [1.7, 2445.0], [1.8, 2453.0], [1.9, 2455.0], [2.0, 2456.0], [2.1, 2456.0], [2.2, 2456.0], [2.3, 2457.0], [2.4, 2457.0], [2.5, 2457.0], [2.6, 2458.0], [2.7, 2458.0], [2.8, 2458.0], [2.9, 2459.0], [3.0, 2459.0], [3.1, 2459.0], [3.2, 2460.0], [3.3, 2460.0], [3.4, 2461.0], [3.5, 2461.0], [3.6, 2461.0], [3.7, 2461.0], [3.8, 2461.0], [3.9, 2462.0], [4.0, 2462.0], [4.1, 2462.0], [4.2, 2462.0], [4.3, 2462.0], [4.4, 2463.0], [4.5, 2463.0], [4.6, 2463.0], [4.7, 2463.0], [4.8, 2463.0], [4.9, 2464.0], [5.0, 2464.0], [5.1, 2464.0], [5.2, 2464.0], [5.3, 2464.0], [5.4, 2465.0], [5.5, 2465.0], [5.6, 2465.0], [5.7, 2465.0], [5.8, 2465.0], [5.9, 2466.0], [6.0, 2466.0], [6.1, 2466.0], [6.2, 2466.0], [6.3, 2466.0], [6.4, 2466.0], [6.5, 2467.0], [6.6, 2467.0], [6.7, 2467.0], [6.8, 2467.0], [6.9, 2467.0], [7.0, 2468.0], [7.1, 2468.0], [7.2, 2468.0], [7.3, 2468.0], [7.4, 2469.0], [7.5, 2469.0], [7.6, 2469.0], [7.7, 2469.0], [7.8, 2470.0], [7.9, 2470.0], [8.0, 2470.0], [8.1, 2470.0], [8.2, 2470.0], [8.3, 2470.0], [8.4, 2471.0], [8.5, 2471.0], [8.6, 2471.0], [8.7, 2471.0], [8.8, 2471.0], [8.9, 2471.0], [9.0, 2472.0], [9.1, 2472.0], [9.2, 2472.0], [9.3, 2473.0], [9.4, 2473.0], [9.5, 2473.0], [9.6, 2473.0], [9.7, 2473.0], [9.8, 2474.0], [9.9, 2474.0], [10.0, 2474.0], [10.1, 2475.0], [10.2, 2475.0], [10.3, 2475.0], [10.4, 2476.0], [10.5, 2476.0], [10.6, 2476.0], [10.7, 2477.0], [10.8, 2477.0], [10.9, 2477.0], [11.0, 2478.0], [11.1, 2478.0], [11.2, 2479.0], [11.3, 2479.0], [11.4, 2479.0], [11.5, 2480.0], [11.6, 2480.0], [11.7, 2480.0], [11.8, 2480.0], [11.9, 2480.0], [12.0, 2481.0], [12.1, 2481.0], [12.2, 2482.0], [12.3, 2482.0], [12.4, 2482.0], [12.5, 2482.0], [12.6, 2483.0], [12.7, 2483.0], [12.8, 2483.0], [12.9, 2484.0], [13.0, 2484.0], [13.1, 2485.0], [13.2, 2485.0], [13.3, 2485.0], [13.4, 2486.0], [13.5, 2486.0], [13.6, 2486.0], [13.7, 2487.0], [13.8, 2487.0], [13.9, 2488.0], [14.0, 2488.0], [14.1, 2489.0], [14.2, 2489.0], [14.3, 2490.0], [14.4, 2490.0], [14.5, 2491.0], [14.6, 2491.0], [14.7, 2492.0], [14.8, 2493.0], [14.9, 2493.0], [15.0, 2493.0], [15.1, 2494.0], [15.2, 2494.0], [15.3, 2495.0], [15.4, 2495.0], [15.5, 2496.0], [15.6, 2496.0], [15.7, 2496.0], [15.8, 2497.0], [15.9, 2497.0], [16.0, 2497.0], [16.1, 2498.0], [16.2, 2498.0], [16.3, 2499.0], [16.4, 2499.0], [16.5, 2499.0], [16.6, 2500.0], [16.7, 2500.0], [16.8, 2501.0], [16.9, 2501.0], [17.0, 2502.0], [17.1, 2502.0], [17.2, 2503.0], [17.3, 2503.0], [17.4, 2503.0], [17.5, 2504.0], [17.6, 2504.0], [17.7, 2504.0], [17.8, 2505.0], [17.9, 2505.0], [18.0, 2505.0], [18.1, 2506.0], [18.2, 2506.0], [18.3, 2507.0], [18.4, 2507.0], [18.5, 2508.0], [18.6, 2508.0], [18.7, 2508.0], [18.8, 2509.0], [18.9, 2509.0], [19.0, 2509.0], [19.1, 2510.0], [19.2, 2510.0], [19.3, 2511.0], [19.4, 2511.0], [19.5, 2512.0], [19.6, 2512.0], [19.7, 2512.0], [19.8, 2512.0], [19.9, 2513.0], [20.0, 2514.0], [20.1, 2514.0], [20.2, 2515.0], [20.3, 2516.0], [20.4, 2516.0], [20.5, 2517.0], [20.6, 2518.0], [20.7, 2518.0], [20.8, 2519.0], [20.9, 2519.0], [21.0, 2520.0], [21.1, 2521.0], [21.2, 2522.0], [21.3, 2523.0], [21.4, 2524.0], [21.5, 2525.0], [21.6, 2526.0], [21.7, 2526.0], [21.8, 2527.0], [21.9, 2528.0], [22.0, 2529.0], [22.1, 2530.0], [22.2, 2530.0], [22.3, 2531.0], [22.4, 2531.0], [22.5, 2532.0], [22.6, 2533.0], [22.7, 2533.0], [22.8, 2534.0], [22.9, 2534.0], [23.0, 2535.0], [23.1, 2536.0], [23.2, 2537.0], [23.3, 2538.0], [23.4, 2538.0], [23.5, 2539.0], [23.6, 2539.0], [23.7, 2540.0], [23.8, 2540.0], [23.9, 2540.0], [24.0, 2541.0], [24.1, 2542.0], [24.2, 2543.0], [24.3, 2544.0], [24.4, 2545.0], [24.5, 2546.0], [24.6, 2547.0], [24.7, 2547.0], [24.8, 2547.0], [24.9, 2548.0], [25.0, 2549.0], [25.1, 2549.0], [25.2, 2550.0], [25.3, 2550.0], [25.4, 2551.0], [25.5, 2552.0], [25.6, 2553.0], [25.7, 2553.0], [25.8, 2554.0], [25.9, 2555.0], [26.0, 2555.0], [26.1, 2556.0], [26.2, 2556.0], [26.3, 2557.0], [26.4, 2557.0], [26.5, 2558.0], [26.6, 2559.0], [26.7, 2560.0], [26.8, 2561.0], [26.9, 2562.0], [27.0, 2562.0], [27.1, 2563.0], [27.2, 2563.0], [27.3, 2564.0], [27.4, 2565.0], [27.5, 2565.0], [27.6, 2566.0], [27.7, 2566.0], [27.8, 2567.0], [27.9, 2567.0], [28.0, 2568.0], [28.1, 2568.0], [28.2, 2569.0], [28.3, 2569.0], [28.4, 2571.0], [28.5, 2571.0], [28.6, 2572.0], [28.7, 2572.0], [28.8, 2573.0], [28.9, 2574.0], [29.0, 2574.0], [29.1, 2574.0], [29.2, 2575.0], [29.3, 2576.0], [29.4, 2577.0], [29.5, 2577.0], [29.6, 2578.0], [29.7, 2579.0], [29.8, 2579.0], [29.9, 2579.0], [30.0, 2580.0], [30.1, 2580.0], [30.2, 2581.0], [30.3, 2581.0], [30.4, 2582.0], [30.5, 2582.0], [30.6, 2583.0], [30.7, 2583.0], [30.8, 2584.0], [30.9, 2585.0], [31.0, 2585.0], [31.1, 2585.0], [31.2, 2585.0], [31.3, 2586.0], [31.4, 2587.0], [31.5, 2587.0], [31.6, 2587.0], [31.7, 2588.0], [31.8, 2588.0], [31.9, 2589.0], [32.0, 2589.0], [32.1, 2590.0], [32.2, 2590.0], [32.3, 2590.0], [32.4, 2591.0], [32.5, 2591.0], [32.6, 2591.0], [32.7, 2592.0], [32.8, 2593.0], [32.9, 2593.0], [33.0, 2594.0], [33.1, 2594.0], [33.2, 2594.0], [33.3, 2595.0], [33.4, 2595.0], [33.5, 2596.0], [33.6, 2596.0], [33.7, 2597.0], [33.8, 2598.0], [33.9, 2598.0], [34.0, 2598.0], [34.1, 2599.0], [34.2, 2599.0], [34.3, 2599.0], [34.4, 2600.0], [34.5, 2600.0], [34.6, 2601.0], [34.7, 2601.0], [34.8, 2602.0], [34.9, 2602.0], [35.0, 2603.0], [35.1, 2603.0], [35.2, 2603.0], [35.3, 2604.0], [35.4, 2605.0], [35.5, 2606.0], [35.6, 2606.0], [35.7, 2607.0], [35.8, 2608.0], [35.9, 2608.0], [36.0, 2609.0], [36.1, 2609.0], [36.2, 2610.0], [36.3, 2610.0], [36.4, 2611.0], [36.5, 2611.0], [36.6, 2611.0], [36.7, 2612.0], [36.8, 2613.0], [36.9, 2613.0], [37.0, 2614.0], [37.1, 2614.0], [37.2, 2615.0], [37.3, 2615.0], [37.4, 2616.0], [37.5, 2617.0], [37.6, 2617.0], [37.7, 2618.0], [37.8, 2618.0], [37.9, 2619.0], [38.0, 2620.0], [38.1, 2620.0], [38.2, 2621.0], [38.3, 2622.0], [38.4, 2622.0], [38.5, 2624.0], [38.6, 2624.0], [38.7, 2625.0], [38.8, 2626.0], [38.9, 2626.0], [39.0, 2626.0], [39.1, 2627.0], [39.2, 2628.0], [39.3, 2628.0], [39.4, 2628.0], [39.5, 2629.0], [39.6, 2629.0], [39.7, 2630.0], [39.8, 2631.0], [39.9, 2632.0], [40.0, 2633.0], [40.1, 2633.0], [40.2, 2634.0], [40.3, 2634.0], [40.4, 2635.0], [40.5, 2636.0], [40.6, 2636.0], [40.7, 2637.0], [40.8, 2637.0], [40.9, 2638.0], [41.0, 2639.0], [41.1, 2640.0], [41.2, 2640.0], [41.3, 2641.0], [41.4, 2642.0], [41.5, 2642.0], [41.6, 2643.0], [41.7, 2643.0], [41.8, 2645.0], [41.9, 2645.0], [42.0, 2646.0], [42.1, 2646.0], [42.2, 2647.0], [42.3, 2648.0], [42.4, 2648.0], [42.5, 2649.0], [42.6, 2650.0], [42.7, 2650.0], [42.8, 2651.0], [42.9, 2652.0], [43.0, 2652.0], [43.1, 2653.0], [43.2, 2653.0], [43.3, 2654.0], [43.4, 2654.0], [43.5, 2655.0], [43.6, 2655.0], [43.7, 2656.0], [43.8, 2657.0], [43.9, 2657.0], [44.0, 2658.0], [44.1, 2658.0], [44.2, 2659.0], [44.3, 2659.0], [44.4, 2660.0], [44.5, 2660.0], [44.6, 2661.0], [44.7, 2661.0], [44.8, 2662.0], [44.9, 2662.0], [45.0, 2663.0], [45.1, 2663.0], [45.2, 2664.0], [45.3, 2664.0], [45.4, 2665.0], [45.5, 2666.0], [45.6, 2666.0], [45.7, 2666.0], [45.8, 2667.0], [45.9, 2667.0], [46.0, 2667.0], [46.1, 2668.0], [46.2, 2668.0], [46.3, 2668.0], [46.4, 2669.0], [46.5, 2669.0], [46.6, 2669.0], [46.7, 2670.0], [46.8, 2670.0], [46.9, 2670.0], [47.0, 2671.0], [47.1, 2671.0], [47.2, 2671.0], [47.3, 2672.0], [47.4, 2672.0], [47.5, 2672.0], [47.6, 2673.0], [47.7, 2673.0], [47.8, 2674.0], [47.9, 2674.0], [48.0, 2674.0], [48.1, 2675.0], [48.2, 2675.0], [48.3, 2675.0], [48.4, 2676.0], [48.5, 2676.0], [48.6, 2676.0], [48.7, 2677.0], [48.8, 2677.0], [48.9, 2678.0], [49.0, 2679.0], [49.1, 2679.0], [49.2, 2680.0], [49.3, 2680.0], [49.4, 2681.0], [49.5, 2681.0], [49.6, 2682.0], [49.7, 2682.0], [49.8, 2682.0], [49.9, 2683.0], [50.0, 2683.0], [50.1, 2684.0], [50.2, 2684.0], [50.3, 2685.0], [50.4, 2685.0], [50.5, 2685.0], [50.6, 2686.0], [50.7, 2686.0], [50.8, 2687.0], [50.9, 2687.0], [51.0, 2688.0], [51.1, 2688.0], [51.2, 2689.0], [51.3, 2689.0], [51.4, 2690.0], [51.5, 2690.0], [51.6, 2690.0], [51.7, 2691.0], [51.8, 2691.0], [51.9, 2691.0], [52.0, 2692.0], [52.1, 2693.0], [52.2, 2694.0], [52.3, 2694.0], [52.4, 2696.0], [52.5, 2697.0], [52.6, 2698.0], [52.7, 2700.0], [52.8, 2701.0], [52.9, 2702.0], [53.0, 2703.0], [53.1, 2704.0], [53.2, 2706.0], [53.3, 2708.0], [53.4, 2709.0], [53.5, 2710.0], [53.6, 2712.0], [53.7, 2714.0], [53.8, 2717.0], [53.9, 2743.0], [54.0, 2751.0], [54.1, 2760.0], [54.2, 2773.0], [54.3, 2795.0], [54.4, 2811.0], [54.5, 2832.0], [54.6, 2851.0], [54.7, 2862.0], [54.8, 2878.0], [54.9, 2886.0], [55.0, 2929.0], [55.1, 3121.0], [55.2, 3817.0], [55.3, 4006.0], [55.4, 4056.0], [55.5, 4081.0], [55.6, 4108.0], [55.7, 4124.0], [55.8, 4156.0], [55.9, 4163.0], [56.0, 4174.0], [56.1, 4184.0], [56.2, 4191.0], [56.3, 4199.0], [56.4, 4214.0], [56.5, 4232.0], [56.6, 4238.0], [56.7, 4242.0], [56.8, 4250.0], [56.9, 4260.0], [57.0, 4264.0], [57.1, 4269.0], [57.2, 4275.0], [57.3, 4280.0], [57.4, 4284.0], [57.5, 4299.0], [57.6, 4306.0], [57.7, 4311.0], [57.8, 4326.0], [57.9, 4333.0], [58.0, 4342.0], [58.1, 4356.0], [58.2, 4367.0], [58.3, 4394.0], [58.4, 4415.0], [58.5, 4584.0], [58.6, 4599.0], [58.7, 4618.0], [58.8, 4641.0], [58.9, 4664.0], [59.0, 4715.0], [59.1, 4737.0], [59.2, 4756.0], [59.3, 4783.0], [59.4, 4879.0], [59.5, 4907.0], [59.6, 4913.0], [59.7, 4925.0], [59.8, 4952.0], [59.9, 5066.0], [60.0, 5090.0], [60.1, 5099.0], [60.2, 5123.0], [60.3, 6061.0], [60.4, 6072.0], [60.5, 6080.0], [60.6, 6086.0], [60.7, 6095.0], [60.8, 6104.0], [60.9, 6107.0], [61.0, 6111.0], [61.1, 6115.0], [61.2, 6118.0], [61.3, 6123.0], [61.4, 6126.0], [61.5, 6131.0], [61.6, 6133.0], [61.7, 6136.0], [61.8, 6138.0], [61.9, 6140.0], [62.0, 6142.0], [62.1, 6145.0], [62.2, 6148.0], [62.3, 6150.0], [62.4, 6152.0], [62.5, 6155.0], [62.6, 6157.0], [62.7, 6157.0], [62.8, 6159.0], [62.9, 6160.0], [63.0, 6162.0], [63.1, 6164.0], [63.2, 6166.0], [63.3, 6169.0], [63.4, 6170.0], [63.5, 6172.0], [63.6, 6174.0], [63.7, 6175.0], [63.8, 6176.0], [63.9, 6179.0], [64.0, 6182.0], [64.1, 6183.0], [64.2, 6185.0], [64.3, 6186.0], [64.4, 6188.0], [64.5, 6190.0], [64.6, 6191.0], [64.7, 6192.0], [64.8, 6194.0], [64.9, 6195.0], [65.0, 6197.0], [65.1, 6198.0], [65.2, 6199.0], [65.3, 6201.0], [65.4, 6203.0], [65.5, 6205.0], [65.6, 6206.0], [65.7, 6207.0], [65.8, 6208.0], [65.9, 6208.0], [66.0, 6209.0], [66.1, 6210.0], [66.2, 6211.0], [66.3, 6212.0], [66.4, 6213.0], [66.5, 6213.0], [66.6, 6214.0], [66.7, 6215.0], [66.8, 6216.0], [66.9, 6217.0], [67.0, 6219.0], [67.1, 6219.0], [67.2, 6221.0], [67.3, 6222.0], [67.4, 6223.0], [67.5, 6224.0], [67.6, 6224.0], [67.7, 6225.0], [67.8, 6226.0], [67.9, 6226.0], [68.0, 6228.0], [68.1, 6228.0], [68.2, 6229.0], [68.3, 6229.0], [68.4, 6230.0], [68.5, 6231.0], [68.6, 6232.0], [68.7, 6233.0], [68.8, 6234.0], [68.9, 6234.0], [69.0, 6235.0], [69.1, 6235.0], [69.2, 6235.0], [69.3, 6236.0], [69.4, 6238.0], [69.5, 6238.0], [69.6, 6239.0], [69.7, 6241.0], [69.8, 6242.0], [69.9, 6243.0], [70.0, 6243.0], [70.1, 6244.0], [70.2, 6245.0], [70.3, 6246.0], [70.4, 6247.0], [70.5, 6247.0], [70.6, 6248.0], [70.7, 6249.0], [70.8, 6250.0], [70.9, 6251.0], [71.0, 6253.0], [71.1, 6253.0], [71.2, 6254.0], [71.3, 6255.0], [71.4, 6256.0], [71.5, 6257.0], [71.6, 6257.0], [71.7, 6258.0], [71.8, 6259.0], [71.9, 6260.0], [72.0, 6260.0], [72.1, 6262.0], [72.2, 6262.0], [72.3, 6263.0], [72.4, 6263.0], [72.5, 6264.0], [72.6, 6265.0], [72.7, 6266.0], [72.8, 6267.0], [72.9, 6267.0], [73.0, 6268.0], [73.1, 6269.0], [73.2, 6270.0], [73.3, 6270.0], [73.4, 6271.0], [73.5, 6272.0], [73.6, 6272.0], [73.7, 6273.0], [73.8, 6273.0], [73.9, 6275.0], [74.0, 6275.0], [74.1, 6276.0], [74.2, 6277.0], [74.3, 6278.0], [74.4, 6278.0], [74.5, 6279.0], [74.6, 6279.0], [74.7, 6280.0], [74.8, 6281.0], [74.9, 6282.0], [75.0, 6283.0], [75.1, 6283.0], [75.2, 6283.0], [75.3, 6284.0], [75.4, 6285.0], [75.5, 6286.0], [75.6, 6286.0], [75.7, 6287.0], [75.8, 6287.0], [75.9, 6289.0], [76.0, 6289.0], [76.1, 6290.0], [76.2, 6290.0], [76.3, 6292.0], [76.4, 6292.0], [76.5, 6293.0], [76.6, 6294.0], [76.7, 6294.0], [76.8, 6295.0], [76.9, 6296.0], [77.0, 6296.0], [77.1, 6297.0], [77.2, 6298.0], [77.3, 6299.0], [77.4, 6300.0], [77.5, 6300.0], [77.6, 6301.0], [77.7, 6301.0], [77.8, 6303.0], [77.9, 6304.0], [78.0, 6304.0], [78.1, 6305.0], [78.2, 6306.0], [78.3, 6307.0], [78.4, 6308.0], [78.5, 6309.0], [78.6, 6310.0], [78.7, 6310.0], [78.8, 6311.0], [78.9, 6312.0], [79.0, 6312.0], [79.1, 6313.0], [79.2, 6315.0], [79.3, 6316.0], [79.4, 6316.0], [79.5, 6317.0], [79.6, 6317.0], [79.7, 6318.0], [79.8, 6319.0], [79.9, 6319.0], [80.0, 6320.0], [80.1, 6321.0], [80.2, 6322.0], [80.3, 6323.0], [80.4, 6324.0], [80.5, 6324.0], [80.6, 6325.0], [80.7, 6326.0], [80.8, 6326.0], [80.9, 6326.0], [81.0, 6327.0], [81.1, 6328.0], [81.2, 6329.0], [81.3, 6330.0], [81.4, 6331.0], [81.5, 6332.0], [81.6, 6333.0], [81.7, 6334.0], [81.8, 6334.0], [81.9, 6335.0], [82.0, 6336.0], [82.1, 6336.0], [82.2, 6337.0], [82.3, 6338.0], [82.4, 6339.0], [82.5, 6340.0], [82.6, 6341.0], [82.7, 6341.0], [82.8, 6342.0], [82.9, 6343.0], [83.0, 6344.0], [83.1, 6344.0], [83.2, 6346.0], [83.3, 6347.0], [83.4, 6348.0], [83.5, 6349.0], [83.6, 6349.0], [83.7, 6350.0], [83.8, 6351.0], [83.9, 6352.0], [84.0, 6353.0], [84.1, 6354.0], [84.2, 6355.0], [84.3, 6356.0], [84.4, 6356.0], [84.5, 6357.0], [84.6, 6358.0], [84.7, 6358.0], [84.8, 6360.0], [84.9, 6361.0], [85.0, 6362.0], [85.1, 6363.0], [85.2, 6363.0], [85.3, 6364.0], [85.4, 6365.0], [85.5, 6366.0], [85.6, 6367.0], [85.7, 6368.0], [85.8, 6369.0], [85.9, 6370.0], [86.0, 6371.0], [86.1, 6372.0], [86.2, 6373.0], [86.3, 6374.0], [86.4, 6375.0], [86.5, 6376.0], [86.6, 6377.0], [86.7, 6378.0], [86.8, 6379.0], [86.9, 6380.0], [87.0, 6381.0], [87.1, 6382.0], [87.2, 6383.0], [87.3, 6383.0], [87.4, 6384.0], [87.5, 6385.0], [87.6, 6386.0], [87.7, 6386.0], [87.8, 6387.0], [87.9, 6387.0], [88.0, 6389.0], [88.1, 6389.0], [88.2, 6390.0], [88.3, 6391.0], [88.4, 6392.0], [88.5, 6393.0], [88.6, 6394.0], [88.7, 6396.0], [88.8, 6397.0], [88.9, 6397.0], [89.0, 6398.0], [89.1, 6399.0], [89.2, 6400.0], [89.3, 6401.0], [89.4, 6401.0], [89.5, 6402.0], [89.6, 6404.0], [89.7, 6404.0], [89.8, 6406.0], [89.9, 6407.0], [90.0, 6408.0], [90.1, 6410.0], [90.2, 6411.0], [90.3, 6412.0], [90.4, 6414.0], [90.5, 6416.0], [90.6, 6419.0], [90.7, 6419.0], [90.8, 6421.0], [90.9, 6424.0], [91.0, 6427.0], [91.1, 6429.0], [91.2, 6431.0], [91.3, 6435.0], [91.4, 6437.0], [91.5, 6438.0], [91.6, 6439.0], [91.7, 6441.0], [91.8, 6442.0], [91.9, 6445.0], [92.0, 6448.0], [92.1, 6449.0], [92.2, 6452.0], [92.3, 6453.0], [92.4, 6454.0], [92.5, 6455.0], [92.6, 6458.0], [92.7, 6461.0], [92.8, 6464.0], [92.9, 6465.0], [93.0, 6467.0], [93.1, 6469.0], [93.2, 6472.0], [93.3, 6474.0], [93.4, 6477.0], [93.5, 6479.0], [93.6, 6480.0], [93.7, 6483.0], [93.8, 6485.0], [93.9, 6486.0], [94.0, 6488.0], [94.1, 6489.0], [94.2, 6492.0], [94.3, 6495.0], [94.4, 6498.0], [94.5, 6500.0], [94.6, 6504.0], [94.7, 6507.0], [94.8, 6509.0], [94.9, 6512.0], [95.0, 6517.0], [95.1, 6521.0], [95.2, 6523.0], [95.3, 6527.0], [95.4, 6529.0], [95.5, 6530.0], [95.6, 6531.0], [95.7, 6534.0], [95.8, 6536.0], [95.9, 6538.0], [96.0, 6542.0], [96.1, 6546.0], [96.2, 6547.0], [96.3, 6548.0], [96.4, 6549.0], [96.5, 6552.0], [96.6, 6556.0], [96.7, 6557.0], [96.8, 6561.0], [96.9, 6563.0], [97.0, 6567.0], [97.1, 6570.0], [97.2, 6574.0], [97.3, 6575.0], [97.4, 6577.0], [97.5, 6581.0], [97.6, 6585.0], [97.7, 6592.0], [97.8, 6595.0], [97.9, 6603.0], [98.0, 6609.0], [98.1, 6615.0], [98.2, 6618.0], [98.3, 6629.0], [98.4, 6636.0], [98.5, 6640.0], [98.6, 6642.0], [98.7, 6652.0], [98.8, 6664.0], [98.9, 6666.0], [99.0, 6669.0], [99.1, 6677.0], [99.2, 6683.0], [99.3, 6687.0], [99.4, 6694.0], [99.5, 6698.0], [99.6, 6702.0], [99.7, 6712.0], [99.8, 6717.0], [99.9, 6725.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 0.0], [93.1, 0.0], [93.2, 0.0], [93.3, 0.0], [93.4, 0.0], [93.5, 0.0], [93.6, 0.0], [93.7, 0.0], [93.8, 0.0], [93.9, 0.0], [94.0, 0.0], [94.1, 0.0], [94.2, 0.0], [94.3, 0.0], [94.4, 0.0], [94.5, 0.0], [94.6, 0.0], [94.7, 0.0], [94.8, 0.0], [94.9, 0.0], [95.0, 0.0], [95.1, 0.0], [95.2, 0.0], [95.3, 0.0], [95.4, 0.0], [95.5, 0.0], [95.6, 0.0], [95.7, 0.0], [95.8, 0.0], [95.9, 0.0], [96.0, 0.0], [96.1, 0.0], [96.2, 0.0], [96.3, 0.0], [96.4, 0.0], [96.5, 0.0], [96.6, 0.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 8.0], [6.2, 8.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 12.0], [6.7, 14.0], [6.8, 16.0], [6.9, 17.0], [7.0, 18.0], [7.1, 19.0], [7.2, 20.0], [7.3, 22.0], [7.4, 23.0], [7.5, 25.0], [7.6, 26.0], [7.7, 27.0], [7.8, 28.0], [7.9, 28.0], [8.0, 29.0], [8.1, 29.0], [8.2, 29.0], [8.3, 30.0], [8.4, 31.0], [8.5, 31.0], [8.6, 31.0], [8.7, 32.0], [8.8, 33.0], [8.9, 33.0], [9.0, 34.0], [9.1, 34.0], [9.2, 35.0], [9.3, 36.0], [9.4, 36.0], [9.5, 37.0], [9.6, 38.0], [9.7, 38.0], [9.8, 39.0], [9.9, 40.0], [10.0, 41.0], [10.1, 42.0], [10.2, 43.0], [10.3, 43.0], [10.4, 44.0], [10.5, 45.0], [10.6, 46.0], [10.7, 46.0], [10.8, 46.0], [10.9, 47.0], [11.0, 48.0], [11.1, 49.0], [11.2, 50.0], [11.3, 50.0], [11.4, 51.0], [11.5, 52.0], [11.6, 52.0], [11.7, 54.0], [11.8, 54.0], [11.9, 55.0], [12.0, 56.0], [12.1, 58.0], [12.2, 59.0], [12.3, 59.0], [12.4, 60.0], [12.5, 60.0], [12.6, 61.0], [12.7, 62.0], [12.8, 63.0], [12.9, 64.0], [13.0, 65.0], [13.1, 67.0], [13.2, 68.0], [13.3, 69.0], [13.4, 70.0], [13.5, 72.0], [13.6, 73.0], [13.7, 75.0], [13.8, 78.0], [13.9, 81.0], [14.0, 83.0], [14.1, 84.0], [14.2, 84.0], [14.3, 86.0], [14.4, 87.0], [14.5, 89.0], [14.6, 90.0], [14.7, 90.0], [14.8, 91.0], [14.9, 91.0], [15.0, 92.0], [15.1, 93.0], [15.2, 94.0], [15.3, 95.0], [15.4, 96.0], [15.5, 97.0], [15.6, 98.0], [15.7, 99.0], [15.8, 99.0], [15.9, 100.0], [16.0, 101.0], [16.1, 103.0], [16.2, 103.0], [16.3, 104.0], [16.4, 105.0], [16.5, 106.0], [16.6, 106.0], [16.7, 108.0], [16.8, 109.0], [16.9, 109.0], [17.0, 110.0], [17.1, 112.0], [17.2, 113.0], [17.3, 114.0], [17.4, 116.0], [17.5, 117.0], [17.6, 117.0], [17.7, 118.0], [17.8, 119.0], [17.9, 120.0], [18.0, 122.0], [18.1, 123.0], [18.2, 124.0], [18.3, 125.0], [18.4, 126.0], [18.5, 127.0], [18.6, 127.0], [18.7, 128.0], [18.8, 130.0], [18.9, 130.0], [19.0, 131.0], [19.1, 131.0], [19.2, 132.0], [19.3, 134.0], [19.4, 134.0], [19.5, 135.0], [19.6, 136.0], [19.7, 138.0], [19.8, 139.0], [19.9, 139.0], [20.0, 140.0], [20.1, 142.0], [20.2, 143.0], [20.3, 144.0], [20.4, 144.0], [20.5, 145.0], [20.6, 148.0], [20.7, 149.0], [20.8, 149.0], [20.9, 150.0], [21.0, 151.0], [21.1, 152.0], [21.2, 153.0], [21.3, 153.0], [21.4, 154.0], [21.5, 154.0], [21.6, 155.0], [21.7, 155.0], [21.8, 156.0], [21.9, 156.0], [22.0, 156.0], [22.1, 157.0], [22.2, 157.0], [22.3, 158.0], [22.4, 158.0], [22.5, 158.0], [22.6, 159.0], [22.7, 159.0], [22.8, 159.0], [22.9, 159.0], [23.0, 160.0], [23.1, 160.0], [23.2, 160.0], [23.3, 160.0], [23.4, 160.0], [23.5, 161.0], [23.6, 161.0], [23.7, 161.0], [23.8, 161.0], [23.9, 162.0], [24.0, 162.0], [24.1, 162.0], [24.2, 163.0], [24.3, 163.0], [24.4, 163.0], [24.5, 163.0], [24.6, 163.0], [24.7, 164.0], [24.8, 164.0], [24.9, 164.0], [25.0, 164.0], [25.1, 164.0], [25.2, 164.0], [25.3, 164.0], [25.4, 164.0], [25.5, 164.0], [25.6, 164.0], [25.7, 164.0], [25.8, 165.0], [25.9, 165.0], [26.0, 165.0], [26.1, 165.0], [26.2, 165.0], [26.3, 165.0], [26.4, 165.0], [26.5, 165.0], [26.6, 165.0], [26.7, 165.0], [26.8, 165.0], [26.9, 165.0], [27.0, 165.0], [27.1, 165.0], [27.2, 165.0], [27.3, 165.0], [27.4, 166.0], [27.5, 166.0], [27.6, 166.0], [27.7, 166.0], [27.8, 166.0], [27.9, 166.0], [28.0, 166.0], [28.1, 166.0], [28.2, 166.0], [28.3, 166.0], [28.4, 166.0], [28.5, 166.0], [28.6, 166.0], [28.7, 166.0], [28.8, 166.0], [28.9, 166.0], [29.0, 167.0], [29.1, 167.0], [29.2, 167.0], [29.3, 167.0], [29.4, 167.0], [29.5, 167.0], [29.6, 167.0], [29.7, 167.0], [29.8, 167.0], [29.9, 167.0], [30.0, 167.0], [30.1, 167.0], [30.2, 167.0], [30.3, 167.0], [30.4, 167.0], [30.5, 167.0], [30.6, 167.0], [30.7, 167.0], [30.8, 167.0], [30.9, 167.0], [31.0, 167.0], [31.1, 167.0], [31.2, 167.0], [31.3, 167.0], [31.4, 167.0], [31.5, 168.0], [31.6, 168.0], [31.7, 168.0], [31.8, 168.0], [31.9, 168.0], [32.0, 168.0], [32.1, 168.0], [32.2, 168.0], [32.3, 168.0], [32.4, 168.0], [32.5, 168.0], [32.6, 168.0], [32.7, 168.0], [32.8, 168.0], [32.9, 168.0], [33.0, 168.0], [33.1, 168.0], [33.2, 168.0], [33.3, 169.0], [33.4, 169.0], [33.5, 169.0], [33.6, 169.0], [33.7, 169.0], [33.8, 169.0], [33.9, 169.0], [34.0, 169.0], [34.1, 169.0], [34.2, 169.0], [34.3, 169.0], [34.4, 169.0], [34.5, 169.0], [34.6, 169.0], [34.7, 169.0], [34.8, 169.0], [34.9, 170.0], [35.0, 170.0], [35.1, 170.0], [35.2, 170.0], [35.3, 170.0], [35.4, 170.0], [35.5, 170.0], [35.6, 170.0], [35.7, 170.0], [35.8, 170.0], [35.9, 170.0], [36.0, 170.0], [36.1, 170.0], [36.2, 171.0], [36.3, 171.0], [36.4, 171.0], [36.5, 171.0], [36.6, 171.0], [36.7, 171.0], [36.8, 171.0], [36.9, 171.0], [37.0, 171.0], [37.1, 171.0], [37.2, 171.0], [37.3, 171.0], [37.4, 171.0], [37.5, 172.0], [37.6, 172.0], [37.7, 172.0], [37.8, 172.0], [37.9, 172.0], [38.0, 172.0], [38.1, 172.0], [38.2, 172.0], [38.3, 172.0], [38.4, 172.0], [38.5, 172.0], [38.6, 172.0], [38.7, 172.0], [38.8, 172.0], [38.9, 172.0], [39.0, 172.0], [39.1, 172.0], [39.2, 172.0], [39.3, 172.0], [39.4, 172.0], [39.5, 172.0], [39.6, 172.0], [39.7, 172.0], [39.8, 172.0], [39.9, 172.0], [40.0, 172.0], [40.1, 172.0], [40.2, 172.0], [40.3, 172.0], [40.4, 172.0], [40.5, 172.0], [40.6, 172.0], [40.7, 172.0], [40.8, 173.0], [40.9, 173.0], [41.0, 173.0], [41.1, 173.0], [41.2, 173.0], [41.3, 173.0], [41.4, 173.0], [41.5, 173.0], [41.6, 173.0], [41.7, 173.0], [41.8, 173.0], [41.9, 173.0], [42.0, 173.0], [42.1, 173.0], [42.2, 173.0], [42.3, 173.0], [42.4, 173.0], [42.5, 173.0], [42.6, 173.0], [42.7, 173.0], [42.8, 173.0], [42.9, 173.0], [43.0, 173.0], [43.1, 173.0], [43.2, 173.0], [43.3, 173.0], [43.4, 173.0], [43.5, 173.0], [43.6, 174.0], [43.7, 174.0], [43.8, 174.0], [43.9, 174.0], [44.0, 174.0], [44.1, 174.0], [44.2, 174.0], [44.3, 174.0], [44.4, 174.0], [44.5, 174.0], [44.6, 174.0], [44.7, 174.0], [44.8, 174.0], [44.9, 174.0], [45.0, 174.0], [45.1, 174.0], [45.2, 174.0], [45.3, 174.0], [45.4, 174.0], [45.5, 174.0], [45.6, 174.0], [45.7, 174.0], [45.8, 175.0], [45.9, 175.0], [46.0, 175.0], [46.1, 175.0], [46.2, 175.0], [46.3, 175.0], [46.4, 175.0], [46.5, 175.0], [46.6, 175.0], [46.7, 175.0], [46.8, 175.0], [46.9, 175.0], [47.0, 175.0], [47.1, 175.0], [47.2, 175.0], [47.3, 175.0], [47.4, 175.0], [47.5, 175.0], [47.6, 175.0], [47.7, 175.0], [47.8, 175.0], [47.9, 175.0], [48.0, 175.0], [48.1, 175.0], [48.2, 175.0], [48.3, 176.0], [48.4, 176.0], [48.5, 176.0], [48.6, 176.0], [48.7, 176.0], [48.8, 176.0], [48.9, 176.0], [49.0, 176.0], [49.1, 176.0], [49.2, 176.0], [49.3, 176.0], [49.4, 176.0], [49.5, 176.0], [49.6, 176.0], [49.7, 176.0], [49.8, 176.0], [49.9, 176.0], [50.0, 176.0], [50.1, 176.0], [50.2, 176.0], [50.3, 176.0], [50.4, 176.0], [50.5, 176.0], [50.6, 176.0], [50.7, 176.0], [50.8, 176.0], [50.9, 176.0], [51.0, 176.0], [51.1, 176.0], [51.2, 176.0], [51.3, 176.0], [51.4, 176.0], [51.5, 176.0], [51.6, 176.0], [51.7, 176.0], [51.8, 176.0], [51.9, 177.0], [52.0, 177.0], [52.1, 177.0], [52.2, 177.0], [52.3, 177.0], [52.4, 177.0], [52.5, 177.0], [52.6, 177.0], [52.7, 177.0], [52.8, 177.0], [52.9, 177.0], [53.0, 177.0], [53.1, 177.0], [53.2, 177.0], [53.3, 177.0], [53.4, 177.0], [53.5, 177.0], [53.6, 177.0], [53.7, 177.0], [53.8, 177.0], [53.9, 177.0], [54.0, 177.0], [54.1, 177.0], [54.2, 178.0], [54.3, 178.0], [54.4, 178.0], [54.5, 178.0], [54.6, 178.0], [54.7, 178.0], [54.8, 178.0], [54.9, 178.0], [55.0, 178.0], [55.1, 178.0], [55.2, 178.0], [55.3, 178.0], [55.4, 178.0], [55.5, 178.0], [55.6, 178.0], [55.7, 179.0], [55.8, 179.0], [55.9, 179.0], [56.0, 179.0], [56.1, 179.0], [56.2, 179.0], [56.3, 179.0], [56.4, 179.0], [56.5, 179.0], [56.6, 179.0], [56.7, 179.0], [56.8, 179.0], [56.9, 179.0], [57.0, 179.0], [57.1, 179.0], [57.2, 179.0], [57.3, 179.0], [57.4, 179.0], [57.5, 179.0], [57.6, 179.0], [57.7, 179.0], [57.8, 179.0], [57.9, 179.0], [58.0, 179.0], [58.1, 179.0], [58.2, 179.0], [58.3, 180.0], [58.4, 180.0], [58.5, 180.0], [58.6, 180.0], [58.7, 180.0], [58.8, 180.0], [58.9, 180.0], [59.0, 180.0], [59.1, 180.0], [59.2, 180.0], [59.3, 180.0], [59.4, 180.0], [59.5, 180.0], [59.6, 180.0], [59.7, 180.0], [59.8, 180.0], [59.9, 180.0], [60.0, 180.0], [60.1, 180.0], [60.2, 180.0], [60.3, 180.0], [60.4, 181.0], [60.5, 181.0], [60.6, 181.0], [60.7, 181.0], [60.8, 181.0], [60.9, 181.0], [61.0, 181.0], [61.1, 181.0], [61.2, 181.0], [61.3, 181.0], [61.4, 181.0], [61.5, 181.0], [61.6, 181.0], [61.7, 181.0], [61.8, 181.0], [61.9, 181.0], [62.0, 181.0], [62.1, 181.0], [62.2, 181.0], [62.3, 181.0], [62.4, 181.0], [62.5, 182.0], [62.6, 182.0], [62.7, 182.0], [62.8, 182.0], [62.9, 182.0], [63.0, 182.0], [63.1, 182.0], [63.2, 182.0], [63.3, 182.0], [63.4, 182.0], [63.5, 182.0], [63.6, 182.0], [63.7, 182.0], [63.8, 182.0], [63.9, 182.0], [64.0, 182.0], [64.1, 182.0], [64.2, 182.0], [64.3, 182.0], [64.4, 182.0], [64.5, 182.0], [64.6, 183.0], [64.7, 183.0], [64.8, 183.0], [64.9, 183.0], [65.0, 183.0], [65.1, 183.0], [65.2, 183.0], [65.3, 183.0], [65.4, 183.0], [65.5, 183.0], [65.6, 183.0], [65.7, 183.0], [65.8, 183.0], [65.9, 183.0], [66.0, 183.0], [66.1, 183.0], [66.2, 183.0], [66.3, 183.0], [66.4, 183.0], [66.5, 183.0], [66.6, 184.0], [66.7, 184.0], [66.8, 184.0], [66.9, 184.0], [67.0, 184.0], [67.1, 184.0], [67.2, 184.0], [67.3, 184.0], [67.4, 184.0], [67.5, 184.0], [67.6, 184.0], [67.7, 184.0], [67.8, 184.0], [67.9, 184.0], [68.0, 184.0], [68.1, 184.0], [68.2, 184.0], [68.3, 184.0], [68.4, 184.0], [68.5, 184.0], [68.6, 184.0], [68.7, 185.0], [68.8, 185.0], [68.9, 185.0], [69.0, 185.0], [69.1, 185.0], [69.2, 185.0], [69.3, 185.0], [69.4, 185.0], [69.5, 185.0], [69.6, 185.0], [69.7, 185.0], [69.8, 185.0], [69.9, 185.0], [70.0, 186.0], [70.1, 186.0], [70.2, 186.0], [70.3, 186.0], [70.4, 186.0], [70.5, 186.0], [70.6, 186.0], [70.7, 186.0], [70.8, 186.0], [70.9, 186.0], [71.0, 186.0], [71.1, 186.0], [71.2, 186.0], [71.3, 186.0], [71.4, 186.0], [71.5, 187.0], [71.6, 187.0], [71.7, 187.0], [71.8, 187.0], [71.9, 187.0], [72.0, 187.0], [72.1, 187.0], [72.2, 187.0], [72.3, 187.0], [72.4, 187.0], [72.5, 187.0], [72.6, 188.0], [72.7, 188.0], [72.8, 188.0], [72.9, 188.0], [73.0, 188.0], [73.1, 188.0], [73.2, 188.0], [73.3, 188.0], [73.4, 188.0], [73.5, 189.0], [73.6, 189.0], [73.7, 189.0], [73.8, 189.0], [73.9, 189.0], [74.0, 189.0], [74.1, 189.0], [74.2, 189.0], [74.3, 189.0], [74.4, 190.0], [74.5, 190.0], [74.6, 190.0], [74.7, 190.0], [74.8, 190.0], [74.9, 190.0], [75.0, 190.0], [75.1, 190.0], [75.2, 190.0], [75.3, 190.0], [75.4, 191.0], [75.5, 191.0], [75.6, 191.0], [75.7, 191.0], [75.8, 191.0], [75.9, 191.0], [76.0, 191.0], [76.1, 191.0], [76.2, 192.0], [76.3, 192.0], [76.4, 192.0], [76.5, 192.0], [76.6, 192.0], [76.7, 192.0], [76.8, 192.0], [76.9, 193.0], [77.0, 193.0], [77.1, 193.0], [77.2, 193.0], [77.3, 193.0], [77.4, 193.0], [77.5, 193.0], [77.6, 194.0], [77.7, 194.0], [77.8, 194.0], [77.9, 194.0], [78.0, 194.0], [78.1, 194.0], [78.2, 194.0], [78.3, 195.0], [78.4, 195.0], [78.5, 195.0], [78.6, 195.0], [78.7, 195.0], [78.8, 195.0], [78.9, 195.0], [79.0, 195.0], [79.1, 195.0], [79.2, 195.0], [79.3, 195.0], [79.4, 195.0], [79.5, 195.0], [79.6, 196.0], [79.7, 196.0], [79.8, 196.0], [79.9, 196.0], [80.0, 196.0], [80.1, 196.0], [80.2, 196.0], [80.3, 196.0], [80.4, 196.0], [80.5, 196.0], [80.6, 196.0], [80.7, 196.0], [80.8, 196.0], [80.9, 196.0], [81.0, 197.0], [81.1, 197.0], [81.2, 197.0], [81.3, 197.0], [81.4, 197.0], [81.5, 197.0], [81.6, 197.0], [81.7, 197.0], [81.8, 197.0], [81.9, 197.0], [82.0, 197.0], [82.1, 197.0], [82.2, 198.0], [82.3, 198.0], [82.4, 198.0], [82.5, 198.0], [82.6, 198.0], [82.7, 198.0], [82.8, 198.0], [82.9, 198.0], [83.0, 198.0], [83.1, 199.0], [83.2, 199.0], [83.3, 199.0], [83.4, 199.0], [83.5, 199.0], [83.6, 199.0], [83.7, 199.0], [83.8, 199.0], [83.9, 199.0], [84.0, 199.0], [84.1, 200.0], [84.2, 200.0], [84.3, 200.0], [84.4, 200.0], [84.5, 200.0], [84.6, 200.0], [84.7, 200.0], [84.8, 200.0], [84.9, 200.0], [85.0, 200.0], [85.1, 200.0], [85.2, 200.0], [85.3, 201.0], [85.4, 201.0], [85.5, 201.0], [85.6, 201.0], [85.7, 201.0], [85.8, 201.0], [85.9, 201.0], [86.0, 201.0], [86.1, 201.0], [86.2, 201.0], [86.3, 201.0], [86.4, 201.0], [86.5, 202.0], [86.6, 202.0], [86.7, 202.0], [86.8, 202.0], [86.9, 202.0], [87.0, 202.0], [87.1, 202.0], [87.2, 202.0], [87.3, 202.0], [87.4, 202.0], [87.5, 202.0], [87.6, 202.0], [87.7, 203.0], [87.8, 203.0], [87.9, 203.0], [88.0, 203.0], [88.1, 203.0], [88.2, 203.0], [88.3, 203.0], [88.4, 203.0], [88.5, 203.0], [88.6, 203.0], [88.7, 203.0], [88.8, 203.0], [88.9, 203.0], [89.0, 203.0], [89.1, 203.0], [89.2, 203.0], [89.3, 203.0], [89.4, 203.0], [89.5, 204.0], [89.6, 204.0], [89.7, 204.0], [89.8, 204.0], [89.9, 204.0], [90.0, 204.0], [90.1, 204.0], [90.2, 204.0], [90.3, 204.0], [90.4, 204.0], [90.5, 204.0], [90.6, 204.0], [90.7, 205.0], [90.8, 205.0], [90.9, 205.0], [91.0, 205.0], [91.1, 205.0], [91.2, 205.0], [91.3, 205.0], [91.4, 205.0], [91.5, 206.0], [91.6, 206.0], [91.7, 206.0], [91.8, 206.0], [91.9, 206.0], [92.0, 206.0], [92.1, 207.0], [92.2, 207.0], [92.3, 207.0], [92.4, 207.0], [92.5, 207.0], [92.6, 207.0], [92.7, 207.0], [92.8, 207.0], [92.9, 208.0], [93.0, 208.0], [93.1, 208.0], [93.2, 208.0], [93.3, 208.0], [93.4, 209.0], [93.5, 209.0], [93.6, 210.0], [93.7, 210.0], [93.8, 210.0], [93.9, 211.0], [94.0, 211.0], [94.1, 211.0], [94.2, 212.0], [94.3, 212.0], [94.4, 212.0], [94.5, 212.0], [94.6, 212.0], [94.7, 213.0], [94.8, 213.0], [94.9, 213.0], [95.0, 213.0], [95.1, 214.0], [95.2, 214.0], [95.3, 214.0], [95.4, 215.0], [95.5, 215.0], [95.6, 216.0], [95.7, 216.0], [95.8, 217.0], [95.9, 217.0], [96.0, 218.0], [96.1, 218.0], [96.2, 219.0], [96.3, 219.0], [96.4, 220.0], [96.5, 221.0], [96.6, 223.0], [96.7, 223.0], [96.8, 224.0], [96.9, 224.0], [97.0, 224.0], [97.1, 225.0], [97.2, 225.0], [97.3, 225.0], [97.4, 226.0], [97.5, 226.0], [97.6, 227.0], [97.7, 228.0], [97.8, 230.0], [97.9, 236.0], [98.0, 243.0], [98.1, 260.0], [98.2, 301.0], [98.3, 313.0], [98.4, 324.0], [98.5, 337.0], [98.6, 346.0], [98.7, 357.0], [98.8, 368.0], [98.9, 382.0], [99.0, 399.0], [99.1, 408.0], [99.2, 417.0], [99.3, 451.0], [99.4, 470.0], [99.5, 504.0], [99.6, 3720.0], [99.7, 4021.0], [99.8, 4074.0], [99.9, 4113.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 8.0], [5.8, 8.0], [5.9, 9.0], [6.0, 9.0], [6.1, 10.0], [6.2, 15.0], [6.3, 22.0], [6.4, 26.0], [6.5, 28.0], [6.6, 29.0], [6.7, 31.0], [6.8, 33.0], [6.9, 37.0], [7.0, 40.0], [7.1, 41.0], [7.2, 44.0], [7.3, 47.0], [7.4, 48.0], [7.5, 51.0], [7.6, 53.0], [7.7, 53.0], [7.8, 55.0], [7.9, 56.0], [8.0, 56.0], [8.1, 57.0], [8.2, 58.0], [8.3, 60.0], [8.4, 63.0], [8.5, 64.0], [8.6, 65.0], [8.7, 66.0], [8.8, 68.0], [8.9, 70.0], [9.0, 72.0], [9.1, 74.0], [9.2, 75.0], [9.3, 78.0], [9.4, 81.0], [9.5, 83.0], [9.6, 86.0], [9.7, 88.0], [9.8, 89.0], [9.9, 92.0], [10.0, 93.0], [10.1, 95.0], [10.2, 95.0], [10.3, 97.0], [10.4, 99.0], [10.5, 101.0], [10.6, 102.0], [10.7, 104.0], [10.8, 106.0], [10.9, 107.0], [11.0, 108.0], [11.1, 109.0], [11.2, 110.0], [11.3, 111.0], [11.4, 112.0], [11.5, 113.0], [11.6, 114.0], [11.7, 116.0], [11.8, 118.0], [11.9, 119.0], [12.0, 120.0], [12.1, 122.0], [12.2, 126.0], [12.3, 128.0], [12.4, 129.0], [12.5, 130.0], [12.6, 132.0], [12.7, 132.0], [12.8, 134.0], [12.9, 134.0], [13.0, 135.0], [13.1, 136.0], [13.2, 137.0], [13.3, 139.0], [13.4, 140.0], [13.5, 141.0], [13.6, 143.0], [13.7, 143.0], [13.8, 143.0], [13.9, 144.0], [14.0, 144.0], [14.1, 145.0], [14.2, 145.0], [14.3, 145.0], [14.4, 145.0], [14.5, 146.0], [14.6, 146.0], [14.7, 146.0], [14.8, 146.0], [14.9, 146.0], [15.0, 146.0], [15.1, 147.0], [15.2, 147.0], [15.3, 147.0], [15.4, 147.0], [15.5, 148.0], [15.6, 148.0], [15.7, 148.0], [15.8, 148.0], [15.9, 149.0], [16.0, 149.0], [16.1, 149.0], [16.2, 149.0], [16.3, 150.0], [16.4, 150.0], [16.5, 150.0], [16.6, 150.0], [16.7, 150.0], [16.8, 150.0], [16.9, 151.0], [17.0, 151.0], [17.1, 151.0], [17.2, 151.0], [17.3, 151.0], [17.4, 151.0], [17.5, 151.0], [17.6, 152.0], [17.7, 152.0], [17.8, 152.0], [17.9, 152.0], [18.0, 152.0], [18.1, 152.0], [18.2, 153.0], [18.3, 153.0], [18.4, 153.0], [18.5, 153.0], [18.6, 153.0], [18.7, 153.0], [18.8, 153.0], [18.9, 153.0], [19.0, 154.0], [19.1, 154.0], [19.2, 154.0], [19.3, 154.0], [19.4, 154.0], [19.5, 154.0], [19.6, 154.0], [19.7, 155.0], [19.8, 155.0], [19.9, 155.0], [20.0, 155.0], [20.1, 155.0], [20.2, 155.0], [20.3, 156.0], [20.4, 156.0], [20.5, 156.0], [20.6, 156.0], [20.7, 156.0], [20.8, 156.0], [20.9, 157.0], [21.0, 157.0], [21.1, 157.0], [21.2, 157.0], [21.3, 157.0], [21.4, 157.0], [21.5, 158.0], [21.6, 158.0], [21.7, 158.0], [21.8, 158.0], [21.9, 158.0], [22.0, 158.0], [22.1, 158.0], [22.2, 159.0], [22.3, 159.0], [22.4, 159.0], [22.5, 159.0], [22.6, 159.0], [22.7, 159.0], [22.8, 160.0], [22.9, 160.0], [23.0, 160.0], [23.1, 161.0], [23.2, 161.0], [23.3, 161.0], [23.4, 161.0], [23.5, 161.0], [23.6, 161.0], [23.7, 161.0], [23.8, 162.0], [23.9, 162.0], [24.0, 162.0], [24.1, 162.0], [24.2, 162.0], [24.3, 163.0], [24.4, 163.0], [24.5, 163.0], [24.6, 163.0], [24.7, 163.0], [24.8, 164.0], [24.9, 164.0], [25.0, 164.0], [25.1, 164.0], [25.2, 164.0], [25.3, 164.0], [25.4, 164.0], [25.5, 164.0], [25.6, 165.0], [25.7, 165.0], [25.8, 165.0], [25.9, 165.0], [26.0, 165.0], [26.1, 165.0], [26.2, 165.0], [26.3, 165.0], [26.4, 165.0], [26.5, 165.0], [26.6, 166.0], [26.7, 166.0], [26.8, 166.0], [26.9, 166.0], [27.0, 166.0], [27.1, 166.0], [27.2, 166.0], [27.3, 166.0], [27.4, 167.0], [27.5, 167.0], [27.6, 167.0], [27.7, 167.0], [27.8, 167.0], [27.9, 167.0], [28.0, 167.0], [28.1, 167.0], [28.2, 167.0], [28.3, 167.0], [28.4, 168.0], [28.5, 168.0], [28.6, 168.0], [28.7, 168.0], [28.8, 168.0], [28.9, 168.0], [29.0, 169.0], [29.1, 169.0], [29.2, 169.0], [29.3, 169.0], [29.4, 169.0], [29.5, 169.0], [29.6, 169.0], [29.7, 169.0], [29.8, 169.0], [29.9, 169.0], [30.0, 169.0], [30.1, 170.0], [30.2, 170.0], [30.3, 170.0], [30.4, 170.0], [30.5, 170.0], [30.6, 170.0], [30.7, 170.0], [30.8, 170.0], [30.9, 171.0], [31.0, 171.0], [31.1, 171.0], [31.2, 171.0], [31.3, 171.0], [31.4, 171.0], [31.5, 171.0], [31.6, 171.0], [31.7, 171.0], [31.8, 172.0], [31.9, 172.0], [32.0, 172.0], [32.1, 172.0], [32.2, 172.0], [32.3, 172.0], [32.4, 172.0], [32.5, 172.0], [32.6, 172.0], [32.7, 172.0], [32.8, 173.0], [32.9, 173.0], [33.0, 173.0], [33.1, 173.0], [33.2, 173.0], [33.3, 173.0], [33.4, 173.0], [33.5, 173.0], [33.6, 173.0], [33.7, 173.0], [33.8, 173.0], [33.9, 173.0], [34.0, 174.0], [34.1, 174.0], [34.2, 174.0], [34.3, 174.0], [34.4, 174.0], [34.5, 174.0], [34.6, 174.0], [34.7, 174.0], [34.8, 174.0], [34.9, 174.0], [35.0, 175.0], [35.1, 175.0], [35.2, 175.0], [35.3, 175.0], [35.4, 175.0], [35.5, 175.0], [35.6, 175.0], [35.7, 175.0], [35.8, 175.0], [35.9, 175.0], [36.0, 175.0], [36.1, 175.0], [36.2, 175.0], [36.3, 175.0], [36.4, 176.0], [36.5, 176.0], [36.6, 176.0], [36.7, 176.0], [36.8, 176.0], [36.9, 176.0], [37.0, 176.0], [37.1, 176.0], [37.2, 176.0], [37.3, 176.0], [37.4, 176.0], [37.5, 176.0], [37.6, 176.0], [37.7, 176.0], [37.8, 177.0], [37.9, 177.0], [38.0, 177.0], [38.1, 177.0], [38.2, 177.0], [38.3, 177.0], [38.4, 177.0], [38.5, 177.0], [38.6, 177.0], [38.7, 177.0], [38.8, 177.0], [38.9, 177.0], [39.0, 177.0], [39.1, 177.0], [39.2, 178.0], [39.3, 178.0], [39.4, 178.0], [39.5, 178.0], [39.6, 178.0], [39.7, 178.0], [39.8, 178.0], [39.9, 178.0], [40.0, 178.0], [40.1, 178.0], [40.2, 178.0], [40.3, 178.0], [40.4, 178.0], [40.5, 179.0], [40.6, 179.0], [40.7, 179.0], [40.8, 179.0], [40.9, 179.0], [41.0, 179.0], [41.1, 179.0], [41.2, 179.0], [41.3, 179.0], [41.4, 179.0], [41.5, 180.0], [41.6, 180.0], [41.7, 180.0], [41.8, 180.0], [41.9, 180.0], [42.0, 180.0], [42.1, 180.0], [42.2, 180.0], [42.3, 180.0], [42.4, 180.0], [42.5, 181.0], [42.6, 181.0], [42.7, 181.0], [42.8, 181.0], [42.9, 181.0], [43.0, 181.0], [43.1, 181.0], [43.2, 181.0], [43.3, 181.0], [43.4, 181.0], [43.5, 181.0], [43.6, 182.0], [43.7, 182.0], [43.8, 182.0], [43.9, 182.0], [44.0, 182.0], [44.1, 182.0], [44.2, 182.0], [44.3, 182.0], [44.4, 182.0], [44.5, 182.0], [44.6, 183.0], [44.7, 183.0], [44.8, 183.0], [44.9, 183.0], [45.0, 183.0], [45.1, 183.0], [45.2, 183.0], [45.3, 183.0], [45.4, 183.0], [45.5, 183.0], [45.6, 183.0], [45.7, 183.0], [45.8, 183.0], [45.9, 184.0], [46.0, 184.0], [46.1, 184.0], [46.2, 184.0], [46.3, 184.0], [46.4, 184.0], [46.5, 184.0], [46.6, 184.0], [46.7, 184.0], [46.8, 184.0], [46.9, 184.0], [47.0, 185.0], [47.1, 185.0], [47.2, 185.0], [47.3, 185.0], [47.4, 185.0], [47.5, 185.0], [47.6, 185.0], [47.7, 185.0], [47.8, 185.0], [47.9, 185.0], [48.0, 185.0], [48.1, 185.0], [48.2, 186.0], [48.3, 186.0], [48.4, 186.0], [48.5, 186.0], [48.6, 186.0], [48.7, 186.0], [48.8, 186.0], [48.9, 186.0], [49.0, 186.0], [49.1, 186.0], [49.2, 186.0], [49.3, 186.0], [49.4, 187.0], [49.5, 187.0], [49.6, 187.0], [49.7, 187.0], [49.8, 187.0], [49.9, 187.0], [50.0, 187.0], [50.1, 187.0], [50.2, 187.0], [50.3, 187.0], [50.4, 187.0], [50.5, 188.0], [50.6, 188.0], [50.7, 188.0], [50.8, 188.0], [50.9, 188.0], [51.0, 188.0], [51.1, 188.0], [51.2, 188.0], [51.3, 188.0], [51.4, 188.0], [51.5, 189.0], [51.6, 189.0], [51.7, 189.0], [51.8, 189.0], [51.9, 189.0], [52.0, 189.0], [52.1, 189.0], [52.2, 189.0], [52.3, 189.0], [52.4, 189.0], [52.5, 189.0], [52.6, 189.0], [52.7, 189.0], [52.8, 189.0], [52.9, 190.0], [53.0, 190.0], [53.1, 190.0], [53.2, 190.0], [53.3, 190.0], [53.4, 190.0], [53.5, 190.0], [53.6, 191.0], [53.7, 191.0], [53.8, 191.0], [53.9, 191.0], [54.0, 191.0], [54.1, 191.0], [54.2, 191.0], [54.3, 191.0], [54.4, 191.0], [54.5, 192.0], [54.6, 192.0], [54.7, 192.0], [54.8, 192.0], [54.9, 192.0], [55.0, 192.0], [55.1, 193.0], [55.2, 193.0], [55.3, 193.0], [55.4, 193.0], [55.5, 193.0], [55.6, 193.0], [55.7, 194.0], [55.8, 194.0], [55.9, 194.0], [56.0, 194.0], [56.1, 194.0], [56.2, 194.0], [56.3, 195.0], [56.4, 195.0], [56.5, 195.0], [56.6, 195.0], [56.7, 195.0], [56.8, 196.0], [56.9, 196.0], [57.0, 196.0], [57.1, 196.0], [57.2, 196.0], [57.3, 196.0], [57.4, 196.0], [57.5, 197.0], [57.6, 197.0], [57.7, 197.0], [57.8, 197.0], [57.9, 197.0], [58.0, 197.0], [58.1, 198.0], [58.2, 198.0], [58.3, 198.0], [58.4, 198.0], [58.5, 198.0], [58.6, 198.0], [58.7, 198.0], [58.8, 199.0], [58.9, 199.0], [59.0, 199.0], [59.1, 199.0], [59.2, 199.0], [59.3, 199.0], [59.4, 200.0], [59.5, 200.0], [59.6, 200.0], [59.7, 200.0], [59.8, 200.0], [59.9, 200.0], [60.0, 201.0], [60.1, 201.0], [60.2, 201.0], [60.3, 201.0], [60.4, 201.0], [60.5, 201.0], [60.6, 201.0], [60.7, 201.0], [60.8, 201.0], [60.9, 201.0], [61.0, 202.0], [61.1, 202.0], [61.2, 202.0], [61.3, 202.0], [61.4, 202.0], [61.5, 202.0], [61.6, 202.0], [61.7, 203.0], [61.8, 203.0], [61.9, 203.0], [62.0, 203.0], [62.1, 203.0], [62.2, 203.0], [62.3, 203.0], [62.4, 203.0], [62.5, 204.0], [62.6, 204.0], [62.7, 204.0], [62.8, 204.0], [62.9, 204.0], [63.0, 204.0], [63.1, 205.0], [63.2, 205.0], [63.3, 205.0], [63.4, 205.0], [63.5, 205.0], [63.6, 205.0], [63.7, 205.0], [63.8, 206.0], [63.9, 206.0], [64.0, 206.0], [64.1, 206.0], [64.2, 206.0], [64.3, 206.0], [64.4, 207.0], [64.5, 207.0], [64.6, 207.0], [64.7, 207.0], [64.8, 207.0], [64.9, 207.0], [65.0, 208.0], [65.1, 208.0], [65.2, 208.0], [65.3, 208.0], [65.4, 209.0], [65.5, 209.0], [65.6, 209.0], [65.7, 209.0], [65.8, 210.0], [65.9, 210.0], [66.0, 210.0], [66.1, 210.0], [66.2, 210.0], [66.3, 210.0], [66.4, 210.0], [66.5, 211.0], [66.6, 211.0], [66.7, 211.0], [66.8, 211.0], [66.9, 211.0], [67.0, 211.0], [67.1, 211.0], [67.2, 212.0], [67.3, 212.0], [67.4, 212.0], [67.5, 212.0], [67.6, 212.0], [67.7, 212.0], [67.8, 212.0], [67.9, 213.0], [68.0, 213.0], [68.1, 213.0], [68.2, 213.0], [68.3, 213.0], [68.4, 213.0], [68.5, 213.0], [68.6, 214.0], [68.7, 214.0], [68.8, 214.0], [68.9, 214.0], [69.0, 214.0], [69.1, 214.0], [69.2, 214.0], [69.3, 214.0], [69.4, 215.0], [69.5, 215.0], [69.6, 215.0], [69.7, 215.0], [69.8, 215.0], [69.9, 215.0], [70.0, 215.0], [70.1, 215.0], [70.2, 216.0], [70.3, 216.0], [70.4, 216.0], [70.5, 216.0], [70.6, 216.0], [70.7, 216.0], [70.8, 216.0], [70.9, 216.0], [71.0, 217.0], [71.1, 217.0], [71.2, 217.0], [71.3, 217.0], [71.4, 217.0], [71.5, 217.0], [71.6, 217.0], [71.7, 218.0], [71.8, 218.0], [71.9, 218.0], [72.0, 218.0], [72.1, 218.0], [72.2, 219.0], [72.3, 219.0], [72.4, 219.0], [72.5, 219.0], [72.6, 219.0], [72.7, 219.0], [72.8, 219.0], [72.9, 220.0], [73.0, 220.0], [73.1, 220.0], [73.2, 220.0], [73.3, 220.0], [73.4, 221.0], [73.5, 221.0], [73.6, 221.0], [73.7, 221.0], [73.8, 222.0], [73.9, 222.0], [74.0, 222.0], [74.1, 222.0], [74.2, 223.0], [74.3, 223.0], [74.4, 223.0], [74.5, 223.0], [74.6, 224.0], [74.7, 224.0], [74.8, 224.0], [74.9, 224.0], [75.0, 224.0], [75.1, 225.0], [75.2, 225.0], [75.3, 225.0], [75.4, 225.0], [75.5, 225.0], [75.6, 225.0], [75.7, 226.0], [75.8, 226.0], [75.9, 226.0], [76.0, 226.0], [76.1, 226.0], [76.2, 227.0], [76.3, 227.0], [76.4, 227.0], [76.5, 227.0], [76.6, 227.0], [76.7, 227.0], [76.8, 228.0], [76.9, 228.0], [77.0, 228.0], [77.1, 228.0], [77.2, 228.0], [77.3, 229.0], [77.4, 229.0], [77.5, 229.0], [77.6, 229.0], [77.7, 229.0], [77.8, 230.0], [77.9, 230.0], [78.0, 230.0], [78.1, 230.0], [78.2, 230.0], [78.3, 231.0], [78.4, 231.0], [78.5, 231.0], [78.6, 231.0], [78.7, 232.0], [78.8, 232.0], [78.9, 232.0], [79.0, 232.0], [79.1, 233.0], [79.2, 233.0], [79.3, 233.0], [79.4, 233.0], [79.5, 234.0], [79.6, 234.0], [79.7, 234.0], [79.8, 234.0], [79.9, 234.0], [80.0, 235.0], [80.1, 235.0], [80.2, 235.0], [80.3, 235.0], [80.4, 236.0], [80.5, 236.0], [80.6, 236.0], [80.7, 236.0], [80.8, 236.0], [80.9, 237.0], [81.0, 237.0], [81.1, 237.0], [81.2, 237.0], [81.3, 238.0], [81.4, 238.0], [81.5, 238.0], [81.6, 238.0], [81.7, 239.0], [81.8, 239.0], [81.9, 239.0], [82.0, 239.0], [82.1, 239.0], [82.2, 240.0], [82.3, 240.0], [82.4, 240.0], [82.5, 240.0], [82.6, 241.0], [82.7, 241.0], [82.8, 241.0], [82.9, 241.0], [83.0, 241.0], [83.1, 242.0], [83.2, 242.0], [83.3, 242.0], [83.4, 242.0], [83.5, 243.0], [83.6, 243.0], [83.7, 243.0], [83.8, 244.0], [83.9, 244.0], [84.0, 244.0], [84.1, 244.0], [84.2, 245.0], [84.3, 245.0], [84.4, 245.0], [84.5, 246.0], [84.6, 246.0], [84.7, 246.0], [84.8, 246.0], [84.9, 246.0], [85.0, 247.0], [85.1, 247.0], [85.2, 247.0], [85.3, 247.0], [85.4, 248.0], [85.5, 248.0], [85.6, 248.0], [85.7, 248.0], [85.8, 249.0], [85.9, 249.0], [86.0, 249.0], [86.1, 249.0], [86.2, 250.0], [86.3, 250.0], [86.4, 250.0], [86.5, 250.0], [86.6, 251.0], [86.7, 251.0], [86.8, 251.0], [86.9, 252.0], [87.0, 252.0], [87.1, 252.0], [87.2, 252.0], [87.3, 253.0], [87.4, 253.0], [87.5, 253.0], [87.6, 253.0], [87.7, 254.0], [87.8, 254.0], [87.9, 254.0], [88.0, 254.0], [88.1, 255.0], [88.2, 255.0], [88.3, 255.0], [88.4, 255.0], [88.5, 255.0], [88.6, 256.0], [88.7, 256.0], [88.8, 256.0], [88.9, 257.0], [89.0, 257.0], [89.1, 257.0], [89.2, 257.0], [89.3, 258.0], [89.4, 258.0], [89.5, 258.0], [89.6, 258.0], [89.7, 258.0], [89.8, 259.0], [89.9, 259.0], [90.0, 259.0], [90.1, 260.0], [90.2, 260.0], [90.3, 260.0], [90.4, 260.0], [90.5, 261.0], [90.6, 261.0], [90.7, 261.0], [90.8, 261.0], [90.9, 262.0], [91.0, 262.0], [91.1, 262.0], [91.2, 263.0], [91.3, 263.0], [91.4, 263.0], [91.5, 263.0], [91.6, 264.0], [91.7, 264.0], [91.8, 264.0], [91.9, 265.0], [92.0, 265.0], [92.1, 265.0], [92.2, 266.0], [92.3, 266.0], [92.4, 266.0], [92.5, 267.0], [92.6, 267.0], [92.7, 267.0], [92.8, 268.0], [92.9, 268.0], [93.0, 268.0], [93.1, 269.0], [93.2, 269.0], [93.3, 269.0], [93.4, 270.0], [93.5, 270.0], [93.6, 270.0], [93.7, 271.0], [93.8, 271.0], [93.9, 272.0], [94.0, 272.0], [94.1, 272.0], [94.2, 273.0], [94.3, 273.0], [94.4, 273.0], [94.5, 274.0], [94.6, 274.0], [94.7, 275.0], [94.8, 275.0], [94.9, 275.0], [95.0, 276.0], [95.1, 276.0], [95.2, 277.0], [95.3, 277.0], [95.4, 277.0], [95.5, 278.0], [95.6, 278.0], [95.7, 279.0], [95.8, 279.0], [95.9, 280.0], [96.0, 280.0], [96.1, 281.0], [96.2, 282.0], [96.3, 282.0], [96.4, 283.0], [96.5, 283.0], [96.6, 284.0], [96.7, 285.0], [96.8, 285.0], [96.9, 286.0], [97.0, 287.0], [97.1, 288.0], [97.2, 289.0], [97.3, 290.0], [97.4, 291.0], [97.5, 292.0], [97.6, 293.0], [97.7, 295.0], [97.8, 296.0], [97.9, 297.0], [98.0, 298.0], [98.1, 298.0], [98.2, 301.0], [98.3, 303.0], [98.4, 305.0], [98.5, 308.0], [98.6, 321.0], [98.7, 335.0], [98.8, 347.0], [98.9, 361.0], [99.0, 399.0], [99.1, 412.0], [99.2, 429.0], [99.3, 446.0], [99.4, 463.0], [99.5, 481.0], [99.6, 507.0], [99.7, 2184.0], [99.8, 4029.0], [99.9, 4111.0], [100.0, 4180.0]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6339.0, "series": [{"data": [[0.0, 2812.0], [2100.0, 2.0], [4100.0, 8.0], [100.0, 3392.0], [200.0, 114.0], [3900.0, 3.0], [4000.0, 8.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[2400.0, 1058.0], [2500.0, 1139.0], [2600.0, 1174.0], [2800.0, 44.0], [2700.0, 105.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 5.0], [3800.0, 5.0], [3900.0, 4.0], [4000.0, 19.0], [4300.0, 52.0], [4100.0, 47.0], [4200.0, 76.0], [4600.0, 25.0], [4500.0, 10.0], [4400.0, 8.0], [4700.0, 20.0], [4800.0, 9.0], [5000.0, 19.0], [5100.0, 6.0], [4900.0, 23.0], [6100.0, 285.0], [6000.0, 35.0], [6300.0, 755.0], [6200.0, 780.0], [6600.0, 108.0], [6500.0, 216.0], [6400.0, 339.0], [6700.0, 29.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[0.0, 6339.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[0.0, 1018.0], [2100.0, 4.0], [4100.0, 12.0], [300.0, 52.0], [400.0, 31.0], [200.0, 912.0], [100.0, 4393.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 2.0], [500.0, 1.0], [4000.0, 10.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[0.0, 673.0], [2100.0, 6.0], [4100.0, 9.0], [300.0, 57.0], [200.0, 2497.0], [400.0, 36.0], [100.0, 3147.0], [3800.0, 2.0], [3900.0, 3.0], [500.0, 3.0], [4000.0, 5.0]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 25473.0, "series": [{"data": [[0.0, 25473.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6478.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 98.8264283780124, "minX": 1.70661534E12, "maxY": 100.0, "series": [{"data": [[1.70661546E12, 100.0], [1.70661534E12, 98.95241178374867], [1.70661564E12, 98.8264283780124], [1.70661552E12, 100.0], [1.70661558E12, 100.0], [1.7066154E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661564E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.03454803596781837, "minX": 2.0, "maxY": 4180.155071777895, "series": [{"data": [[100.0, 116.20870799810714]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[100.0, 116.20870799810714]], "isOverall": false, "label": "log out-Aggregated", "isController": false}, {"data": [[2.0, 2420.0], [34.0, 2589.6666666666665], [37.0, 2614.3333333333335], [40.0, 2601.6666666666665], [43.0, 2629.5], [44.0, 2627.0], [47.0, 2658.0], [3.0, 2417.0], [50.0, 2658.6666666666665], [53.0, 2668.5], [52.0, 2667.0], [54.0, 2675.0], [57.0, 2667.0], [56.0, 2672.0], [59.0, 2674.0], [61.0, 2580.0], [60.0, 2586.0], [4.0, 2420.0], [5.0, 2426.0], [100.0, 4180.155071777895], [11.0, 2449.666666666667], [13.0, 2442.0], [15.0, 2477.0], [17.0, 2510.0], [18.0, 2514.0], [20.0, 2513.0], [23.0, 2513.5], [24.0, 2519.5], [25.0, 2539.0], [27.0, 2553.5], [28.0, 2541.0], [30.0, 2545.5], [31.0, 2562.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[99.35093750000001, 4164.718281250009]], "isOverall": false, "label": "confirm menu-Aggregated", "isController": false}, {"data": [[100.0, 0.03454803596781837]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[100.0, 0.03454803596781837]], "isOverall": false, "label": "调试取样器-Aggregated", "isController": false}, {"data": [[50.0, 339.75], [51.0, 348.0], [52.0, 377.0], [53.0, 376.0], [55.0, 398.0], [56.0, 402.0], [59.0, 442.0], [58.0, 432.0], [61.0, 445.0], [60.0, 449.0], [62.0, 408.6666666666667], [63.0, 406.5], [65.0, 407.0], [66.0, 395.0], [67.0, 383.0], [69.0, 371.0], [70.0, 368.0], [71.0, 362.0], [73.0, 326.0], [74.0, 280.0], [75.0, 273.0], [76.0, 260.5], [77.0, 255.33333333333334], [78.0, 243.0], [79.0, 236.5], [80.0, 215.33333333333334], [82.0, 260.0], [83.0, 312.5], [84.0, 326.0], [85.0, 352.0], [87.0, 415.0], [90.0, 466.1666666666667], [91.0, 504.0], [92.0, 496.0], [93.0, 479.0], [99.0, 200.9090909090909], [100.0, 174.95461708162628]], "isOverall": false, "label": "login", "isController": false}, {"data": [[99.63394937102036, 177.34974374902868]], "isOverall": false, "label": "login-Aggregated", "isController": false}, {"data": [[80.0, 205.66666666666666], [81.0, 225.2], [82.0, 271.85714285714283], [83.0, 303.0], [84.0, 324.5], [85.0, 363.9], [86.0, 401.0], [87.0, 408.5], [88.0, 410.5], [89.0, 422.25], [90.0, 463.66666666666663], [91.0, 505.5], [92.0, 507.0], [96.0, 480.0], [98.0, 247.5], [99.0, 193.20370370370372], [97.0, 249.33333333333337], [100.0, 195.28855959209727]], "isOverall": false, "label": "get menu", "isController": false}, {"data": [[99.83550792171457, 197.38272755514154]], "isOverall": false, "label": "get menu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 17562.116666666665, "minX": 1.70661534E12, "maxY": 71104.05, "series": [{"data": [[1.70661546E12, 70713.46666666666], [1.70661534E12, 36694.86666666667], [1.70661564E12, 41195.85], [1.70661552E12, 71031.85], [1.70661558E12, 71104.05], [1.7066154E12, 70932.83333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70661546E12, 36088.11666666667], [1.70661534E12, 17562.116666666665], [1.70661564E12, 21683.1], [1.70661552E12, 36202.53333333333], [1.70661558E12, 36224.76666666667], [1.7066154E12, 36145.38333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661564E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.023089171974522312, "minX": 1.70661534E12, "maxY": 4377.891994917405, "series": [{"data": [[1.70661546E12, 117.16003184713382], [1.70661534E12, 116.89637305699482], [1.70661564E12, 121.88567493112939], [1.70661552E12, 110.36796193497229], [1.70661558E12, 107.3039682539682], [1.7066154E12, 126.44789180588711]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661546E12, 4233.164546899843], [1.70661534E12, 3355.4715025906703], [1.70661564E12, 4377.891994917405], [1.70661552E12, 4247.334392374905], [1.70661558E12, 4225.901587301584], [1.7066154E12, 4191.429594272074]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661546E12, 0.023089171974522312], [1.70661534E12, 0.07944732297063899], [1.70661564E12, 0.023415977961432497], [1.70661552E12, 0.0388580491673276], [1.70661558E12, 0.02539682539682538], [1.7066154E12, 0.036595067621320566]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661546E12, 175.1963288108538], [1.70661534E12, 195.43491124260356], [1.70661564E12, 159.37138927097672], [1.70661552E12, 159.72720063441724], [1.70661558E12, 180.0475435816168], [1.7066154E12, 195.09603174603168]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661546E12, 190.90031897926636], [1.70661534E12, 214.12573964497045], [1.70661564E12, 185.14442916093498], [1.70661552E12, 191.23095238095206], [1.70661558E12, 189.56893819334383], [1.7066154E12, 215.90548054011114]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661564E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661534E12, "maxY": 4377.796696315115, "series": [{"data": [[1.70661546E12, 117.07882165605105], [1.70661534E12, 116.78065630397235], [1.70661564E12, 121.82644628099175], [1.70661552E12, 110.30293417922276], [1.70661558E12, 107.21587301587297], [1.7066154E12, 126.34049323786788]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661546E12, 4233.082670906203], [1.70661534E12, 3355.331606217615], [1.70661564E12, 4377.796696315115], [1.70661552E12, 4247.246227164416], [1.70661558E12, 4225.818253968255], [1.7066154E12, 4191.315831344475]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661546E12, 0.0], [1.70661534E12, 0.0], [1.70661564E12, 0.0], [1.70661552E12, 0.0], [1.70661558E12, 0.0], [1.7066154E12, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661546E12, 175.1245011971269], [1.70661534E12, 195.29585798816555], [1.70661564E12, 159.32599724896843], [1.70661552E12, 159.67644726407562], [1.70661558E12, 179.99128367670355], [1.7066154E12, 195.00476190476172]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661546E12, 190.81419457735237], [1.70661534E12, 213.96597633136088], [1.70661564E12, 185.082530949106], [1.70661552E12, 191.1547619047622], [1.70661558E12, 189.48573692551494], [1.7066154E12, 215.80381254964232]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661564E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661534E12, "maxY": 195.55996822875304, "series": [{"data": [[1.70661546E12, 102.0899681528661], [1.70661534E12, 107.63557858376518], [1.70661564E12, 97.04132231404948], [1.70661552E12, 95.42743854084053], [1.70661558E12, 95.58412698412705], [1.7066154E12, 111.59984089101027]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661546E12, 141.65103338632744], [1.70661534E12, 171.61830742659777], [1.70661564E12, 128.24650571791616], [1.70661552E12, 128.2867355043686], [1.70661558E12, 127.11111111111123], [1.7066154E12, 162.0023866348449]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661546E12, 0.0], [1.70661534E12, 0.0], [1.70661564E12, 0.0], [1.70661552E12, 0.0], [1.70661558E12, 0.0], [1.7066154E12, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661546E12, 158.05187549880304], [1.70661534E12, 181.24112426035515], [1.70661564E12, 152.69188445667135], [1.70661552E12, 145.7779540047581], [1.70661558E12, 146.47860538827243], [1.7066154E12, 169.3706349206349]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661546E12, 186.28867623604452], [1.70661534E12, 193.35355029585807], [1.70661564E12, 178.1664374140301], [1.70661552E12, 173.59523809523796], [1.70661558E12, 168.491283676704], [1.7066154E12, 195.55996822875304]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661564E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661534E12, "maxY": 6745.0, "series": [{"data": [[1.70661546E12, 6690.0], [1.70661534E12, 6696.0], [1.70661564E12, 6728.0], [1.70661552E12, 6745.0], [1.70661558E12, 6743.0], [1.7066154E12, 6615.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70661546E12, 2692.0], [1.70661534E12, 2633.0], [1.70661564E12, 4345.199999999999], [1.70661552E12, 2671.0], [1.70661558E12, 2675.0], [1.7066154E12, 2707.9000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70661546E12, 6479.0], [1.70661534E12, 6376.4], [1.70661564E12, 6570.36], [1.70661552E12, 6564.97], [1.70661558E12, 6552.9], [1.7066154E12, 6385.09]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70661546E12, 6262.099999999999], [1.70661534E12, 2883.5], [1.70661564E12, 6363.299999999999], [1.70661552E12, 6340.0], [1.70661558E12, 6334.75], [1.7066154E12, 6196.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70661546E12, 0.0], [1.70661534E12, 0.0], [1.70661564E12, 0.0], [1.70661552E12, 0.0], [1.70661558E12, 0.0], [1.7066154E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70661546E12, 171.0], [1.70661534E12, 176.0], [1.70661564E12, 166.0], [1.70661552E12, 163.0], [1.70661558E12, 164.0], [1.7066154E12, 186.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661564E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 5.0, "maxY": 1364.5, "series": [{"data": [[5.0, 4.0], [10.0, 4.5], [15.0, 5.0], [20.0, 5.0], [25.0, 6.0], [29.0, 4.0], [30.0, 7.0], [35.0, 4.0], [36.0, 6.0], [38.0, 4.0], [39.0, 4.0], [41.0, 5.0], [43.0, 5.0], [42.0, 5.0], [44.0, 5.5], [46.0, 4.0], [49.0, 229.0], [48.0, 4.0], [52.0, 4.5], [53.0, 254.0], [54.0, 242.0], [55.0, 259.0], [59.0, 268.0], [58.0, 271.0], [60.0, 237.0], [61.0, 1364.5], [63.0, 239.0], [67.0, 257.0], [64.0, 241.0], [66.0, 231.5], [65.0, 203.0], [68.0, 277.0], [69.0, 239.0], [74.0, 7.0], [73.0, 221.0], [72.0, 222.0], [79.0, 226.0], [81.0, 225.0], [84.0, 174.0], [93.0, 187.5], [92.0, 219.5], [99.0, 170.0], [107.0, 402.0], [118.0, 187.0], [116.0, 175.5], [121.0, 183.0], [124.0, 190.5], [125.0, 171.0], [127.0, 168.0], [130.0, 184.0], [128.0, 176.0], [134.0, 175.5], [131.0, 193.0], [132.0, 183.0], [140.0, 166.0], [143.0, 181.0], [144.0, 203.0], [146.0, 173.0], [155.0, 183.0], [159.0, 161.0], [167.0, 213.0], [162.0, 185.0], [160.0, 174.0], [168.0, 4.0], [333.0, 157.0], [347.0, 117.0], [338.0, 125.0], [340.0, 109.5], [341.0, 108.0], [360.0, 139.0], [356.0, 138.0], [362.0, 144.5], [365.0, 111.0], [366.0, 123.0], [354.0, 99.0], [371.0, 131.0], [379.0, 106.5], [372.0, 110.0], [375.0, 103.0], [369.0, 122.0], [377.0, 118.0], [373.0, 107.0], [368.0, 114.0], [386.0, 145.5], [384.0, 112.5], [408.0, 184.0], [407.0, 109.0], [401.0, 120.0], [411.0, 166.0], [412.0, 165.0], [405.0, 172.0], [431.0, 183.0], [430.0, 193.0], [429.0, 190.0], [427.0, 172.0], [418.0, 167.0], [426.0, 165.0], [416.0, 171.0], [417.0, 172.0], [432.0, 173.0], [438.0, 193.0], [434.0, 184.0], [437.0, 181.0], [439.0, 181.0], [447.0, 167.0], [435.0, 167.0], [442.0, 165.0], [433.0, 165.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 447.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 5.0, "maxY": 1364.5, "series": [{"data": [[5.0, 4.0], [10.0, 4.0], [15.0, 5.0], [20.0, 5.0], [25.0, 5.0], [29.0, 4.0], [30.0, 7.0], [35.0, 4.0], [36.0, 6.0], [38.0, 4.0], [39.0, 4.0], [41.0, 5.0], [43.0, 5.0], [42.0, 4.5], [44.0, 5.5], [46.0, 4.0], [49.0, 229.0], [48.0, 3.0], [52.0, 4.5], [53.0, 253.0], [54.0, 242.0], [55.0, 259.0], [59.0, 268.0], [58.0, 271.0], [60.0, 237.0], [61.0, 1364.5], [63.0, 239.0], [67.0, 257.0], [64.0, 241.0], [66.0, 231.0], [65.0, 203.0], [68.0, 277.0], [69.0, 238.5], [74.0, 6.5], [73.0, 221.0], [72.0, 222.0], [79.0, 226.0], [81.0, 225.0], [84.0, 173.5], [93.0, 187.5], [92.0, 219.5], [99.0, 170.0], [107.0, 401.0], [118.0, 187.0], [116.0, 175.0], [121.0, 182.5], [124.0, 190.0], [125.0, 171.0], [127.0, 168.0], [130.0, 184.0], [128.0, 176.0], [134.0, 175.0], [131.0, 192.0], [132.0, 183.0], [140.0, 166.0], [143.0, 181.0], [144.0, 203.0], [146.0, 173.0], [155.0, 183.0], [159.0, 161.0], [167.0, 213.0], [162.0, 185.0], [160.0, 174.0], [168.0, 4.0], [333.0, 157.0], [347.0, 117.0], [338.0, 125.0], [340.0, 109.5], [341.0, 108.0], [360.0, 139.0], [356.0, 138.0], [362.0, 144.5], [365.0, 111.0], [366.0, 123.0], [354.0, 99.0], [371.0, 131.0], [379.0, 106.5], [372.0, 110.0], [375.0, 103.0], [369.0, 122.0], [377.0, 118.0], [373.0, 107.0], [368.0, 114.0], [386.0, 145.5], [384.0, 112.5], [408.0, 184.0], [407.0, 109.0], [401.0, 120.0], [411.0, 166.0], [412.0, 164.5], [405.0, 172.0], [431.0, 183.0], [430.0, 193.0], [429.0, 190.0], [427.0, 172.0], [418.0, 167.0], [426.0, 165.0], [416.0, 171.0], [417.0, 172.0], [432.0, 173.0], [438.0, 193.0], [434.0, 184.0], [437.0, 181.0], [439.0, 181.0], [447.0, 167.0], [435.0, 167.0], [442.0, 165.0], [433.0, 165.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 447.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 53.15, "minX": 1.70661534E12, "maxY": 105.06666666666666, "series": [{"data": [[1.70661546E12, 104.61666666666666], [1.70661534E12, 53.15], [1.70661564E12, 59.88333333333333], [1.70661552E12, 105.03333333333333], [1.70661558E12, 105.06666666666666], [1.7066154E12, 104.83333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661564E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 51.483333333333334, "minX": 1.70661534E12, "maxY": 105.06666666666666, "series": [{"data": [[1.70661546E12, 104.61666666666666], [1.70661534E12, 51.483333333333334], [1.70661564E12, 61.55], [1.70661552E12, 105.03333333333333], [1.70661558E12, 105.06666666666666], [1.7066154E12, 104.83333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661564E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 9.65, "minX": 1.70661534E12, "maxY": 21.033333333333335, "series": [{"data": [[1.70661546E12, 20.9], [1.70661534E12, 11.266666666666667], [1.70661564E12, 12.116666666666667], [1.70661552E12, 21.0], [1.70661558E12, 21.033333333333335], [1.7066154E12, 20.983333333333334]], "isOverall": false, "label": "get menu-success", "isController": false}, {"data": [[1.70661546E12, 20.933333333333334], [1.70661534E12, 9.65], [1.70661564E12, 12.1], [1.70661552E12, 21.016666666666666], [1.70661558E12, 21.0], [1.7066154E12, 20.95]], "isOverall": false, "label": "log out-success", "isController": false}, {"data": [[1.70661546E12, 20.933333333333334], [1.70661534E12, 9.65], [1.70661564E12, 12.1], [1.70661552E12, 21.016666666666666], [1.70661558E12, 21.0], [1.7066154E12, 20.95]], "isOverall": false, "label": "调试取样器-success", "isController": false}, {"data": [[1.70661546E12, 20.883333333333333], [1.70661534E12, 11.266666666666667], [1.70661564E12, 12.116666666666667], [1.70661552E12, 21.016666666666666], [1.70661558E12, 21.033333333333335], [1.7066154E12, 21.0]], "isOverall": false, "label": "login-success", "isController": false}, {"data": [[1.70661546E12, 20.966666666666665], [1.70661534E12, 9.65], [1.70661564E12, 13.116666666666667], [1.70661552E12, 20.983333333333334], [1.70661558E12, 21.0], [1.7066154E12, 20.95]], "isOverall": false, "label": "confirm menu-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661564E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 51.483333333333334, "minX": 1.70661534E12, "maxY": 105.06666666666666, "series": [{"data": [[1.70661546E12, 104.61666666666666], [1.70661534E12, 51.483333333333334], [1.70661564E12, 61.55], [1.70661552E12, 105.03333333333333], [1.70661558E12, 105.06666666666666], [1.7066154E12, 104.83333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70661564E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

