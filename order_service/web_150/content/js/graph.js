/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 19170.0, "series": [{"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 10.0], [8.2, 10.0], [8.3, 10.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 15.0], [10.4, 15.0], [10.5, 15.0], [10.6, 15.0], [10.7, 15.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 16.0], [11.2, 16.0], [11.3, 17.0], [11.4, 17.0], [11.5, 18.0], [11.6, 18.0], [11.7, 18.0], [11.8, 19.0], [11.9, 19.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 21.0], [12.4, 21.0], [12.5, 22.0], [12.6, 22.0], [12.7, 23.0], [12.8, 23.0], [12.9, 23.0], [13.0, 24.0], [13.1, 24.0], [13.2, 25.0], [13.3, 25.0], [13.4, 25.0], [13.5, 25.0], [13.6, 25.0], [13.7, 26.0], [13.8, 26.0], [13.9, 27.0], [14.0, 27.0], [14.1, 27.0], [14.2, 28.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 29.0], [14.7, 29.0], [14.8, 30.0], [14.9, 30.0], [15.0, 31.0], [15.1, 31.0], [15.2, 31.0], [15.3, 32.0], [15.4, 32.0], [15.5, 32.0], [15.6, 33.0], [15.7, 33.0], [15.8, 34.0], [15.9, 34.0], [16.0, 34.0], [16.1, 34.0], [16.2, 35.0], [16.3, 35.0], [16.4, 35.0], [16.5, 35.0], [16.6, 36.0], [16.7, 36.0], [16.8, 36.0], [16.9, 36.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 37.0], [17.4, 38.0], [17.5, 38.0], [17.6, 38.0], [17.7, 39.0], [17.8, 39.0], [17.9, 39.0], [18.0, 40.0], [18.1, 40.0], [18.2, 40.0], [18.3, 41.0], [18.4, 41.0], [18.5, 41.0], [18.6, 42.0], [18.7, 42.0], [18.8, 42.0], [18.9, 43.0], [19.0, 43.0], [19.1, 44.0], [19.2, 44.0], [19.3, 44.0], [19.4, 45.0], [19.5, 45.0], [19.6, 45.0], [19.7, 46.0], [19.8, 46.0], [19.9, 46.0], [20.0, 46.0], [20.1, 47.0], [20.2, 47.0], [20.3, 48.0], [20.4, 48.0], [20.5, 48.0], [20.6, 49.0], [20.7, 49.0], [20.8, 49.0], [20.9, 50.0], [21.0, 50.0], [21.1, 50.0], [21.2, 51.0], [21.3, 51.0], [21.4, 52.0], [21.5, 52.0], [21.6, 53.0], [21.7, 53.0], [21.8, 54.0], [21.9, 54.0], [22.0, 54.0], [22.1, 54.0], [22.2, 55.0], [22.3, 55.0], [22.4, 56.0], [22.5, 56.0], [22.6, 56.0], [22.7, 56.0], [22.8, 57.0], [22.9, 57.0], [23.0, 57.0], [23.1, 58.0], [23.2, 58.0], [23.3, 58.0], [23.4, 58.0], [23.5, 58.0], [23.6, 59.0], [23.7, 59.0], [23.8, 59.0], [23.9, 59.0], [24.0, 60.0], [24.1, 60.0], [24.2, 61.0], [24.3, 61.0], [24.4, 61.0], [24.5, 62.0], [24.6, 62.0], [24.7, 63.0], [24.8, 63.0], [24.9, 63.0], [25.0, 63.0], [25.1, 64.0], [25.2, 64.0], [25.3, 65.0], [25.4, 65.0], [25.5, 65.0], [25.6, 65.0], [25.7, 66.0], [25.8, 66.0], [25.9, 67.0], [26.0, 67.0], [26.1, 67.0], [26.2, 68.0], [26.3, 68.0], [26.4, 69.0], [26.5, 69.0], [26.6, 70.0], [26.7, 70.0], [26.8, 70.0], [26.9, 71.0], [27.0, 71.0], [27.1, 72.0], [27.2, 72.0], [27.3, 73.0], [27.4, 73.0], [27.5, 74.0], [27.6, 74.0], [27.7, 74.0], [27.8, 75.0], [27.9, 75.0], [28.0, 76.0], [28.1, 76.0], [28.2, 77.0], [28.3, 77.0], [28.4, 77.0], [28.5, 78.0], [28.6, 78.0], [28.7, 79.0], [28.8, 79.0], [28.9, 80.0], [29.0, 80.0], [29.1, 81.0], [29.2, 82.0], [29.3, 82.0], [29.4, 83.0], [29.5, 84.0], [29.6, 84.0], [29.7, 84.0], [29.8, 85.0], [29.9, 85.0], [30.0, 85.0], [30.1, 85.0], [30.2, 86.0], [30.3, 86.0], [30.4, 87.0], [30.5, 87.0], [30.6, 87.0], [30.7, 87.0], [30.8, 88.0], [30.9, 88.0], [31.0, 88.0], [31.1, 89.0], [31.2, 89.0], [31.3, 89.0], [31.4, 89.0], [31.5, 89.0], [31.6, 90.0], [31.7, 90.0], [31.8, 90.0], [31.9, 90.0], [32.0, 91.0], [32.1, 91.0], [32.2, 91.0], [32.3, 91.0], [32.4, 92.0], [32.5, 92.0], [32.6, 93.0], [32.7, 93.0], [32.8, 94.0], [32.9, 94.0], [33.0, 95.0], [33.1, 95.0], [33.2, 96.0], [33.3, 97.0], [33.4, 97.0], [33.5, 97.0], [33.6, 98.0], [33.7, 98.0], [33.8, 99.0], [33.9, 99.0], [34.0, 100.0], [34.1, 100.0], [34.2, 100.0], [34.3, 101.0], [34.4, 101.0], [34.5, 101.0], [34.6, 102.0], [34.7, 102.0], [34.8, 102.0], [34.9, 103.0], [35.0, 104.0], [35.1, 104.0], [35.2, 105.0], [35.3, 106.0], [35.4, 106.0], [35.5, 107.0], [35.6, 107.0], [35.7, 108.0], [35.8, 108.0], [35.9, 108.0], [36.0, 108.0], [36.1, 109.0], [36.2, 110.0], [36.3, 111.0], [36.4, 112.0], [36.5, 113.0], [36.6, 113.0], [36.7, 113.0], [36.8, 114.0], [36.9, 114.0], [37.0, 115.0], [37.1, 115.0], [37.2, 116.0], [37.3, 116.0], [37.4, 117.0], [37.5, 117.0], [37.6, 118.0], [37.7, 118.0], [37.8, 119.0], [37.9, 119.0], [38.0, 119.0], [38.1, 120.0], [38.2, 120.0], [38.3, 120.0], [38.4, 120.0], [38.5, 120.0], [38.6, 121.0], [38.7, 121.0], [38.8, 122.0], [38.9, 122.0], [39.0, 123.0], [39.1, 124.0], [39.2, 124.0], [39.3, 125.0], [39.4, 125.0], [39.5, 125.0], [39.6, 126.0], [39.7, 126.0], [39.8, 127.0], [39.9, 128.0], [40.0, 128.0], [40.1, 128.0], [40.2, 128.0], [40.3, 129.0], [40.4, 129.0], [40.5, 130.0], [40.6, 130.0], [40.7, 131.0], [40.8, 132.0], [40.9, 132.0], [41.0, 132.0], [41.1, 133.0], [41.2, 134.0], [41.3, 135.0], [41.4, 135.0], [41.5, 135.0], [41.6, 136.0], [41.7, 136.0], [41.8, 136.0], [41.9, 137.0], [42.0, 137.0], [42.1, 138.0], [42.2, 138.0], [42.3, 138.0], [42.4, 139.0], [42.5, 139.0], [42.6, 140.0], [42.7, 141.0], [42.8, 141.0], [42.9, 142.0], [43.0, 142.0], [43.1, 142.0], [43.2, 143.0], [43.3, 143.0], [43.4, 143.0], [43.5, 144.0], [43.6, 144.0], [43.7, 145.0], [43.8, 145.0], [43.9, 145.0], [44.0, 146.0], [44.1, 146.0], [44.2, 147.0], [44.3, 147.0], [44.4, 148.0], [44.5, 148.0], [44.6, 149.0], [44.7, 149.0], [44.8, 150.0], [44.9, 150.0], [45.0, 150.0], [45.1, 152.0], [45.2, 152.0], [45.3, 153.0], [45.4, 153.0], [45.5, 154.0], [45.6, 154.0], [45.7, 155.0], [45.8, 155.0], [45.9, 156.0], [46.0, 156.0], [46.1, 157.0], [46.2, 158.0], [46.3, 158.0], [46.4, 159.0], [46.5, 160.0], [46.6, 160.0], [46.7, 161.0], [46.8, 162.0], [46.9, 162.0], [47.0, 163.0], [47.1, 163.0], [47.2, 164.0], [47.3, 164.0], [47.4, 165.0], [47.5, 165.0], [47.6, 166.0], [47.7, 166.0], [47.8, 167.0], [47.9, 167.0], [48.0, 168.0], [48.1, 168.0], [48.2, 169.0], [48.3, 170.0], [48.4, 170.0], [48.5, 170.0], [48.6, 171.0], [48.7, 172.0], [48.8, 173.0], [48.9, 173.0], [49.0, 173.0], [49.1, 175.0], [49.2, 176.0], [49.3, 177.0], [49.4, 178.0], [49.5, 179.0], [49.6, 180.0], [49.7, 180.0], [49.8, 180.0], [49.9, 181.0], [50.0, 182.0], [50.1, 183.0], [50.2, 185.0], [50.3, 185.0], [50.4, 186.0], [50.5, 187.0], [50.6, 188.0], [50.7, 188.0], [50.8, 189.0], [50.9, 189.0], [51.0, 190.0], [51.1, 191.0], [51.2, 192.0], [51.3, 193.0], [51.4, 194.0], [51.5, 195.0], [51.6, 195.0], [51.7, 196.0], [51.8, 197.0], [51.9, 197.0], [52.0, 198.0], [52.1, 199.0], [52.2, 200.0], [52.3, 200.0], [52.4, 201.0], [52.5, 201.0], [52.6, 202.0], [52.7, 202.0], [52.8, 203.0], [52.9, 203.0], [53.0, 204.0], [53.1, 205.0], [53.2, 205.0], [53.3, 206.0], [53.4, 207.0], [53.5, 207.0], [53.6, 207.0], [53.7, 208.0], [53.8, 208.0], [53.9, 209.0], [54.0, 209.0], [54.1, 209.0], [54.2, 210.0], [54.3, 210.0], [54.4, 210.0], [54.5, 211.0], [54.6, 211.0], [54.7, 212.0], [54.8, 212.0], [54.9, 212.0], [55.0, 213.0], [55.1, 214.0], [55.2, 214.0], [55.3, 214.0], [55.4, 214.0], [55.5, 215.0], [55.6, 215.0], [55.7, 215.0], [55.8, 216.0], [55.9, 217.0], [56.0, 217.0], [56.1, 217.0], [56.2, 218.0], [56.3, 218.0], [56.4, 219.0], [56.5, 219.0], [56.6, 220.0], [56.7, 220.0], [56.8, 221.0], [56.9, 221.0], [57.0, 221.0], [57.1, 221.0], [57.2, 222.0], [57.3, 222.0], [57.4, 223.0], [57.5, 223.0], [57.6, 224.0], [57.7, 224.0], [57.8, 224.0], [57.9, 225.0], [58.0, 225.0], [58.1, 226.0], [58.2, 226.0], [58.3, 226.0], [58.4, 226.0], [58.5, 227.0], [58.6, 228.0], [58.7, 228.0], [58.8, 228.0], [58.9, 229.0], [59.0, 230.0], [59.1, 230.0], [59.2, 230.0], [59.3, 231.0], [59.4, 231.0], [59.5, 232.0], [59.6, 232.0], [59.7, 232.0], [59.8, 233.0], [59.9, 233.0], [60.0, 234.0], [60.1, 234.0], [60.2, 235.0], [60.3, 236.0], [60.4, 236.0], [60.5, 236.0], [60.6, 237.0], [60.7, 237.0], [60.8, 238.0], [60.9, 238.0], [61.0, 239.0], [61.1, 239.0], [61.2, 240.0], [61.3, 241.0], [61.4, 241.0], [61.5, 241.0], [61.6, 242.0], [61.7, 242.0], [61.8, 243.0], [61.9, 244.0], [62.0, 244.0], [62.1, 245.0], [62.2, 245.0], [62.3, 245.0], [62.4, 246.0], [62.5, 246.0], [62.6, 247.0], [62.7, 247.0], [62.8, 248.0], [62.9, 248.0], [63.0, 249.0], [63.1, 249.0], [63.2, 249.0], [63.3, 250.0], [63.4, 250.0], [63.5, 250.0], [63.6, 251.0], [63.7, 251.0], [63.8, 251.0], [63.9, 252.0], [64.0, 252.0], [64.1, 252.0], [64.2, 253.0], [64.3, 253.0], [64.4, 254.0], [64.5, 254.0], [64.6, 254.0], [64.7, 255.0], [64.8, 255.0], [64.9, 255.0], [65.0, 256.0], [65.1, 256.0], [65.2, 256.0], [65.3, 257.0], [65.4, 257.0], [65.5, 257.0], [65.6, 258.0], [65.7, 258.0], [65.8, 258.0], [65.9, 259.0], [66.0, 259.0], [66.1, 260.0], [66.2, 260.0], [66.3, 260.0], [66.4, 261.0], [66.5, 262.0], [66.6, 262.0], [66.7, 262.0], [66.8, 263.0], [66.9, 263.0], [67.0, 264.0], [67.1, 264.0], [67.2, 265.0], [67.3, 265.0], [67.4, 265.0], [67.5, 266.0], [67.6, 266.0], [67.7, 267.0], [67.8, 267.0], [67.9, 268.0], [68.0, 268.0], [68.1, 268.0], [68.2, 269.0], [68.3, 269.0], [68.4, 269.0], [68.5, 270.0], [68.6, 270.0], [68.7, 270.0], [68.8, 271.0], [68.9, 271.0], [69.0, 271.0], [69.1, 272.0], [69.2, 273.0], [69.3, 273.0], [69.4, 273.0], [69.5, 274.0], [69.6, 274.0], [69.7, 275.0], [69.8, 275.0], [69.9, 276.0], [70.0, 277.0], [70.1, 277.0], [70.2, 277.0], [70.3, 278.0], [70.4, 278.0], [70.5, 278.0], [70.6, 279.0], [70.7, 279.0], [70.8, 280.0], [70.9, 281.0], [71.0, 281.0], [71.1, 281.0], [71.2, 282.0], [71.3, 282.0], [71.4, 283.0], [71.5, 283.0], [71.6, 283.0], [71.7, 284.0], [71.8, 284.0], [71.9, 285.0], [72.0, 286.0], [72.1, 286.0], [72.2, 287.0], [72.3, 287.0], [72.4, 289.0], [72.5, 289.0], [72.6, 290.0], [72.7, 290.0], [72.8, 291.0], [72.9, 291.0], [73.0, 292.0], [73.1, 294.0], [73.2, 294.0], [73.3, 295.0], [73.4, 295.0], [73.5, 297.0], [73.6, 297.0], [73.7, 297.0], [73.8, 299.0], [73.9, 299.0], [74.0, 301.0], [74.1, 302.0], [74.2, 304.0], [74.3, 306.0], [74.4, 307.0], [74.5, 308.0], [74.6, 310.0], [74.7, 312.0], [74.8, 313.0], [74.9, 317.0], [75.0, 320.0], [75.1, 323.0], [75.2, 324.0], [75.3, 327.0], [75.4, 330.0], [75.5, 332.0], [75.6, 334.0], [75.7, 336.0], [75.8, 338.0], [75.9, 340.0], [76.0, 342.0], [76.1, 344.0], [76.2, 345.0], [76.3, 347.0], [76.4, 348.0], [76.5, 351.0], [76.6, 355.0], [76.7, 358.0], [76.8, 360.0], [76.9, 362.0], [77.0, 365.0], [77.1, 366.0], [77.2, 369.0], [77.3, 374.0], [77.4, 377.0], [77.5, 387.0], [77.6, 389.0], [77.7, 397.0], [77.8, 404.0], [77.9, 463.0], [78.0, 477.0], [78.1, 525.0], [78.2, 16308.0], [78.3, 16309.0], [78.4, 16310.0], [78.5, 16311.0], [78.6, 16312.0], [78.7, 16312.0], [78.8, 16313.0], [78.9, 16313.0], [79.0, 16314.0], [79.1, 16315.0], [79.2, 16315.0], [79.3, 16317.0], [79.4, 16441.0], [79.5, 16453.0], [79.6, 16454.0], [79.7, 16458.0], [79.8, 16460.0], [79.9, 16462.0], [80.0, 16462.0], [80.1, 16463.0], [80.2, 16463.0], [80.3, 16463.0], [80.4, 16463.0], [80.5, 16465.0], [80.6, 16466.0], [80.7, 16467.0], [80.8, 16469.0], [80.9, 16470.0], [81.0, 16471.0], [81.1, 16472.0], [81.2, 16472.0], [81.3, 16482.0], [81.4, 16486.0], [81.5, 16489.0], [81.6, 16491.0], [81.7, 16492.0], [81.8, 16493.0], [81.9, 16494.0], [82.0, 16496.0], [82.1, 16497.0], [82.2, 16503.0], [82.3, 16505.0], [82.4, 16507.0], [82.5, 16508.0], [82.6, 16508.0], [82.7, 16508.0], [82.8, 16510.0], [82.9, 16510.0], [83.0, 16511.0], [83.1, 16511.0], [83.2, 16512.0], [83.3, 16513.0], [83.4, 16513.0], [83.5, 16514.0], [83.6, 16514.0], [83.7, 16515.0], [83.8, 16516.0], [83.9, 16516.0], [84.0, 16516.0], [84.1, 16516.0], [84.2, 16517.0], [84.3, 16518.0], [84.4, 16522.0], [84.5, 16524.0], [84.6, 16524.0], [84.7, 16525.0], [84.8, 16528.0], [84.9, 16530.0], [85.0, 16532.0], [85.1, 16534.0], [85.2, 16536.0], [85.3, 16536.0], [85.4, 16538.0], [85.5, 16539.0], [85.6, 16550.0], [85.7, 16553.0], [85.8, 16555.0], [85.9, 16555.0], [86.0, 16557.0], [86.1, 16559.0], [86.2, 16561.0], [86.3, 16563.0], [86.4, 16564.0], [86.5, 16565.0], [86.6, 16566.0], [86.7, 16567.0], [86.8, 16567.0], [86.9, 16567.0], [87.0, 16568.0], [87.1, 16569.0], [87.2, 16569.0], [87.3, 16570.0], [87.4, 16570.0], [87.5, 16571.0], [87.6, 16571.0], [87.7, 16571.0], [87.8, 16572.0], [87.9, 16572.0], [88.0, 16573.0], [88.1, 16573.0], [88.2, 16574.0], [88.3, 16574.0], [88.4, 16574.0], [88.5, 16575.0], [88.6, 16578.0], [88.7, 16579.0], [88.8, 16582.0], [88.9, 16583.0], [89.0, 16583.0], [89.1, 16584.0], [89.2, 16584.0], [89.3, 16585.0], [89.4, 16591.0], [89.5, 16592.0], [89.6, 16594.0], [89.7, 16594.0], [89.8, 16594.0], [89.9, 16595.0], [90.0, 16596.0], [90.1, 16597.0], [90.2, 16597.0], [90.3, 16597.0], [90.4, 16598.0], [90.5, 16599.0], [90.6, 16599.0], [90.7, 16599.0], [90.8, 16600.0], [90.9, 16602.0], [91.0, 16603.0], [91.1, 16603.0], [91.2, 16603.0], [91.3, 16604.0], [91.4, 16605.0], [91.5, 16605.0], [91.6, 16608.0], [91.7, 16611.0], [91.8, 16612.0], [91.9, 16612.0], [92.0, 16613.0], [92.1, 16614.0], [92.2, 16615.0], [92.3, 16617.0], [92.4, 16618.0], [92.5, 16618.0], [92.6, 16620.0], [92.7, 16621.0], [92.8, 16621.0], [92.9, 16622.0], [93.0, 16623.0], [93.1, 16624.0], [93.2, 16625.0], [93.3, 16625.0], [93.4, 16627.0], [93.5, 16628.0], [93.6, 16628.0], [93.7, 16629.0], [93.8, 16629.0], [93.9, 16629.0], [94.0, 16630.0], [94.1, 16630.0], [94.2, 16631.0], [94.3, 16631.0], [94.4, 16632.0], [94.5, 16632.0], [94.6, 16632.0], [94.7, 16633.0], [94.8, 16633.0], [94.9, 16634.0], [95.0, 16635.0], [95.1, 16635.0], [95.2, 16636.0], [95.3, 16636.0], [95.4, 16637.0], [95.5, 16638.0], [95.6, 16638.0], [95.7, 16639.0], [95.8, 16641.0], [95.9, 16643.0], [96.0, 16644.0], [96.1, 16645.0], [96.2, 16646.0], [96.3, 16649.0], [96.4, 16668.0], [96.5, 16671.0], [96.6, 16672.0], [96.7, 16673.0], [96.8, 16674.0], [96.9, 16675.0], [97.0, 16676.0], [97.1, 16678.0], [97.2, 16679.0], [97.3, 16679.0], [97.4, 16680.0], [97.5, 16680.0], [97.6, 16681.0], [97.7, 16683.0], [97.8, 16684.0], [97.9, 16684.0], [98.0, 16684.0], [98.1, 16684.0], [98.2, 16685.0], [98.3, 16685.0], [98.4, 16686.0], [98.5, 16687.0], [98.6, 16687.0], [98.7, 16688.0], [98.8, 16688.0], [98.9, 16689.0], [99.0, 16690.0], [99.1, 16692.0], [99.2, 16693.0], [99.3, 16694.0], [99.4, 16695.0], [99.5, 16697.0], [99.6, 16700.0], [99.7, 16702.0], [99.8, 16703.0], [99.9, 16705.0], [100.0, 16707.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 100.0], [0.4, 101.0], [0.5, 101.0], [0.6, 102.0], [0.7, 2429.0], [0.8, 2441.0], [0.9, 2457.0], [1.0, 2462.0], [1.1, 2463.0], [1.2, 2466.0], [1.3, 2467.0], [1.4, 2469.0], [1.5, 2470.0], [1.6, 2470.0], [1.7, 2471.0], [1.8, 2471.0], [1.9, 2472.0], [2.0, 2472.0], [2.1, 2473.0], [2.2, 2474.0], [2.3, 2475.0], [2.4, 2476.0], [2.5, 2481.0], [2.6, 2482.0], [2.7, 2485.0], [2.8, 2488.0], [2.9, 2491.0], [3.0, 2493.0], [3.1, 2495.0], [3.2, 2497.0], [3.3, 2499.0], [3.4, 2500.0], [3.5, 2501.0], [3.6, 2502.0], [3.7, 2503.0], [3.8, 2503.0], [3.9, 2505.0], [4.0, 2507.0], [4.1, 2507.0], [4.2, 2507.0], [4.3, 2508.0], [4.4, 2508.0], [4.5, 2509.0], [4.6, 2510.0], [4.7, 2510.0], [4.8, 2511.0], [4.9, 2511.0], [5.0, 2512.0], [5.1, 2512.0], [5.2, 2513.0], [5.3, 2514.0], [5.4, 2515.0], [5.5, 2516.0], [5.6, 2516.0], [5.7, 2517.0], [5.8, 2518.0], [5.9, 2519.0], [6.0, 2520.0], [6.1, 2521.0], [6.2, 2521.0], [6.3, 2522.0], [6.4, 2523.0], [6.5, 2524.0], [6.6, 2525.0], [6.7, 2525.0], [6.8, 2526.0], [6.9, 2527.0], [7.0, 2528.0], [7.1, 2528.0], [7.2, 2529.0], [7.3, 2530.0], [7.4, 2530.0], [7.5, 2530.0], [7.6, 2531.0], [7.7, 2533.0], [7.8, 2533.0], [7.9, 2534.0], [8.0, 2535.0], [8.1, 2535.0], [8.2, 2536.0], [8.3, 2536.0], [8.4, 2537.0], [8.5, 2538.0], [8.6, 2539.0], [8.7, 2539.0], [8.8, 2540.0], [8.9, 2540.0], [9.0, 2541.0], [9.1, 2541.0], [9.2, 2542.0], [9.3, 2542.0], [9.4, 2542.0], [9.5, 2542.0], [9.6, 2543.0], [9.7, 2543.0], [9.8, 2543.0], [9.9, 2544.0], [10.0, 2544.0], [10.1, 2545.0], [10.2, 2545.0], [10.3, 2546.0], [10.4, 2546.0], [10.5, 2547.0], [10.6, 2547.0], [10.7, 2548.0], [10.8, 2549.0], [10.9, 2549.0], [11.0, 2550.0], [11.1, 2550.0], [11.2, 2550.0], [11.3, 2550.0], [11.4, 2550.0], [11.5, 2552.0], [11.6, 2552.0], [11.7, 2552.0], [11.8, 2552.0], [11.9, 2554.0], [12.0, 2554.0], [12.1, 2555.0], [12.2, 2555.0], [12.3, 2556.0], [12.4, 2557.0], [12.5, 2557.0], [12.6, 2557.0], [12.7, 2559.0], [12.8, 2559.0], [12.9, 2559.0], [13.0, 2559.0], [13.1, 2560.0], [13.2, 2560.0], [13.3, 2560.0], [13.4, 2561.0], [13.5, 2561.0], [13.6, 2562.0], [13.7, 2562.0], [13.8, 2563.0], [13.9, 2563.0], [14.0, 2564.0], [14.1, 2565.0], [14.2, 2565.0], [14.3, 2566.0], [14.4, 2566.0], [14.5, 2566.0], [14.6, 2566.0], [14.7, 2567.0], [14.8, 2567.0], [14.9, 2567.0], [15.0, 2568.0], [15.1, 2568.0], [15.2, 2569.0], [15.3, 2569.0], [15.4, 2569.0], [15.5, 2571.0], [15.6, 2571.0], [15.7, 2572.0], [15.8, 2572.0], [15.9, 2572.0], [16.0, 2573.0], [16.1, 2573.0], [16.2, 2574.0], [16.3, 2574.0], [16.4, 2575.0], [16.5, 2576.0], [16.6, 2576.0], [16.7, 2576.0], [16.8, 2577.0], [16.9, 2578.0], [17.0, 2578.0], [17.1, 2578.0], [17.2, 2579.0], [17.3, 2579.0], [17.4, 2579.0], [17.5, 2580.0], [17.6, 2580.0], [17.7, 2581.0], [17.8, 2582.0], [17.9, 2582.0], [18.0, 2582.0], [18.1, 2583.0], [18.2, 2583.0], [18.3, 2583.0], [18.4, 2584.0], [18.5, 2584.0], [18.6, 2585.0], [18.7, 2585.0], [18.8, 2585.0], [18.9, 2586.0], [19.0, 2586.0], [19.1, 2587.0], [19.2, 2587.0], [19.3, 2587.0], [19.4, 2588.0], [19.5, 2589.0], [19.6, 2589.0], [19.7, 2590.0], [19.8, 2590.0], [19.9, 2591.0], [20.0, 2591.0], [20.1, 2592.0], [20.2, 2592.0], [20.3, 2592.0], [20.4, 2592.0], [20.5, 2593.0], [20.6, 2593.0], [20.7, 2595.0], [20.8, 2595.0], [20.9, 2596.0], [21.0, 2596.0], [21.1, 2596.0], [21.2, 2597.0], [21.3, 2598.0], [21.4, 2598.0], [21.5, 2598.0], [21.6, 2599.0], [21.7, 2599.0], [21.8, 2600.0], [21.9, 2600.0], [22.0, 2601.0], [22.1, 2601.0], [22.2, 2601.0], [22.3, 2602.0], [22.4, 2603.0], [22.5, 2603.0], [22.6, 2604.0], [22.7, 2604.0], [22.8, 2604.0], [22.9, 2605.0], [23.0, 2605.0], [23.1, 2605.0], [23.2, 2606.0], [23.3, 2606.0], [23.4, 2607.0], [23.5, 2607.0], [23.6, 2607.0], [23.7, 2608.0], [23.8, 2609.0], [23.9, 2610.0], [24.0, 2611.0], [24.1, 2611.0], [24.2, 2611.0], [24.3, 2612.0], [24.4, 2612.0], [24.5, 2612.0], [24.6, 2613.0], [24.7, 2613.0], [24.8, 2614.0], [24.9, 2614.0], [25.0, 2615.0], [25.1, 2615.0], [25.2, 2615.0], [25.3, 2616.0], [25.4, 2617.0], [25.5, 2617.0], [25.6, 2617.0], [25.7, 2618.0], [25.8, 2619.0], [25.9, 2619.0], [26.0, 2620.0], [26.1, 2620.0], [26.2, 2620.0], [26.3, 2620.0], [26.4, 2621.0], [26.5, 2622.0], [26.6, 2622.0], [26.7, 2624.0], [26.8, 2624.0], [26.9, 2625.0], [27.0, 2625.0], [27.1, 2625.0], [27.2, 2626.0], [27.3, 2626.0], [27.4, 2626.0], [27.5, 2627.0], [27.6, 2627.0], [27.7, 2628.0], [27.8, 2628.0], [27.9, 2629.0], [28.0, 2629.0], [28.1, 2629.0], [28.2, 2629.0], [28.3, 2630.0], [28.4, 2630.0], [28.5, 2631.0], [28.6, 2631.0], [28.7, 2631.0], [28.8, 2632.0], [28.9, 2632.0], [29.0, 2633.0], [29.1, 2633.0], [29.2, 2634.0], [29.3, 2634.0], [29.4, 2634.0], [29.5, 2635.0], [29.6, 2635.0], [29.7, 2636.0], [29.8, 2636.0], [29.9, 2636.0], [30.0, 2636.0], [30.1, 2636.0], [30.2, 2637.0], [30.3, 2637.0], [30.4, 2637.0], [30.5, 2638.0], [30.6, 2638.0], [30.7, 2639.0], [30.8, 2639.0], [30.9, 2639.0], [31.0, 2640.0], [31.1, 2640.0], [31.2, 2641.0], [31.3, 2641.0], [31.4, 2641.0], [31.5, 2641.0], [31.6, 2641.0], [31.7, 2642.0], [31.8, 2642.0], [31.9, 2642.0], [32.0, 2642.0], [32.1, 2643.0], [32.2, 2643.0], [32.3, 2644.0], [32.4, 2644.0], [32.5, 2645.0], [32.6, 2645.0], [32.7, 2645.0], [32.8, 2645.0], [32.9, 2646.0], [33.0, 2646.0], [33.1, 2646.0], [33.2, 2647.0], [33.3, 2647.0], [33.4, 2647.0], [33.5, 2647.0], [33.6, 2647.0], [33.7, 2648.0], [33.8, 2648.0], [33.9, 2648.0], [34.0, 2649.0], [34.1, 2649.0], [34.2, 2649.0], [34.3, 2649.0], [34.4, 2650.0], [34.5, 2650.0], [34.6, 2650.0], [34.7, 2650.0], [34.8, 2650.0], [34.9, 2651.0], [35.0, 2651.0], [35.1, 2651.0], [35.2, 2651.0], [35.3, 2652.0], [35.4, 2652.0], [35.5, 2652.0], [35.6, 2652.0], [35.7, 2653.0], [35.8, 2653.0], [35.9, 2653.0], [36.0, 2654.0], [36.1, 2654.0], [36.2, 2654.0], [36.3, 2654.0], [36.4, 2655.0], [36.5, 2655.0], [36.6, 2655.0], [36.7, 2655.0], [36.8, 2656.0], [36.9, 2656.0], [37.0, 2657.0], [37.1, 2657.0], [37.2, 2657.0], [37.3, 2658.0], [37.4, 2658.0], [37.5, 2658.0], [37.6, 2658.0], [37.7, 2659.0], [37.8, 2659.0], [37.9, 2659.0], [38.0, 2660.0], [38.1, 2660.0], [38.2, 2661.0], [38.3, 2661.0], [38.4, 2661.0], [38.5, 2661.0], [38.6, 2661.0], [38.7, 2662.0], [38.8, 2662.0], [38.9, 2662.0], [39.0, 2663.0], [39.1, 2663.0], [39.2, 2663.0], [39.3, 2664.0], [39.4, 2664.0], [39.5, 2664.0], [39.6, 2665.0], [39.7, 2665.0], [39.8, 2665.0], [39.9, 2665.0], [40.0, 2665.0], [40.1, 2666.0], [40.2, 2666.0], [40.3, 2666.0], [40.4, 2667.0], [40.5, 2667.0], [40.6, 2667.0], [40.7, 2667.0], [40.8, 2668.0], [40.9, 2668.0], [41.0, 2668.0], [41.1, 2669.0], [41.2, 2669.0], [41.3, 2669.0], [41.4, 2670.0], [41.5, 2670.0], [41.6, 2670.0], [41.7, 2670.0], [41.8, 2670.0], [41.9, 2671.0], [42.0, 2671.0], [42.1, 2671.0], [42.2, 2671.0], [42.3, 2672.0], [42.4, 2673.0], [42.5, 2673.0], [42.6, 2673.0], [42.7, 2674.0], [42.8, 2674.0], [42.9, 2674.0], [43.0, 2675.0], [43.1, 2675.0], [43.2, 2675.0], [43.3, 2675.0], [43.4, 2675.0], [43.5, 2676.0], [43.6, 2676.0], [43.7, 2676.0], [43.8, 2676.0], [43.9, 2677.0], [44.0, 2677.0], [44.1, 2677.0], [44.2, 2678.0], [44.3, 2678.0], [44.4, 2678.0], [44.5, 2679.0], [44.6, 2679.0], [44.7, 2679.0], [44.8, 2680.0], [44.9, 2680.0], [45.0, 2681.0], [45.1, 2681.0], [45.2, 2681.0], [45.3, 2681.0], [45.4, 2682.0], [45.5, 2682.0], [45.6, 2682.0], [45.7, 2683.0], [45.8, 2683.0], [45.9, 2683.0], [46.0, 2683.0], [46.1, 2684.0], [46.2, 2684.0], [46.3, 2684.0], [46.4, 2684.0], [46.5, 2685.0], [46.6, 2685.0], [46.7, 2685.0], [46.8, 2685.0], [46.9, 2685.0], [47.0, 2686.0], [47.1, 2686.0], [47.2, 2686.0], [47.3, 2686.0], [47.4, 2687.0], [47.5, 2687.0], [47.6, 2687.0], [47.7, 2687.0], [47.8, 2687.0], [47.9, 2688.0], [48.0, 2688.0], [48.1, 2689.0], [48.2, 2689.0], [48.3, 2689.0], [48.4, 2689.0], [48.5, 2690.0], [48.6, 2690.0], [48.7, 2690.0], [48.8, 2690.0], [48.9, 2691.0], [49.0, 2691.0], [49.1, 2691.0], [49.2, 2691.0], [49.3, 2691.0], [49.4, 2692.0], [49.5, 2692.0], [49.6, 2692.0], [49.7, 2693.0], [49.8, 2693.0], [49.9, 2693.0], [50.0, 2693.0], [50.1, 2693.0], [50.2, 2693.0], [50.3, 2694.0], [50.4, 2694.0], [50.5, 2695.0], [50.6, 2695.0], [50.7, 2695.0], [50.8, 2696.0], [50.9, 2696.0], [51.0, 2696.0], [51.1, 2697.0], [51.2, 2697.0], [51.3, 2697.0], [51.4, 2697.0], [51.5, 2698.0], [51.6, 2698.0], [51.7, 2698.0], [51.8, 2698.0], [51.9, 2699.0], [52.0, 2699.0], [52.1, 2699.0], [52.2, 2699.0], [52.3, 2700.0], [52.4, 2700.0], [52.5, 2700.0], [52.6, 2700.0], [52.7, 2700.0], [52.8, 2700.0], [52.9, 2700.0], [53.0, 2701.0], [53.1, 2701.0], [53.2, 2701.0], [53.3, 2702.0], [53.4, 2702.0], [53.5, 2702.0], [53.6, 2703.0], [53.7, 2703.0], [53.8, 2704.0], [53.9, 2704.0], [54.0, 2705.0], [54.1, 2705.0], [54.2, 2706.0], [54.3, 2707.0], [54.4, 2707.0], [54.5, 2707.0], [54.6, 2707.0], [54.7, 2708.0], [54.8, 2708.0], [54.9, 2709.0], [55.0, 2709.0], [55.1, 2710.0], [55.2, 2711.0], [55.3, 2712.0], [55.4, 2712.0], [55.5, 2712.0], [55.6, 2713.0], [55.7, 2713.0], [55.8, 2713.0], [55.9, 2714.0], [56.0, 2715.0], [56.1, 2715.0], [56.2, 2717.0], [56.3, 2717.0], [56.4, 2717.0], [56.5, 2718.0], [56.6, 2719.0], [56.7, 2719.0], [56.8, 2720.0], [56.9, 2720.0], [57.0, 2720.0], [57.1, 2721.0], [57.2, 2722.0], [57.3, 2722.0], [57.4, 2723.0], [57.5, 2724.0], [57.6, 2724.0], [57.7, 2724.0], [57.8, 2725.0], [57.9, 2725.0], [58.0, 2727.0], [58.1, 2727.0], [58.2, 2727.0], [58.3, 2728.0], [58.4, 2729.0], [58.5, 2730.0], [58.6, 2730.0], [58.7, 2730.0], [58.8, 2731.0], [58.9, 2731.0], [59.0, 2732.0], [59.1, 2733.0], [59.2, 2734.0], [59.3, 2734.0], [59.4, 2735.0], [59.5, 2736.0], [59.6, 2736.0], [59.7, 2737.0], [59.8, 2738.0], [59.9, 2738.0], [60.0, 2738.0], [60.1, 2738.0], [60.2, 2739.0], [60.3, 2739.0], [60.4, 2740.0], [60.5, 2740.0], [60.6, 2741.0], [60.7, 2741.0], [60.8, 2742.0], [60.9, 2742.0], [61.0, 2744.0], [61.1, 2744.0], [61.2, 2745.0], [61.3, 2746.0], [61.4, 2746.0], [61.5, 2748.0], [61.6, 2748.0], [61.7, 2748.0], [61.8, 2748.0], [61.9, 2749.0], [62.0, 2750.0], [62.1, 2750.0], [62.2, 2752.0], [62.3, 2753.0], [62.4, 2754.0], [62.5, 2755.0], [62.6, 2756.0], [62.7, 2757.0], [62.8, 2759.0], [62.9, 2761.0], [63.0, 2763.0], [63.1, 2764.0], [63.2, 2766.0], [63.3, 2768.0], [63.4, 2772.0], [63.5, 2773.0], [63.6, 2775.0], [63.7, 2775.0], [63.8, 2777.0], [63.9, 2779.0], [64.0, 2780.0], [64.1, 2781.0], [64.2, 2783.0], [64.3, 2784.0], [64.4, 2785.0], [64.5, 2786.0], [64.6, 2786.0], [64.7, 2787.0], [64.8, 2789.0], [64.9, 2790.0], [65.0, 2791.0], [65.1, 2791.0], [65.2, 2792.0], [65.3, 2793.0], [65.4, 2795.0], [65.5, 2796.0], [65.6, 2797.0], [65.7, 2803.0], [65.8, 2805.0], [65.9, 2809.0], [66.0, 2810.0], [66.1, 2811.0], [66.2, 2813.0], [66.3, 2816.0], [66.4, 2819.0], [66.5, 2823.0], [66.6, 2827.0], [66.7, 2830.0], [66.8, 2833.0], [66.9, 2840.0], [67.0, 2845.0], [67.1, 2854.0], [67.2, 2857.0], [67.3, 2865.0], [67.4, 2871.0], [67.5, 2878.0], [67.6, 2884.0], [67.7, 2887.0], [67.8, 2894.0], [67.9, 2900.0], [68.0, 2908.0], [68.1, 2909.0], [68.2, 2931.0], [68.3, 2941.0], [68.4, 2956.0], [68.5, 2991.0], [68.6, 3004.0], [68.7, 3062.0], [68.8, 6823.0], [68.9, 6872.0], [69.0, 6882.0], [69.1, 6903.0], [69.2, 6925.0], [69.3, 7071.0], [69.4, 7172.0], [69.5, 7229.0], [69.6, 7260.0], [69.7, 7348.0], [69.8, 7365.0], [69.9, 7402.0], [70.0, 7436.0], [70.1, 7524.0], [70.2, 7543.0], [70.3, 7553.0], [70.4, 7588.0], [70.5, 7614.0], [70.6, 7641.0], [70.7, 7654.0], [70.8, 7739.0], [70.9, 7775.0], [71.0, 7796.0], [71.1, 7881.0], [71.2, 7914.0], [71.3, 7966.0], [71.4, 7999.0], [71.5, 8076.0], [71.6, 8137.0], [71.7, 16335.0], [71.8, 16427.0], [71.9, 16431.0], [72.0, 16443.0], [72.1, 16450.0], [72.2, 16496.0], [72.3, 16505.0], [72.4, 16530.0], [72.5, 16558.0], [72.6, 16563.0], [72.7, 16571.0], [72.8, 16572.0], [72.9, 16575.0], [73.0, 16576.0], [73.1, 16580.0], [73.2, 16587.0], [73.3, 16592.0], [73.4, 16599.0], [73.5, 16605.0], [73.6, 16612.0], [73.7, 16618.0], [73.8, 16622.0], [73.9, 16629.0], [74.0, 16632.0], [74.1, 16638.0], [74.2, 16640.0], [74.3, 16644.0], [74.4, 16648.0], [74.5, 16649.0], [74.6, 16652.0], [74.7, 16654.0], [74.8, 16658.0], [74.9, 16660.0], [75.0, 16661.0], [75.1, 16666.0], [75.2, 16671.0], [75.3, 16676.0], [75.4, 16678.0], [75.5, 16681.0], [75.6, 16682.0], [75.7, 16684.0], [75.8, 16689.0], [75.9, 16690.0], [76.0, 16693.0], [76.1, 16693.0], [76.2, 16694.0], [76.3, 16697.0], [76.4, 16698.0], [76.5, 16699.0], [76.6, 16701.0], [76.7, 16702.0], [76.8, 16704.0], [76.9, 16707.0], [77.0, 16708.0], [77.1, 16710.0], [77.2, 16712.0], [77.3, 16713.0], [77.4, 16714.0], [77.5, 16719.0], [77.6, 16722.0], [77.7, 16727.0], [77.8, 16729.0], [77.9, 16731.0], [78.0, 16733.0], [78.1, 16734.0], [78.2, 16736.0], [78.3, 16738.0], [78.4, 16739.0], [78.5, 16741.0], [78.6, 16743.0], [78.7, 16744.0], [78.8, 16746.0], [78.9, 16746.0], [79.0, 16749.0], [79.1, 16752.0], [79.2, 16754.0], [79.3, 16757.0], [79.4, 16760.0], [79.5, 16763.0], [79.6, 16766.0], [79.7, 16769.0], [79.8, 16769.0], [79.9, 16772.0], [80.0, 16775.0], [80.1, 16780.0], [80.2, 16783.0], [80.3, 16787.0], [80.4, 16790.0], [80.5, 16792.0], [80.6, 16797.0], [80.7, 16799.0], [80.8, 16803.0], [80.9, 16806.0], [81.0, 16808.0], [81.1, 16813.0], [81.2, 16815.0], [81.3, 16816.0], [81.4, 16819.0], [81.5, 16822.0], [81.6, 16824.0], [81.7, 16827.0], [81.8, 16831.0], [81.9, 16832.0], [82.0, 16834.0], [82.1, 16836.0], [82.2, 16838.0], [82.3, 16839.0], [82.4, 16839.0], [82.5, 16841.0], [82.6, 16843.0], [82.7, 16846.0], [82.8, 16848.0], [82.9, 16849.0], [83.0, 16853.0], [83.1, 16854.0], [83.2, 16856.0], [83.3, 16859.0], [83.4, 16861.0], [83.5, 16863.0], [83.6, 16865.0], [83.7, 16867.0], [83.8, 16868.0], [83.9, 16870.0], [84.0, 16872.0], [84.1, 16876.0], [84.2, 16879.0], [84.3, 16881.0], [84.4, 16884.0], [84.5, 16893.0], [84.6, 16896.0], [84.7, 16900.0], [84.8, 16903.0], [84.9, 16909.0], [85.0, 16912.0], [85.1, 16915.0], [85.2, 16919.0], [85.3, 16921.0], [85.4, 16923.0], [85.5, 16924.0], [85.6, 16925.0], [85.7, 16936.0], [85.8, 16942.0], [85.9, 16942.0], [86.0, 16946.0], [86.1, 16950.0], [86.2, 16952.0], [86.3, 16958.0], [86.4, 16961.0], [86.5, 16969.0], [86.6, 16971.0], [86.7, 16973.0], [86.8, 16983.0], [86.9, 16987.0], [87.0, 16988.0], [87.1, 16990.0], [87.2, 16993.0], [87.3, 16997.0], [87.4, 17002.0], [87.5, 17002.0], [87.6, 17004.0], [87.7, 17007.0], [87.8, 17008.0], [87.9, 17014.0], [88.0, 17018.0], [88.1, 17025.0], [88.2, 17026.0], [88.3, 17030.0], [88.4, 17035.0], [88.5, 17038.0], [88.6, 17040.0], [88.7, 17046.0], [88.8, 17048.0], [88.9, 17049.0], [89.0, 17050.0], [89.1, 17057.0], [89.2, 17059.0], [89.3, 17063.0], [89.4, 17065.0], [89.5, 17066.0], [89.6, 17068.0], [89.7, 17070.0], [89.8, 17074.0], [89.9, 17077.0], [90.0, 17079.0], [90.1, 17081.0], [90.2, 17082.0], [90.3, 17086.0], [90.4, 17088.0], [90.5, 17092.0], [90.6, 17095.0], [90.7, 17099.0], [90.8, 17103.0], [90.9, 17107.0], [91.0, 17110.0], [91.1, 17112.0], [91.2, 17118.0], [91.3, 17128.0], [91.4, 17129.0], [91.5, 17131.0], [91.6, 17133.0], [91.7, 17136.0], [91.8, 17138.0], [91.9, 17141.0], [92.0, 17143.0], [92.1, 17149.0], [92.2, 17150.0], [92.3, 17158.0], [92.4, 17163.0], [92.5, 17164.0], [92.6, 17168.0], [92.7, 17172.0], [92.8, 17175.0], [92.9, 17177.0], [93.0, 17180.0], [93.1, 17181.0], [93.2, 17184.0], [93.3, 17187.0], [93.4, 17190.0], [93.5, 17192.0], [93.6, 17194.0], [93.7, 17199.0], [93.8, 17206.0], [93.9, 17210.0], [94.0, 17215.0], [94.1, 17217.0], [94.2, 17222.0], [94.3, 17229.0], [94.4, 17232.0], [94.5, 17237.0], [94.6, 17244.0], [94.7, 17252.0], [94.8, 17257.0], [94.9, 17261.0], [95.0, 17265.0], [95.1, 17267.0], [95.2, 17271.0], [95.3, 17274.0], [95.4, 17279.0], [95.5, 17287.0], [95.6, 17290.0], [95.7, 17298.0], [95.8, 17311.0], [95.9, 17314.0], [96.0, 17316.0], [96.1, 17324.0], [96.2, 17331.0], [96.3, 17336.0], [96.4, 17345.0], [96.5, 17349.0], [96.6, 17360.0], [96.7, 17387.0], [96.8, 17393.0], [96.9, 17399.0], [97.0, 17407.0], [97.1, 17412.0], [97.2, 17424.0], [97.3, 17435.0], [97.4, 17449.0], [97.5, 17466.0], [97.6, 17470.0], [97.7, 17480.0], [97.8, 17485.0], [97.9, 17499.0], [98.0, 17539.0], [98.1, 17558.0], [98.2, 18959.0], [98.3, 18988.0], [98.4, 18996.0], [98.5, 19001.0], [98.6, 19005.0], [98.7, 19011.0], [98.8, 19016.0], [98.9, 19024.0], [99.0, 19027.0], [99.1, 19042.0], [99.2, 19049.0], [99.3, 19061.0], [99.4, 19095.0], [99.5, 19133.0], [99.6, 19134.0], [99.7, 19144.0], [99.8, 19157.0], [99.9, 19162.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 0.0], [73.4, 0.0], [73.5, 0.0], [73.6, 0.0], [73.7, 0.0], [73.8, 0.0], [73.9, 0.0], [74.0, 0.0], [74.1, 0.0], [74.2, 0.0], [74.3, 0.0], [74.4, 0.0], [74.5, 0.0], [74.6, 0.0], [74.7, 0.0], [74.8, 0.0], [74.9, 0.0], [75.0, 0.0], [75.1, 0.0], [75.2, 0.0], [75.3, 0.0], [75.4, 0.0], [75.5, 0.0], [75.6, 0.0], [75.7, 0.0], [75.8, 0.0], [75.9, 0.0], [76.0, 0.0], [76.1, 0.0], [76.2, 0.0], [76.3, 0.0], [76.4, 0.0], [76.5, 0.0], [76.6, 0.0], [76.7, 0.0], [76.8, 0.0], [76.9, 0.0], [77.0, 0.0], [77.1, 0.0], [77.2, 0.0], [77.3, 0.0], [77.4, 0.0], [77.5, 0.0], [77.6, 0.0], [77.7, 0.0], [77.8, 0.0], [77.9, 0.0], [78.0, 0.0], [78.1, 0.0], [78.2, 0.0], [78.3, 0.0], [78.4, 0.0], [78.5, 0.0], [78.6, 0.0], [78.7, 0.0], [78.8, 0.0], [78.9, 0.0], [79.0, 0.0], [79.1, 0.0], [79.2, 0.0], [79.3, 0.0], [79.4, 0.0], [79.5, 0.0], [79.6, 0.0], [79.7, 0.0], [79.8, 0.0], [79.9, 0.0], [80.0, 0.0], [80.1, 0.0], [80.2, 0.0], [80.3, 0.0], [80.4, 0.0], [80.5, 0.0], [80.6, 0.0], [80.7, 0.0], [80.8, 0.0], [80.9, 0.0], [81.0, 0.0], [81.1, 0.0], [81.2, 0.0], [81.3, 0.0], [81.4, 0.0], [81.5, 0.0], [81.6, 0.0], [81.7, 0.0], [81.8, 0.0], [81.9, 0.0], [82.0, 0.0], [82.1, 0.0], [82.2, 0.0], [82.3, 0.0], [82.4, 0.0], [82.5, 0.0], [82.6, 0.0], [82.7, 0.0], [82.8, 0.0], [82.9, 0.0], [83.0, 0.0], [83.1, 0.0], [83.2, 0.0], [83.3, 0.0], [83.4, 0.0], [83.5, 0.0], [83.6, 0.0], [83.7, 0.0], [83.8, 0.0], [83.9, 0.0], [84.0, 0.0], [84.1, 0.0], [84.2, 0.0], [84.3, 0.0], [84.4, 0.0], [84.5, 0.0], [84.6, 0.0], [84.7, 0.0], [84.8, 0.0], [84.9, 0.0], [85.0, 0.0], [85.1, 0.0], [85.2, 0.0], [85.3, 0.0], [85.4, 0.0], [85.5, 0.0], [85.6, 0.0], [85.7, 0.0], [85.8, 0.0], [85.9, 0.0], [86.0, 0.0], [86.1, 0.0], [86.2, 0.0], [86.3, 0.0], [86.4, 0.0], [86.5, 0.0], [86.6, 0.0], [86.7, 0.0], [86.8, 0.0], [86.9, 0.0], [87.0, 0.0], [87.1, 0.0], [87.2, 0.0], [87.3, 0.0], [87.4, 0.0], [87.5, 0.0], [87.6, 0.0], [87.7, 0.0], [87.8, 0.0], [87.9, 0.0], [88.0, 0.0], [88.1, 0.0], [88.2, 0.0], [88.3, 0.0], [88.4, 0.0], [88.5, 0.0], [88.6, 0.0], [88.7, 0.0], [88.8, 0.0], [88.9, 0.0], [89.0, 0.0], [89.1, 0.0], [89.2, 0.0], [89.3, 0.0], [89.4, 0.0], [89.5, 0.0], [89.6, 0.0], [89.7, 0.0], [89.8, 0.0], [89.9, 0.0], [90.0, 0.0], [90.1, 0.0], [90.2, 0.0], [90.3, 0.0], [90.4, 0.0], [90.5, 0.0], [90.6, 0.0], [90.7, 0.0], [90.8, 0.0], [90.9, 0.0], [91.0, 0.0], [91.1, 0.0], [91.2, 0.0], [91.3, 0.0], [91.4, 0.0], [91.5, 0.0], [91.6, 0.0], [91.7, 0.0], [91.8, 0.0], [91.9, 0.0], [92.0, 0.0], [92.1, 0.0], [92.2, 0.0], [92.3, 0.0], [92.4, 0.0], [92.5, 0.0], [92.6, 0.0], [92.7, 0.0], [92.8, 0.0], [92.9, 0.0], [93.0, 0.0], [93.1, 0.0], [93.2, 0.0], [93.3, 0.0], [93.4, 0.0], [93.5, 0.0], [93.6, 0.0], [93.7, 0.0], [93.8, 0.0], [93.9, 0.0], [94.0, 0.0], [94.1, 0.0], [94.2, 0.0], [94.3, 0.0], [94.4, 0.0], [94.5, 0.0], [94.6, 0.0], [94.7, 0.0], [94.8, 0.0], [94.9, 0.0], [95.0, 0.0], [95.1, 0.0], [95.2, 0.0], [95.3, 0.0], [95.4, 0.0], [95.5, 0.0], [95.6, 0.0], [95.7, 0.0], [95.8, 0.0], [95.9, 0.0], [96.0, 0.0], [96.1, 0.0], [96.2, 0.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 1.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 15.0], [8.7, 15.0], [8.8, 15.0], [8.9, 16.0], [9.0, 16.0], [9.1, 17.0], [9.2, 17.0], [9.3, 18.0], [9.4, 19.0], [9.5, 19.0], [9.6, 20.0], [9.7, 20.0], [9.8, 21.0], [9.9, 21.0], [10.0, 22.0], [10.1, 22.0], [10.2, 22.0], [10.3, 23.0], [10.4, 23.0], [10.5, 24.0], [10.6, 24.0], [10.7, 25.0], [10.8, 26.0], [10.9, 26.0], [11.0, 27.0], [11.1, 28.0], [11.2, 28.0], [11.3, 28.0], [11.4, 29.0], [11.5, 29.0], [11.6, 29.0], [11.7, 30.0], [11.8, 30.0], [11.9, 33.0], [12.0, 33.0], [12.1, 33.0], [12.2, 34.0], [12.3, 34.0], [12.4, 35.0], [12.5, 35.0], [12.6, 36.0], [12.7, 36.0], [12.8, 37.0], [12.9, 38.0], [13.0, 39.0], [13.1, 39.0], [13.2, 40.0], [13.3, 40.0], [13.4, 41.0], [13.5, 42.0], [13.6, 42.0], [13.7, 43.0], [13.8, 44.0], [13.9, 45.0], [14.0, 45.0], [14.1, 45.0], [14.2, 47.0], [14.3, 49.0], [14.4, 50.0], [14.5, 50.0], [14.6, 52.0], [14.7, 52.0], [14.8, 53.0], [14.9, 53.0], [15.0, 54.0], [15.1, 54.0], [15.2, 54.0], [15.3, 55.0], [15.4, 55.0], [15.5, 55.0], [15.6, 56.0], [15.7, 56.0], [15.8, 56.0], [15.9, 56.0], [16.0, 56.0], [16.1, 57.0], [16.2, 57.0], [16.3, 58.0], [16.4, 58.0], [16.5, 58.0], [16.6, 59.0], [16.7, 59.0], [16.8, 59.0], [16.9, 60.0], [17.0, 60.0], [17.1, 60.0], [17.2, 60.0], [17.3, 60.0], [17.4, 60.0], [17.5, 60.0], [17.6, 61.0], [17.7, 62.0], [17.8, 63.0], [17.9, 63.0], [18.0, 64.0], [18.1, 64.0], [18.2, 65.0], [18.3, 65.0], [18.4, 66.0], [18.5, 66.0], [18.6, 66.0], [18.7, 67.0], [18.8, 67.0], [18.9, 67.0], [19.0, 67.0], [19.1, 68.0], [19.2, 68.0], [19.3, 68.0], [19.4, 69.0], [19.5, 69.0], [19.6, 69.0], [19.7, 70.0], [19.8, 71.0], [19.9, 72.0], [20.0, 72.0], [20.1, 73.0], [20.2, 73.0], [20.3, 75.0], [20.4, 76.0], [20.5, 76.0], [20.6, 77.0], [20.7, 77.0], [20.8, 78.0], [20.9, 78.0], [21.0, 78.0], [21.1, 79.0], [21.2, 79.0], [21.3, 79.0], [21.4, 80.0], [21.5, 80.0], [21.6, 80.0], [21.7, 80.0], [21.8, 81.0], [21.9, 82.0], [22.0, 82.0], [22.1, 82.0], [22.2, 83.0], [22.3, 83.0], [22.4, 83.0], [22.5, 83.0], [22.6, 84.0], [22.7, 85.0], [22.8, 85.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 87.0], [23.3, 87.0], [23.4, 87.0], [23.5, 88.0], [23.6, 89.0], [23.7, 89.0], [23.8, 89.0], [23.9, 90.0], [24.0, 90.0], [24.1, 91.0], [24.2, 91.0], [24.3, 91.0], [24.4, 91.0], [24.5, 91.0], [24.6, 92.0], [24.7, 92.0], [24.8, 92.0], [24.9, 92.0], [25.0, 93.0], [25.1, 93.0], [25.2, 93.0], [25.3, 93.0], [25.4, 93.0], [25.5, 94.0], [25.6, 94.0], [25.7, 94.0], [25.8, 94.0], [25.9, 95.0], [26.0, 95.0], [26.1, 95.0], [26.2, 95.0], [26.3, 96.0], [26.4, 96.0], [26.5, 96.0], [26.6, 96.0], [26.7, 97.0], [26.8, 97.0], [26.9, 97.0], [27.0, 97.0], [27.1, 98.0], [27.2, 98.0], [27.3, 98.0], [27.4, 98.0], [27.5, 98.0], [27.6, 99.0], [27.7, 99.0], [27.8, 99.0], [27.9, 99.0], [28.0, 99.0], [28.1, 99.0], [28.2, 100.0], [28.3, 100.0], [28.4, 100.0], [28.5, 100.0], [28.6, 100.0], [28.7, 100.0], [28.8, 101.0], [28.9, 101.0], [29.0, 101.0], [29.1, 101.0], [29.2, 102.0], [29.3, 102.0], [29.4, 102.0], [29.5, 102.0], [29.6, 102.0], [29.7, 103.0], [29.8, 103.0], [29.9, 103.0], [30.0, 103.0], [30.1, 104.0], [30.2, 104.0], [30.3, 105.0], [30.4, 105.0], [30.5, 106.0], [30.6, 106.0], [30.7, 106.0], [30.8, 106.0], [30.9, 106.0], [31.0, 107.0], [31.1, 107.0], [31.2, 107.0], [31.3, 107.0], [31.4, 108.0], [31.5, 108.0], [31.6, 108.0], [31.7, 108.0], [31.8, 109.0], [31.9, 109.0], [32.0, 109.0], [32.1, 109.0], [32.2, 110.0], [32.3, 110.0], [32.4, 110.0], [32.5, 111.0], [32.6, 111.0], [32.7, 111.0], [32.8, 112.0], [32.9, 112.0], [33.0, 112.0], [33.1, 112.0], [33.2, 112.0], [33.3, 113.0], [33.4, 113.0], [33.5, 113.0], [33.6, 113.0], [33.7, 114.0], [33.8, 114.0], [33.9, 114.0], [34.0, 114.0], [34.1, 115.0], [34.2, 115.0], [34.3, 115.0], [34.4, 115.0], [34.5, 116.0], [34.6, 116.0], [34.7, 116.0], [34.8, 116.0], [34.9, 116.0], [35.0, 116.0], [35.1, 117.0], [35.2, 117.0], [35.3, 117.0], [35.4, 118.0], [35.5, 118.0], [35.6, 118.0], [35.7, 118.0], [35.8, 118.0], [35.9, 119.0], [36.0, 119.0], [36.1, 119.0], [36.2, 119.0], [36.3, 119.0], [36.4, 119.0], [36.5, 120.0], [36.6, 120.0], [36.7, 120.0], [36.8, 121.0], [36.9, 121.0], [37.0, 121.0], [37.1, 121.0], [37.2, 122.0], [37.3, 122.0], [37.4, 122.0], [37.5, 122.0], [37.6, 122.0], [37.7, 122.0], [37.8, 123.0], [37.9, 123.0], [38.0, 123.0], [38.1, 123.0], [38.2, 123.0], [38.3, 123.0], [38.4, 124.0], [38.5, 124.0], [38.6, 125.0], [38.7, 125.0], [38.8, 125.0], [38.9, 126.0], [39.0, 126.0], [39.1, 126.0], [39.2, 127.0], [39.3, 127.0], [39.4, 127.0], [39.5, 127.0], [39.6, 127.0], [39.7, 127.0], [39.8, 128.0], [39.9, 128.0], [40.0, 128.0], [40.1, 128.0], [40.2, 129.0], [40.3, 129.0], [40.4, 129.0], [40.5, 130.0], [40.6, 130.0], [40.7, 130.0], [40.8, 131.0], [40.9, 131.0], [41.0, 131.0], [41.1, 132.0], [41.2, 132.0], [41.3, 132.0], [41.4, 133.0], [41.5, 133.0], [41.6, 134.0], [41.7, 134.0], [41.8, 134.0], [41.9, 134.0], [42.0, 134.0], [42.1, 135.0], [42.2, 135.0], [42.3, 136.0], [42.4, 136.0], [42.5, 137.0], [42.6, 137.0], [42.7, 138.0], [42.8, 138.0], [42.9, 138.0], [43.0, 138.0], [43.1, 139.0], [43.2, 139.0], [43.3, 139.0], [43.4, 140.0], [43.5, 140.0], [43.6, 141.0], [43.7, 141.0], [43.8, 142.0], [43.9, 143.0], [44.0, 143.0], [44.1, 144.0], [44.2, 144.0], [44.3, 145.0], [44.4, 145.0], [44.5, 145.0], [44.6, 146.0], [44.7, 146.0], [44.8, 147.0], [44.9, 147.0], [45.0, 148.0], [45.1, 148.0], [45.2, 148.0], [45.3, 149.0], [45.4, 149.0], [45.5, 149.0], [45.6, 150.0], [45.7, 150.0], [45.8, 150.0], [45.9, 150.0], [46.0, 150.0], [46.1, 151.0], [46.2, 151.0], [46.3, 152.0], [46.4, 152.0], [46.5, 153.0], [46.6, 153.0], [46.7, 153.0], [46.8, 154.0], [46.9, 154.0], [47.0, 155.0], [47.1, 155.0], [47.2, 156.0], [47.3, 156.0], [47.4, 156.0], [47.5, 156.0], [47.6, 156.0], [47.7, 157.0], [47.8, 157.0], [47.9, 158.0], [48.0, 159.0], [48.1, 159.0], [48.2, 159.0], [48.3, 160.0], [48.4, 161.0], [48.5, 161.0], [48.6, 162.0], [48.7, 162.0], [48.8, 163.0], [48.9, 163.0], [49.0, 164.0], [49.1, 164.0], [49.2, 165.0], [49.3, 165.0], [49.4, 166.0], [49.5, 166.0], [49.6, 167.0], [49.7, 168.0], [49.8, 168.0], [49.9, 169.0], [50.0, 169.0], [50.1, 170.0], [50.2, 170.0], [50.3, 171.0], [50.4, 171.0], [50.5, 172.0], [50.6, 172.0], [50.7, 172.0], [50.8, 175.0], [50.9, 175.0], [51.0, 176.0], [51.1, 177.0], [51.2, 178.0], [51.3, 178.0], [51.4, 179.0], [51.5, 180.0], [51.6, 181.0], [51.7, 182.0], [51.8, 183.0], [51.9, 184.0], [52.0, 185.0], [52.1, 187.0], [52.2, 190.0], [52.3, 191.0], [52.4, 192.0], [52.5, 192.0], [52.6, 193.0], [52.7, 194.0], [52.8, 195.0], [52.9, 195.0], [53.0, 196.0], [53.1, 197.0], [53.2, 197.0], [53.3, 197.0], [53.4, 198.0], [53.5, 198.0], [53.6, 199.0], [53.7, 201.0], [53.8, 203.0], [53.9, 204.0], [54.0, 206.0], [54.1, 207.0], [54.2, 208.0], [54.3, 209.0], [54.4, 209.0], [54.5, 210.0], [54.6, 211.0], [54.7, 212.0], [54.8, 214.0], [54.9, 215.0], [55.0, 216.0], [55.1, 216.0], [55.2, 217.0], [55.3, 217.0], [55.4, 218.0], [55.5, 218.0], [55.6, 219.0], [55.7, 220.0], [55.8, 220.0], [55.9, 222.0], [56.0, 222.0], [56.1, 223.0], [56.2, 223.0], [56.3, 224.0], [56.4, 224.0], [56.5, 224.0], [56.6, 224.0], [56.7, 225.0], [56.8, 225.0], [56.9, 225.0], [57.0, 226.0], [57.1, 226.0], [57.2, 226.0], [57.3, 226.0], [57.4, 227.0], [57.5, 228.0], [57.6, 228.0], [57.7, 228.0], [57.8, 229.0], [57.9, 229.0], [58.0, 230.0], [58.1, 231.0], [58.2, 231.0], [58.3, 232.0], [58.4, 232.0], [58.5, 232.0], [58.6, 232.0], [58.7, 232.0], [58.8, 233.0], [58.9, 234.0], [59.0, 234.0], [59.1, 235.0], [59.2, 235.0], [59.3, 236.0], [59.4, 236.0], [59.5, 236.0], [59.6, 236.0], [59.7, 236.0], [59.8, 236.0], [59.9, 237.0], [60.0, 237.0], [60.1, 238.0], [60.2, 238.0], [60.3, 238.0], [60.4, 238.0], [60.5, 239.0], [60.6, 239.0], [60.7, 239.0], [60.8, 239.0], [60.9, 239.0], [61.0, 239.0], [61.1, 240.0], [61.2, 240.0], [61.3, 240.0], [61.4, 240.0], [61.5, 240.0], [61.6, 240.0], [61.7, 241.0], [61.8, 241.0], [61.9, 241.0], [62.0, 241.0], [62.1, 242.0], [62.2, 242.0], [62.3, 243.0], [62.4, 243.0], [62.5, 243.0], [62.6, 244.0], [62.7, 244.0], [62.8, 245.0], [62.9, 246.0], [63.0, 247.0], [63.1, 247.0], [63.2, 247.0], [63.3, 247.0], [63.4, 247.0], [63.5, 248.0], [63.6, 248.0], [63.7, 248.0], [63.8, 248.0], [63.9, 248.0], [64.0, 249.0], [64.1, 249.0], [64.2, 249.0], [64.3, 249.0], [64.4, 249.0], [64.5, 249.0], [64.6, 249.0], [64.7, 249.0], [64.8, 249.0], [64.9, 250.0], [65.0, 250.0], [65.1, 250.0], [65.2, 250.0], [65.3, 251.0], [65.4, 251.0], [65.5, 252.0], [65.6, 252.0], [65.7, 253.0], [65.8, 253.0], [65.9, 253.0], [66.0, 254.0], [66.1, 254.0], [66.2, 254.0], [66.3, 254.0], [66.4, 255.0], [66.5, 255.0], [66.6, 255.0], [66.7, 256.0], [66.8, 256.0], [66.9, 257.0], [67.0, 257.0], [67.1, 258.0], [67.2, 258.0], [67.3, 258.0], [67.4, 258.0], [67.5, 259.0], [67.6, 259.0], [67.7, 260.0], [67.8, 260.0], [67.9, 260.0], [68.0, 261.0], [68.1, 261.0], [68.2, 261.0], [68.3, 261.0], [68.4, 262.0], [68.5, 262.0], [68.6, 263.0], [68.7, 263.0], [68.8, 263.0], [68.9, 264.0], [69.0, 264.0], [69.1, 265.0], [69.2, 265.0], [69.3, 266.0], [69.4, 266.0], [69.5, 267.0], [69.6, 267.0], [69.7, 267.0], [69.8, 267.0], [69.9, 268.0], [70.0, 268.0], [70.1, 269.0], [70.2, 270.0], [70.3, 270.0], [70.4, 271.0], [70.5, 271.0], [70.6, 271.0], [70.7, 272.0], [70.8, 272.0], [70.9, 273.0], [71.0, 273.0], [71.1, 273.0], [71.2, 274.0], [71.3, 274.0], [71.4, 274.0], [71.5, 275.0], [71.6, 275.0], [71.7, 275.0], [71.8, 275.0], [71.9, 276.0], [72.0, 276.0], [72.1, 277.0], [72.2, 278.0], [72.3, 278.0], [72.4, 279.0], [72.5, 279.0], [72.6, 279.0], [72.7, 281.0], [72.8, 281.0], [72.9, 282.0], [73.0, 282.0], [73.1, 283.0], [73.2, 283.0], [73.3, 284.0], [73.4, 284.0], [73.5, 284.0], [73.6, 284.0], [73.7, 285.0], [73.8, 285.0], [73.9, 286.0], [74.0, 287.0], [74.1, 287.0], [74.2, 288.0], [74.3, 288.0], [74.4, 288.0], [74.5, 289.0], [74.6, 290.0], [74.7, 290.0], [74.8, 291.0], [74.9, 291.0], [75.0, 292.0], [75.1, 293.0], [75.2, 293.0], [75.3, 294.0], [75.4, 295.0], [75.5, 295.0], [75.6, 296.0], [75.7, 296.0], [75.8, 297.0], [75.9, 298.0], [76.0, 298.0], [76.1, 298.0], [76.2, 298.0], [76.3, 299.0], [76.4, 299.0], [76.5, 299.0], [76.6, 300.0], [76.7, 300.0], [76.8, 301.0], [76.9, 301.0], [77.0, 301.0], [77.1, 301.0], [77.2, 302.0], [77.3, 302.0], [77.4, 302.0], [77.5, 302.0], [77.6, 302.0], [77.7, 302.0], [77.8, 302.0], [77.9, 303.0], [78.0, 303.0], [78.1, 303.0], [78.2, 303.0], [78.3, 303.0], [78.4, 304.0], [78.5, 304.0], [78.6, 304.0], [78.7, 304.0], [78.8, 305.0], [78.9, 305.0], [79.0, 305.0], [79.1, 306.0], [79.2, 306.0], [79.3, 309.0], [79.4, 309.0], [79.5, 310.0], [79.6, 312.0], [79.7, 313.0], [79.8, 313.0], [79.9, 314.0], [80.0, 314.0], [80.1, 315.0], [80.2, 315.0], [80.3, 315.0], [80.4, 316.0], [80.5, 316.0], [80.6, 316.0], [80.7, 317.0], [80.8, 317.0], [80.9, 317.0], [81.0, 318.0], [81.1, 318.0], [81.2, 319.0], [81.3, 320.0], [81.4, 320.0], [81.5, 321.0], [81.6, 321.0], [81.7, 322.0], [81.8, 323.0], [81.9, 325.0], [82.0, 326.0], [82.1, 327.0], [82.2, 328.0], [82.3, 329.0], [82.4, 329.0], [82.5, 334.0], [82.6, 335.0], [82.7, 335.0], [82.8, 337.0], [82.9, 339.0], [83.0, 341.0], [83.1, 343.0], [83.2, 345.0], [83.3, 346.0], [83.4, 349.0], [83.5, 349.0], [83.6, 350.0], [83.7, 351.0], [83.8, 352.0], [83.9, 352.0], [84.0, 353.0], [84.1, 354.0], [84.2, 355.0], [84.3, 355.0], [84.4, 356.0], [84.5, 356.0], [84.6, 357.0], [84.7, 357.0], [84.8, 358.0], [84.9, 359.0], [85.0, 359.0], [85.1, 360.0], [85.2, 361.0], [85.3, 361.0], [85.4, 362.0], [85.5, 362.0], [85.6, 363.0], [85.7, 364.0], [85.8, 365.0], [85.9, 366.0], [86.0, 369.0], [86.1, 370.0], [86.2, 370.0], [86.3, 371.0], [86.4, 371.0], [86.5, 372.0], [86.6, 372.0], [86.7, 372.0], [86.8, 373.0], [86.9, 373.0], [87.0, 373.0], [87.1, 373.0], [87.2, 374.0], [87.3, 374.0], [87.4, 375.0], [87.5, 375.0], [87.6, 376.0], [87.7, 377.0], [87.8, 379.0], [87.9, 382.0], [88.0, 383.0], [88.1, 390.0], [88.2, 392.0], [88.3, 399.0], [88.4, 405.0], [88.5, 407.0], [88.6, 410.0], [88.7, 412.0], [88.8, 414.0], [88.9, 417.0], [89.0, 418.0], [89.1, 422.0], [89.2, 424.0], [89.3, 425.0], [89.4, 427.0], [89.5, 430.0], [89.6, 436.0], [89.7, 455.0], [89.8, 456.0], [89.9, 459.0], [90.0, 466.0], [90.1, 468.0], [90.2, 472.0], [90.3, 514.0], [90.4, 547.0], [90.5, 560.0], [90.6, 573.0], [90.7, 622.0], [90.8, 6840.0], [90.9, 6847.0], [91.0, 6854.0], [91.1, 6864.0], [91.2, 16266.0], [91.3, 16275.0], [91.4, 16280.0], [91.5, 16289.0], [91.6, 16294.0], [91.7, 16299.0], [91.8, 16303.0], [91.9, 16309.0], [92.0, 16311.0], [92.1, 16312.0], [92.2, 16313.0], [92.3, 16314.0], [92.4, 16374.0], [92.5, 16436.0], [92.6, 16441.0], [92.7, 16443.0], [92.8, 16446.0], [92.9, 16450.0], [93.0, 16454.0], [93.1, 16456.0], [93.2, 16461.0], [93.3, 16462.0], [93.4, 16468.0], [93.5, 16475.0], [93.6, 16483.0], [93.7, 16487.0], [93.8, 16493.0], [93.9, 16496.0], [94.0, 16500.0], [94.1, 16506.0], [94.2, 16510.0], [94.3, 16513.0], [94.4, 16514.0], [94.5, 16523.0], [94.6, 16528.0], [94.7, 16532.0], [94.8, 16536.0], [94.9, 16538.0], [95.0, 16547.0], [95.1, 16557.0], [95.2, 16565.0], [95.3, 16570.0], [95.4, 16572.0], [95.5, 16573.0], [95.6, 16578.0], [95.7, 16579.0], [95.8, 16584.0], [95.9, 16585.0], [96.0, 16591.0], [96.1, 16594.0], [96.2, 16595.0], [96.3, 16596.0], [96.4, 16598.0], [96.5, 16599.0], [96.6, 16601.0], [96.7, 16602.0], [96.8, 16604.0], [96.9, 16606.0], [97.0, 16609.0], [97.1, 16611.0], [97.2, 16612.0], [97.3, 16615.0], [97.4, 16617.0], [97.5, 16619.0], [97.6, 16621.0], [97.7, 16622.0], [97.8, 16625.0], [97.9, 16627.0], [98.0, 16628.0], [98.1, 16629.0], [98.2, 16630.0], [98.3, 16634.0], [98.4, 16635.0], [98.5, 16638.0], [98.6, 16641.0], [98.7, 16641.0], [98.8, 16649.0], [98.9, 16652.0], [99.0, 16661.0], [99.1, 16671.0], [99.2, 16673.0], [99.3, 16675.0], [99.4, 16677.0], [99.5, 16680.0], [99.6, 16682.0], [99.7, 16684.0], [99.8, 16686.0], [99.9, 16697.0], [100.0, 16705.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 10.0], [7.1, 10.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 12.0], [7.6, 12.0], [7.7, 13.0], [7.8, 13.0], [7.9, 14.0], [8.0, 14.0], [8.1, 15.0], [8.2, 15.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 16.0], [8.7, 17.0], [8.8, 17.0], [8.9, 18.0], [9.0, 18.0], [9.1, 20.0], [9.2, 21.0], [9.3, 23.0], [9.4, 24.0], [9.5, 25.0], [9.6, 25.0], [9.7, 26.0], [9.8, 26.0], [9.9, 27.0], [10.0, 27.0], [10.1, 29.0], [10.2, 29.0], [10.3, 29.0], [10.4, 29.0], [10.5, 30.0], [10.6, 31.0], [10.7, 31.0], [10.8, 32.0], [10.9, 33.0], [11.0, 34.0], [11.1, 35.0], [11.2, 36.0], [11.3, 37.0], [11.4, 38.0], [11.5, 39.0], [11.6, 40.0], [11.7, 40.0], [11.8, 41.0], [11.9, 42.0], [12.0, 42.0], [12.1, 46.0], [12.2, 47.0], [12.3, 48.0], [12.4, 50.0], [12.5, 52.0], [12.6, 53.0], [12.7, 54.0], [12.8, 55.0], [12.9, 56.0], [13.0, 57.0], [13.1, 57.0], [13.2, 58.0], [13.3, 59.0], [13.4, 59.0], [13.5, 59.0], [13.6, 60.0], [13.7, 60.0], [13.8, 61.0], [13.9, 61.0], [14.0, 61.0], [14.1, 62.0], [14.2, 62.0], [14.3, 63.0], [14.4, 63.0], [14.5, 64.0], [14.6, 64.0], [14.7, 64.0], [14.8, 65.0], [14.9, 65.0], [15.0, 65.0], [15.1, 65.0], [15.2, 66.0], [15.3, 66.0], [15.4, 67.0], [15.5, 67.0], [15.6, 67.0], [15.7, 67.0], [15.8, 68.0], [15.9, 68.0], [16.0, 68.0], [16.1, 68.0], [16.2, 69.0], [16.3, 70.0], [16.4, 70.0], [16.5, 71.0], [16.6, 72.0], [16.7, 72.0], [16.8, 72.0], [16.9, 73.0], [17.0, 74.0], [17.1, 75.0], [17.2, 77.0], [17.3, 77.0], [17.4, 79.0], [17.5, 79.0], [17.6, 80.0], [17.7, 80.0], [17.8, 81.0], [17.9, 81.0], [18.0, 81.0], [18.1, 82.0], [18.2, 82.0], [18.3, 83.0], [18.4, 83.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 86.0], [18.9, 86.0], [19.0, 87.0], [19.1, 87.0], [19.2, 88.0], [19.3, 88.0], [19.4, 88.0], [19.5, 89.0], [19.6, 89.0], [19.7, 90.0], [19.8, 90.0], [19.9, 91.0], [20.0, 91.0], [20.1, 91.0], [20.2, 92.0], [20.3, 92.0], [20.4, 92.0], [20.5, 92.0], [20.6, 93.0], [20.7, 93.0], [20.8, 94.0], [20.9, 94.0], [21.0, 95.0], [21.1, 95.0], [21.2, 96.0], [21.3, 96.0], [21.4, 97.0], [21.5, 97.0], [21.6, 98.0], [21.7, 98.0], [21.8, 98.0], [21.9, 99.0], [22.0, 99.0], [22.1, 99.0], [22.2, 99.0], [22.3, 99.0], [22.4, 100.0], [22.5, 100.0], [22.6, 100.0], [22.7, 100.0], [22.8, 101.0], [22.9, 101.0], [23.0, 101.0], [23.1, 101.0], [23.2, 101.0], [23.3, 101.0], [23.4, 101.0], [23.5, 101.0], [23.6, 102.0], [23.7, 102.0], [23.8, 102.0], [23.9, 102.0], [24.0, 103.0], [24.1, 104.0], [24.2, 105.0], [24.3, 105.0], [24.4, 106.0], [24.5, 106.0], [24.6, 106.0], [24.7, 107.0], [24.8, 107.0], [24.9, 108.0], [25.0, 108.0], [25.1, 108.0], [25.2, 109.0], [25.3, 110.0], [25.4, 111.0], [25.5, 111.0], [25.6, 112.0], [25.7, 112.0], [25.8, 113.0], [25.9, 114.0], [26.0, 115.0], [26.1, 115.0], [26.2, 116.0], [26.3, 116.0], [26.4, 116.0], [26.5, 117.0], [26.6, 117.0], [26.7, 117.0], [26.8, 117.0], [26.9, 118.0], [27.0, 118.0], [27.1, 118.0], [27.2, 119.0], [27.3, 119.0], [27.4, 120.0], [27.5, 121.0], [27.6, 121.0], [27.7, 121.0], [27.8, 122.0], [27.9, 123.0], [28.0, 123.0], [28.1, 124.0], [28.2, 124.0], [28.3, 124.0], [28.4, 125.0], [28.5, 126.0], [28.6, 126.0], [28.7, 127.0], [28.8, 127.0], [28.9, 127.0], [29.0, 128.0], [29.1, 129.0], [29.2, 130.0], [29.3, 130.0], [29.4, 131.0], [29.5, 131.0], [29.6, 131.0], [29.7, 132.0], [29.8, 133.0], [29.9, 134.0], [30.0, 135.0], [30.1, 135.0], [30.2, 136.0], [30.3, 136.0], [30.4, 136.0], [30.5, 136.0], [30.6, 137.0], [30.7, 137.0], [30.8, 138.0], [30.9, 138.0], [31.0, 138.0], [31.1, 139.0], [31.2, 140.0], [31.3, 141.0], [31.4, 142.0], [31.5, 142.0], [31.6, 143.0], [31.7, 144.0], [31.8, 144.0], [31.9, 145.0], [32.0, 145.0], [32.1, 146.0], [32.2, 147.0], [32.3, 148.0], [32.4, 149.0], [32.5, 149.0], [32.6, 150.0], [32.7, 151.0], [32.8, 152.0], [32.9, 153.0], [33.0, 153.0], [33.1, 155.0], [33.2, 155.0], [33.3, 155.0], [33.4, 155.0], [33.5, 155.0], [33.6, 156.0], [33.7, 157.0], [33.8, 157.0], [33.9, 158.0], [34.0, 159.0], [34.1, 160.0], [34.2, 160.0], [34.3, 161.0], [34.4, 161.0], [34.5, 162.0], [34.6, 162.0], [34.7, 162.0], [34.8, 163.0], [34.9, 163.0], [35.0, 164.0], [35.1, 164.0], [35.2, 164.0], [35.3, 164.0], [35.4, 165.0], [35.5, 166.0], [35.6, 166.0], [35.7, 167.0], [35.8, 167.0], [35.9, 167.0], [36.0, 167.0], [36.1, 168.0], [36.2, 168.0], [36.3, 168.0], [36.4, 168.0], [36.5, 169.0], [36.6, 169.0], [36.7, 170.0], [36.8, 170.0], [36.9, 170.0], [37.0, 171.0], [37.1, 171.0], [37.2, 172.0], [37.3, 172.0], [37.4, 172.0], [37.5, 173.0], [37.6, 173.0], [37.7, 173.0], [37.8, 174.0], [37.9, 174.0], [38.0, 174.0], [38.1, 175.0], [38.2, 176.0], [38.3, 176.0], [38.4, 177.0], [38.5, 177.0], [38.6, 178.0], [38.7, 178.0], [38.8, 179.0], [38.9, 179.0], [39.0, 180.0], [39.1, 181.0], [39.2, 181.0], [39.3, 182.0], [39.4, 182.0], [39.5, 183.0], [39.6, 184.0], [39.7, 185.0], [39.8, 185.0], [39.9, 186.0], [40.0, 186.0], [40.1, 186.0], [40.2, 187.0], [40.3, 187.0], [40.4, 188.0], [40.5, 188.0], [40.6, 188.0], [40.7, 189.0], [40.8, 189.0], [40.9, 189.0], [41.0, 190.0], [41.1, 190.0], [41.2, 191.0], [41.3, 192.0], [41.4, 193.0], [41.5, 193.0], [41.6, 194.0], [41.7, 195.0], [41.8, 195.0], [41.9, 195.0], [42.0, 196.0], [42.1, 196.0], [42.2, 196.0], [42.3, 196.0], [42.4, 197.0], [42.5, 197.0], [42.6, 197.0], [42.7, 198.0], [42.8, 198.0], [42.9, 199.0], [43.0, 200.0], [43.1, 200.0], [43.2, 201.0], [43.3, 201.0], [43.4, 201.0], [43.5, 201.0], [43.6, 202.0], [43.7, 202.0], [43.8, 202.0], [43.9, 203.0], [44.0, 203.0], [44.1, 203.0], [44.2, 204.0], [44.3, 204.0], [44.4, 205.0], [44.5, 205.0], [44.6, 205.0], [44.7, 205.0], [44.8, 206.0], [44.9, 206.0], [45.0, 206.0], [45.1, 207.0], [45.2, 207.0], [45.3, 207.0], [45.4, 207.0], [45.5, 208.0], [45.6, 208.0], [45.7, 208.0], [45.8, 208.0], [45.9, 209.0], [46.0, 209.0], [46.1, 209.0], [46.2, 210.0], [46.3, 210.0], [46.4, 210.0], [46.5, 210.0], [46.6, 210.0], [46.7, 211.0], [46.8, 211.0], [46.9, 211.0], [47.0, 212.0], [47.1, 212.0], [47.2, 212.0], [47.3, 212.0], [47.4, 213.0], [47.5, 213.0], [47.6, 213.0], [47.7, 213.0], [47.8, 213.0], [47.9, 214.0], [48.0, 214.0], [48.1, 214.0], [48.2, 214.0], [48.3, 215.0], [48.4, 215.0], [48.5, 215.0], [48.6, 216.0], [48.7, 216.0], [48.8, 216.0], [48.9, 216.0], [49.0, 217.0], [49.1, 217.0], [49.2, 217.0], [49.3, 217.0], [49.4, 217.0], [49.5, 218.0], [49.6, 218.0], [49.7, 218.0], [49.8, 218.0], [49.9, 219.0], [50.0, 219.0], [50.1, 219.0], [50.2, 219.0], [50.3, 219.0], [50.4, 220.0], [50.5, 220.0], [50.6, 220.0], [50.7, 220.0], [50.8, 221.0], [50.9, 221.0], [51.0, 221.0], [51.1, 221.0], [51.2, 221.0], [51.3, 221.0], [51.4, 222.0], [51.5, 222.0], [51.6, 222.0], [51.7, 222.0], [51.8, 223.0], [51.9, 223.0], [52.0, 223.0], [52.1, 224.0], [52.2, 224.0], [52.3, 224.0], [52.4, 224.0], [52.5, 225.0], [52.6, 226.0], [52.7, 226.0], [52.8, 226.0], [52.9, 226.0], [53.0, 226.0], [53.1, 226.0], [53.2, 227.0], [53.3, 227.0], [53.4, 227.0], [53.5, 227.0], [53.6, 228.0], [53.7, 228.0], [53.8, 228.0], [53.9, 228.0], [54.0, 229.0], [54.1, 229.0], [54.2, 230.0], [54.3, 230.0], [54.4, 230.0], [54.5, 231.0], [54.6, 231.0], [54.7, 232.0], [54.8, 232.0], [54.9, 232.0], [55.0, 232.0], [55.1, 232.0], [55.2, 233.0], [55.3, 234.0], [55.4, 234.0], [55.5, 234.0], [55.6, 235.0], [55.7, 235.0], [55.8, 236.0], [55.9, 236.0], [56.0, 237.0], [56.1, 237.0], [56.2, 237.0], [56.3, 237.0], [56.4, 238.0], [56.5, 238.0], [56.6, 238.0], [56.7, 238.0], [56.8, 238.0], [56.9, 239.0], [57.0, 239.0], [57.1, 239.0], [57.2, 239.0], [57.3, 240.0], [57.4, 240.0], [57.5, 240.0], [57.6, 240.0], [57.7, 240.0], [57.8, 240.0], [57.9, 240.0], [58.0, 240.0], [58.1, 240.0], [58.2, 240.0], [58.3, 240.0], [58.4, 241.0], [58.5, 241.0], [58.6, 241.0], [58.7, 241.0], [58.8, 241.0], [58.9, 241.0], [59.0, 241.0], [59.1, 242.0], [59.2, 242.0], [59.3, 242.0], [59.4, 242.0], [59.5, 242.0], [59.6, 242.0], [59.7, 243.0], [59.8, 243.0], [59.9, 243.0], [60.0, 243.0], [60.1, 243.0], [60.2, 243.0], [60.3, 244.0], [60.4, 244.0], [60.5, 244.0], [60.6, 245.0], [60.7, 245.0], [60.8, 245.0], [60.9, 245.0], [61.0, 245.0], [61.1, 245.0], [61.2, 245.0], [61.3, 245.0], [61.4, 246.0], [61.5, 246.0], [61.6, 246.0], [61.7, 246.0], [61.8, 246.0], [61.9, 247.0], [62.0, 247.0], [62.1, 247.0], [62.2, 247.0], [62.3, 248.0], [62.4, 248.0], [62.5, 248.0], [62.6, 248.0], [62.7, 248.0], [62.8, 248.0], [62.9, 249.0], [63.0, 249.0], [63.1, 249.0], [63.2, 249.0], [63.3, 249.0], [63.4, 250.0], [63.5, 250.0], [63.6, 250.0], [63.7, 251.0], [63.8, 251.0], [63.9, 251.0], [64.0, 252.0], [64.1, 252.0], [64.2, 252.0], [64.3, 252.0], [64.4, 253.0], [64.5, 253.0], [64.6, 253.0], [64.7, 254.0], [64.8, 254.0], [64.9, 254.0], [65.0, 254.0], [65.1, 255.0], [65.2, 255.0], [65.3, 255.0], [65.4, 255.0], [65.5, 256.0], [65.6, 256.0], [65.7, 256.0], [65.8, 256.0], [65.9, 256.0], [66.0, 256.0], [66.1, 256.0], [66.2, 256.0], [66.3, 257.0], [66.4, 257.0], [66.5, 257.0], [66.6, 257.0], [66.7, 258.0], [66.8, 258.0], [66.9, 258.0], [67.0, 258.0], [67.1, 258.0], [67.2, 259.0], [67.3, 259.0], [67.4, 259.0], [67.5, 259.0], [67.6, 259.0], [67.7, 260.0], [67.8, 260.0], [67.9, 260.0], [68.0, 260.0], [68.1, 260.0], [68.2, 260.0], [68.3, 261.0], [68.4, 261.0], [68.5, 261.0], [68.6, 261.0], [68.7, 262.0], [68.8, 262.0], [68.9, 262.0], [69.0, 262.0], [69.1, 263.0], [69.2, 263.0], [69.3, 263.0], [69.4, 264.0], [69.5, 264.0], [69.6, 264.0], [69.7, 264.0], [69.8, 265.0], [69.9, 265.0], [70.0, 265.0], [70.1, 265.0], [70.2, 266.0], [70.3, 266.0], [70.4, 266.0], [70.5, 266.0], [70.6, 266.0], [70.7, 266.0], [70.8, 266.0], [70.9, 267.0], [71.0, 267.0], [71.1, 267.0], [71.2, 267.0], [71.3, 267.0], [71.4, 268.0], [71.5, 268.0], [71.6, 268.0], [71.7, 268.0], [71.8, 268.0], [71.9, 269.0], [72.0, 269.0], [72.1, 269.0], [72.2, 269.0], [72.3, 270.0], [72.4, 270.0], [72.5, 270.0], [72.6, 271.0], [72.7, 271.0], [72.8, 272.0], [72.9, 272.0], [73.0, 272.0], [73.1, 272.0], [73.2, 273.0], [73.3, 273.0], [73.4, 273.0], [73.5, 273.0], [73.6, 274.0], [73.7, 274.0], [73.8, 274.0], [73.9, 274.0], [74.0, 275.0], [74.1, 276.0], [74.2, 276.0], [74.3, 278.0], [74.4, 278.0], [74.5, 279.0], [74.6, 279.0], [74.7, 280.0], [74.8, 282.0], [74.9, 283.0], [75.0, 284.0], [75.1, 284.0], [75.2, 284.0], [75.3, 284.0], [75.4, 286.0], [75.5, 286.0], [75.6, 286.0], [75.7, 287.0], [75.8, 287.0], [75.9, 288.0], [76.0, 288.0], [76.1, 288.0], [76.2, 288.0], [76.3, 289.0], [76.4, 289.0], [76.5, 289.0], [76.6, 290.0], [76.7, 290.0], [76.8, 291.0], [76.9, 291.0], [77.0, 292.0], [77.1, 292.0], [77.2, 292.0], [77.3, 292.0], [77.4, 292.0], [77.5, 292.0], [77.6, 292.0], [77.7, 293.0], [77.8, 293.0], [77.9, 293.0], [78.0, 293.0], [78.1, 294.0], [78.2, 294.0], [78.3, 294.0], [78.4, 294.0], [78.5, 294.0], [78.6, 295.0], [78.7, 295.0], [78.8, 295.0], [78.9, 295.0], [79.0, 296.0], [79.1, 296.0], [79.2, 296.0], [79.3, 296.0], [79.4, 297.0], [79.5, 297.0], [79.6, 297.0], [79.7, 298.0], [79.8, 298.0], [79.9, 298.0], [80.0, 298.0], [80.1, 299.0], [80.2, 299.0], [80.3, 299.0], [80.4, 299.0], [80.5, 300.0], [80.6, 300.0], [80.7, 300.0], [80.8, 300.0], [80.9, 300.0], [81.0, 301.0], [81.1, 301.0], [81.2, 302.0], [81.3, 302.0], [81.4, 303.0], [81.5, 304.0], [81.6, 304.0], [81.7, 304.0], [81.8, 304.0], [81.9, 305.0], [82.0, 305.0], [82.1, 305.0], [82.2, 305.0], [82.3, 306.0], [82.4, 306.0], [82.5, 306.0], [82.6, 306.0], [82.7, 307.0], [82.8, 307.0], [82.9, 307.0], [83.0, 308.0], [83.1, 308.0], [83.2, 309.0], [83.3, 309.0], [83.4, 310.0], [83.5, 310.0], [83.6, 311.0], [83.7, 313.0], [83.8, 313.0], [83.9, 314.0], [84.0, 314.0], [84.1, 315.0], [84.2, 315.0], [84.3, 315.0], [84.4, 315.0], [84.5, 316.0], [84.6, 316.0], [84.7, 316.0], [84.8, 318.0], [84.9, 319.0], [85.0, 320.0], [85.1, 321.0], [85.2, 323.0], [85.3, 323.0], [85.4, 323.0], [85.5, 325.0], [85.6, 328.0], [85.7, 329.0], [85.8, 331.0], [85.9, 335.0], [86.0, 339.0], [86.1, 340.0], [86.2, 342.0], [86.3, 343.0], [86.4, 346.0], [86.5, 348.0], [86.6, 350.0], [86.7, 351.0], [86.8, 353.0], [86.9, 354.0], [87.0, 355.0], [87.1, 358.0], [87.2, 359.0], [87.3, 361.0], [87.4, 362.0], [87.5, 363.0], [87.6, 363.0], [87.7, 364.0], [87.8, 365.0], [87.9, 365.0], [88.0, 366.0], [88.1, 367.0], [88.2, 369.0], [88.3, 369.0], [88.4, 371.0], [88.5, 374.0], [88.6, 377.0], [88.7, 379.0], [88.8, 382.0], [88.9, 390.0], [89.0, 393.0], [89.1, 395.0], [89.2, 405.0], [89.3, 407.0], [89.4, 408.0], [89.5, 413.0], [89.6, 415.0], [89.7, 420.0], [89.8, 424.0], [89.9, 427.0], [90.0, 430.0], [90.1, 433.0], [90.2, 442.0], [90.3, 463.0], [90.4, 469.0], [90.5, 474.0], [90.6, 476.0], [90.7, 481.0], [90.8, 501.0], [90.9, 512.0], [91.0, 515.0], [91.1, 518.0], [91.2, 523.0], [91.3, 527.0], [91.4, 565.0], [91.5, 569.0], [91.6, 578.0], [91.7, 587.0], [91.8, 608.0], [91.9, 613.0], [92.0, 641.0], [92.1, 6691.0], [92.2, 6698.0], [92.3, 6712.0], [92.4, 6722.0], [92.5, 6730.0], [92.6, 6743.0], [92.7, 6752.0], [92.8, 6767.0], [92.9, 6800.0], [93.0, 6826.0], [93.1, 6838.0], [93.2, 16272.0], [93.3, 16280.0], [93.4, 16309.0], [93.5, 16312.0], [93.6, 16464.0], [93.7, 16466.0], [93.8, 16470.0], [93.9, 16490.0], [94.0, 16495.0], [94.1, 16498.0], [94.2, 16500.0], [94.3, 16502.0], [94.4, 16507.0], [94.5, 16507.0], [94.6, 16509.0], [94.7, 16509.0], [94.8, 16511.0], [94.9, 16513.0], [95.0, 16514.0], [95.1, 16517.0], [95.2, 16519.0], [95.3, 16521.0], [95.4, 16523.0], [95.5, 16529.0], [95.6, 16535.0], [95.7, 16553.0], [95.8, 16555.0], [95.9, 16560.0], [96.0, 16562.0], [96.1, 16564.0], [96.2, 16568.0], [96.3, 16569.0], [96.4, 16572.0], [96.5, 16573.0], [96.6, 16574.0], [96.7, 16576.0], [96.8, 16577.0], [96.9, 16584.0], [97.0, 16593.0], [97.1, 16598.0], [97.2, 16600.0], [97.3, 16603.0], [97.4, 16603.0], [97.5, 16607.0], [97.6, 16608.0], [97.7, 16610.0], [97.8, 16616.0], [97.9, 16619.0], [98.0, 16626.0], [98.1, 16629.0], [98.2, 16634.0], [98.3, 16636.0], [98.4, 16638.0], [98.5, 16643.0], [98.6, 16645.0], [98.7, 16647.0], [98.8, 16648.0], [98.9, 16650.0], [99.0, 16651.0], [99.1, 16654.0], [99.2, 16658.0], [99.3, 16661.0], [99.4, 16676.0], [99.5, 16679.0], [99.6, 16681.0], [99.7, 16683.0], [99.8, 16687.0], [99.9, 16692.0], [100.0, 16701.0]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3318.0, "series": [{"data": [[0.0, 1145.0], [16500.0, 291.0], [16400.0, 93.0], [16600.0, 297.0], [16700.0, 14.0], [300.0, 128.0], [600.0, 2.0], [100.0, 615.0], [200.0, 733.0], [400.0, 10.0], [16300.0, 41.0], [500.0, 4.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[0.0, 8.0], [16300.0, 3.0], [17300.0, 41.0], [17400.0, 35.0], [17200.0, 68.0], [16600.0, 108.0], [17100.0, 103.0], [17000.0, 115.0], [16900.0, 92.0], [16800.0, 136.0], [16400.0, 18.0], [16500.0, 40.0], [16700.0, 142.0], [17500.0, 6.0], [18900.0, 11.0], [18800.0, 1.0], [19000.0, 33.0], [19100.0, 20.0], [100.0, 13.0], [2400.0, 92.0], [2500.0, 633.0], [2600.0, 1045.0], [2700.0, 459.0], [2800.0, 76.0], [2900.0, 24.0], [3000.0, 6.0], [200.0, 1.0], [6900.0, 6.0], [6800.0, 10.0], [6700.0, 1.0], [7100.0, 5.0], [7000.0, 2.0], [7400.0, 7.0], [7300.0, 10.0], [7200.0, 5.0], [7600.0, 10.0], [7500.0, 12.0], [7900.0, 9.0], [7800.0, 5.0], [7700.0, 9.0], [8100.0, 3.0], [8000.0, 5.0]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[0.0, 3318.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[0.0, 976.0], [600.0, 3.0], [200.0, 795.0], [16300.0, 24.0], [16200.0, 21.0], [16500.0, 89.0], [16400.0, 54.0], [16600.0, 118.0], [16700.0, 2.0], [300.0, 407.0], [400.0, 68.0], [100.0, 885.0], [6800.0, 13.0], [500.0, 13.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[0.0, 767.0], [600.0, 13.0], [200.0, 1291.0], [16300.0, 6.0], [16200.0, 6.0], [16500.0, 104.0], [16400.0, 21.0], [16600.0, 95.0], [16700.0, 2.0], [300.0, 298.0], [100.0, 709.0], [6600.0, 4.0], [400.0, 56.0], [6800.0, 11.0], [6700.0, 23.0], [500.0, 33.0]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 66.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12104.0, "series": [{"data": [[0.0, 12104.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 66.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 4734.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 122.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 81.75999999999998, "minX": 1.70661564E12, "maxY": 150.0, "series": [{"data": [[1.70661594E12, 150.0], [1.70661576E12, 150.0], [1.70661582E12, 150.0], [1.70661564E12, 137.30121703853962], [1.7066157E12, 150.0], [1.706616E12, 81.75999999999998], [1.70661588E12, 150.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.706616E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.038577456298975354, "minX": 3.0, "maxY": 17316.0, "series": [{"data": [[87.0, 16685.0], [85.0, 16685.0], [91.0, 16683.0], [88.0, 16684.0], [95.0, 16688.0], [93.0, 16686.0], [99.0, 16687.0], [106.0, 16693.0], [105.0, 16694.0], [104.0, 16692.0], [109.0, 16692.333333333332], [108.0, 16692.0], [126.0, 16690.0], [124.0, 16688.0], [135.0, 16693.0], [132.0, 16691.5625], [134.0, 16694.0], [131.0, 16699.0], [142.0, 16705.0], [141.0, 16700.0], [139.0, 16703.0], [137.0, 16700.0], [150.0, 3529.553415588318], [146.0, 16702.5], [145.0, 16704.0]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[149.57515564779126, 3724.676845538091]], "isOverall": false, "label": "log out-Aggregated", "isController": false}, {"data": [[42.0, 16981.11111111111], [45.0, 17086.333333333332], [46.0, 17101.0], [48.0, 17103.0], [3.0, 16696.666666666668], [53.0, 17206.0], [52.0, 17130.333333333332], [57.0, 17234.5], [56.0, 17216.0], [61.0, 17316.0], [60.0, 17257.0], [63.0, 17275.0], [64.0, 17313.0], [7.0, 16694.0], [8.0, 16702.0], [150.0, 6697.85235695226], [9.0, 16757.0], [10.0, 16736.0], [11.0, 16790.666666666668], [12.0, 16787.0], [13.0, 16797.0], [16.0, 16826.0], [17.0, 16830.666666666668], [19.0, 16847.0], [22.0, 16857.5], [23.0, 16857.0], [24.0, 16877.0], [29.0, 16880.0], [30.0, 16906.25]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[148.12310385064188, 6862.538506417728]], "isOverall": false, "label": "confirm menu-Aggregated", "isController": false}, {"data": [[150.0, 0.038577456298975354]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[150.0, 0.038577456298975354]], "isOverall": false, "label": "调试取样器-Aggregated", "isController": false}, {"data": [[48.0, 346.33333333333337], [49.0, 381.75], [50.0, 423.0], [51.0, 448.75], [52.0, 425.0], [53.0, 426.0], [54.0, 431.0], [55.0, 428.5], [56.0, 421.0], [57.0, 416.0], [58.0, 411.5], [59.0, 409.0], [60.0, 405.5], [61.0, 399.5], [62.0, 389.0], [63.0, 328.5], [64.0, 8465.5], [65.0, 291.5], [66.0, 286.5], [67.0, 10090.0], [68.0, 7238.285714285714], [70.0, 248.0], [71.0, 268.5], [69.0, 16649.0], [74.0, 12562.0], [75.0, 297.0], [72.0, 16650.0], [76.0, 8481.0], [77.0, 5770.333333333333], [78.0, 336.0], [79.0, 9678.142857142857], [80.0, 363.0], [81.0, 375.0], [82.0, 371.5], [87.0, 16681.0], [85.0, 16684.0], [84.0, 16680.0], [91.0, 321.0], [93.0, 8503.5], [94.0, 321.0], [95.0, 8503.0], [97.0, 317.0], [99.0, 316.0], [100.0, 8494.0], [104.0, 295.0], [106.0, 288.0], [108.0, 289.0], [110.0, 291.0], [114.0, 290.0], [115.0, 292.0], [116.0, 285.0], [117.0, 276.0], [118.0, 269.5], [119.0, 264.0], [120.0, 262.0], [121.0, 260.0], [124.0, 281.0], [125.0, 276.0], [127.0, 278.0], [126.0, 16689.0], [128.0, 278.0], [129.0, 277.0], [131.0, 276.0], [132.0, 271.0], [134.0, 272.0], [135.0, 271.0], [136.0, 267.0], [137.0, 11221.666666666666], [139.0, 269.0], [140.0, 8484.5], [142.0, 8482.0], [143.0, 262.0], [144.0, 262.0], [146.0, 263.0], [147.0, 261.0], [149.0, 258.0], [150.0, 1565.0514285714276]], "isOverall": false, "label": "login", "isController": false}, {"data": [[147.3275663206464, 1650.697520184544]], "isOverall": false, "label": "login-Aggregated", "isController": false}, {"data": [[69.0, 6755.0], [70.0, 207.6], [71.0, 270.0], [72.0, 279.0], [73.0, 282.0], [74.0, 292.0], [75.0, 292.0], [76.0, 5758.666666666667], [77.0, 324.2], [78.0, 338.75], [79.0, 352.75], [80.0, 3083.5], [81.0, 374.0], [82.0, 4451.5], [91.0, 323.0], [92.0, 326.0], [93.0, 324.0], [95.0, 316.0], [96.0, 315.0], [97.0, 311.0], [99.0, 305.0], [100.0, 299.0], [101.0, 8499.0], [103.0, 298.0], [105.0, 5760.333333333333], [106.0, 291.0], [107.0, 289.0], [109.0, 287.0], [110.0, 16690.0], [112.0, 291.0], [113.0, 289.0], [119.0, 265.0], [121.0, 258.0], [122.0, 265.0], [123.0, 277.0], [126.0, 281.0], [127.0, 278.0], [130.0, 278.0], [133.0, 276.0], [132.0, 16690.0], [137.0, 268.0], [139.0, 8482.5], [143.0, 263.0], [141.0, 16700.0], [146.0, 259.0], [150.0, 1354.6404662283378]], "isOverall": false, "label": "get menu", "isController": false}, {"data": [[148.3655132305903, 1378.0572840942139]], "isOverall": false, "label": "get menu-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 958.75, "minX": 1.70661564E12, "maxY": 37064.78333333333, "series": [{"data": [[1.70661594E12, 35951.183333333334], [1.70661576E12, 36750.8], [1.70661582E12, 35301.76666666667], [1.70661564E12, 12796.75], [1.7066157E12, 36450.61666666667], [1.706616E12, 958.75], [1.70661588E12, 37064.78333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70661594E12, 18284.266666666666], [1.70661576E12, 18130.85], [1.70661582E12, 18055.333333333332], [1.70661564E12, 5474.483333333334], [1.7066157E12, 18342.733333333334], [1.706616E12, 1246.1666666666667], [1.70661588E12, 18203.783333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.706616E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.019607843137254912, "minX": 1.70661564E12, "maxY": 16962.290909090905, "series": [{"data": [[1.70661594E12, 4062.0775193798454], [1.70661576E12, 4633.236306729265], [1.70661582E12, 4725.624060150381], [1.70661564E12, 143.8133333333333], [1.7066157E12, 2747.0362438220745], [1.706616E12, 16693.69090909091], [1.70661588E12, 2014.609477124184]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661594E12, 7893.531297709919], [1.70661576E12, 6789.525236593066], [1.70661582E12, 6655.292527821939], [1.70661564E12, 2671.3533333333344], [1.7066157E12, 5875.7913561848], [1.706616E12, 16962.290909090905], [1.70661588E12, 7235.798107255531]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661594E12, 0.026356589147286825], [1.70661576E12, 0.03442879499217529], [1.70661582E12, 0.028571428571428584], [1.70661564E12, 0.16666666666666685], [1.7066157E12, 0.05436573311367388], [1.70661588E12, 0.019607843137254912]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661594E12, 977.7974481658682], [1.70661576E12, 1330.7200622083983], [1.70661582E12, 1107.3190476190478], [1.70661564E12, 241.87804878048772], [1.7066157E12, 1506.1661237784997], [1.706616E12, 16667.103448275862], [1.70661588E12, 3261.324451410661]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661594E12, 1037.5411954765748], [1.70661576E12, 1323.460093896714], [1.70661582E12, 1616.712396694215], [1.70661564E12, 224.85140562249006], [1.7066157E12, 1585.4086687306506], [1.706616E12, 16679.454545454544], [1.70661588E12, 1506.6611940298512]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.706616E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661564E12, "maxY": 16962.218181818174, "series": [{"data": [[1.70661594E12, 4061.506976744175], [1.70661576E12, 4632.9733959311425], [1.70661582E12, 4725.249624060155], [1.70661564E12, 143.68666666666667], [1.7066157E12, 2746.9011532125232], [1.706616E12, 16693.52727272727], [1.70661588E12, 2014.3741830065383]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661594E12, 7892.992366412213], [1.70661576E12, 6788.965299684547], [1.70661582E12, 6654.729729729728], [1.70661564E12, 2671.206666666667], [1.7066157E12, 5874.7630402384475], [1.706616E12, 16962.218181818174], [1.70661588E12, 7235.575709779185]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661594E12, 0.0], [1.70661576E12, 0.0], [1.70661582E12, 0.0], [1.70661564E12, 0.0], [1.7066157E12, 0.0], [1.70661588E12, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661594E12, 976.9186602870809], [1.70661576E12, 1330.3468118195967], [1.70661582E12, 1106.9142857142858], [1.70661564E12, 241.6480836236934], [1.7066157E12, 1506.0684039087944], [1.706616E12, 16667.03448275862], [1.70661588E12, 3261.261755485897]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661594E12, 1033.899838449112], [1.70661576E12, 1320.8544600938972], [1.70661582E12, 1615.130578512397], [1.70661564E12, 224.70281124497987], [1.7066157E12, 1583.7182662538698], [1.706616E12, 16679.363636363636], [1.70661588E12, 1505.9910447761235]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.706616E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661564E12, "maxY": 245.1266666666665, "series": [{"data": [[1.70661594E12, 115.04186046511627], [1.70661576E12, 140.63536776212828], [1.70661582E12, 139.78195488721803], [1.70661564E12, 142.31333333333333], [1.7066157E12, 144.3558484349258], [1.706616E12, 144.49090909090904], [1.70661588E12, 153.14052287581706]], "isOverall": false, "label": "log out", "isController": false}, {"data": [[1.70661594E12, 161.1282442748094], [1.70661576E12, 168.31388012618308], [1.70661582E12, 175.08585055643874], [1.70661564E12, 245.1266666666665], [1.7066157E12, 197.0044709388971], [1.706616E12, 64.10909090909091], [1.70661588E12, 173.72239747634057]], "isOverall": false, "label": "confirm menu", "isController": false}, {"data": [[1.70661594E12, 0.0], [1.70661576E12, 0.0], [1.70661582E12, 0.0], [1.70661564E12, 0.0], [1.7066157E12, 0.0], [1.70661588E12, 0.0]], "isOverall": false, "label": "调试取样器", "isController": false}, {"data": [[1.70661594E12, 157.96491228070204], [1.70661576E12, 152.91601866251955], [1.70661582E12, 168.40952380952385], [1.70661564E12, 240.02090592334494], [1.7066157E12, 178.3762214983714], [1.706616E12, 150.9310344827586], [1.70661588E12, 150.61912225705316]], "isOverall": false, "label": "login", "isController": false}, {"data": [[1.70661594E12, 182.34248788368333], [1.70661576E12, 192.81064162754294], [1.70661582E12, 204.50247933884305], [1.70661564E12, 223.0481927710844], [1.7066157E12, 184.7492260061922], [1.706616E12, 149.54545454545453], [1.70661588E12, 157.4343283582089]], "isOverall": false, "label": "get menu", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.706616E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.70661564E12, "maxY": 19170.0, "series": [{"data": [[1.70661594E12, 19170.0], [1.70661576E12, 18959.0], [1.70661582E12, 19073.0], [1.70661564E12, 2777.0], [1.7066157E12, 17558.0], [1.706616E12, 17316.0], [1.70661588E12, 17538.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70661594E12, 16620.4], [1.70661576E12, 16561.7], [1.70661582E12, 16573.0], [1.70661564E12, 2669.3], [1.7066157E12, 7964.6], [1.706616E12, 17098.6], [1.70661588E12, 16620.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70661594E12, 19019.44], [1.70661576E12, 17215.37], [1.70661582E12, 17306.6], [1.70661564E12, 2748.0], [1.7066157E12, 17141.65], [1.706616E12, 17314.47], [1.70661588E12, 17177.72]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70661594E12, 16843.0], [1.70661576E12, 16645.85], [1.70661582E12, 16638.0], [1.70661564E12, 2711.3], [1.7066157E12, 16513.0], [1.706616E12, 17221.45], [1.70661588E12, 16721.899999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70661594E12, 0.0], [1.70661576E12, 0.0], [1.70661582E12, 0.0], [1.70661564E12, 0.0], [1.7066157E12, 0.0], [1.706616E12, 16635.0], [1.70661588E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70661594E12, 217.0], [1.70661576E12, 205.0], [1.70661582E12, 186.0], [1.70661564E12, 221.0], [1.7066157E12, 213.5], [1.706616E12, 16697.0], [1.70661588E12, 188.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.706616E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 4.0, "maxY": 16697.0, "series": [{"data": [[4.0, 223.5], [119.0, 123.0], [123.0, 343.0], [131.0, 67.0], [148.0, 139.0], [150.0, 16697.0], [152.0, 122.0], [156.0, 9.0], [173.0, 267.0], [168.0, 149.0], [182.0, 18.5], [184.0, 7.0], [198.0, 143.0], [201.0, 157.0], [213.0, 16468.0], [219.0, 249.0], [221.0, 116.0], [227.0, 31.5], [228.0, 233.0], [236.0, 231.5], [245.0, 13.0], [241.0, 130.0], [247.0, 268.5], [246.0, 93.5], [240.0, 14.0], [251.0, 282.0], [248.0, 102.0], [250.0, 16621.0], [257.0, 299.0], [266.0, 16619.0], [259.0, 16570.0], [262.0, 16598.0], [274.0, 125.0], [279.0, 306.0], [287.0, 16278.0], [273.0, 271.0], [276.0, 263.0], [280.0, 19.5], [284.0, 223.0], [281.0, 16672.5], [290.0, 6705.0], [299.0, 115.0], [298.0, 16530.0], [292.0, 193.0], [313.0, 16.0], [312.0, 286.0], [334.0, 202.0], [326.0, 89.5], [344.0, 45.0], [338.0, 197.5], [341.0, 15.0], [349.0, 177.0], [350.0, 57.0], [351.0, 224.0], [343.0, 222.0], [362.0, 17.0], [366.0, 243.0], [381.0, 79.0], [379.0, 249.0], [386.0, 189.0], [412.0, 168.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 65.0], [168.0, 158.0], [184.0, 8.0], [198.0, 162.0], [201.0, 162.5], [219.0, 100.0], [227.0, 4.0], [228.0, 151.5], [236.0, 50.5], [247.0, 202.0], [246.0, 40.0], [240.0, 27.0], [248.0, 136.0], [257.0, 101.0], [266.0, 1.0], [262.0, 1.0], [279.0, 201.0], [287.0, 101.0], [273.0, 152.0], [281.0, 107.0], [290.0, 101.0], [299.0, 1.0], [298.0, 16608.0], [312.0, 202.5], [334.0, 100.0], [338.0, 100.5], [349.0, 101.0], [351.0, 201.0], [343.0, 101.0], [366.0, 100.0], [379.0, 239.0], [386.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 412.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 4.0, "maxY": 16697.0, "series": [{"data": [[4.0, 223.5], [119.0, 123.0], [123.0, 342.0], [131.0, 67.0], [148.0, 139.0], [150.0, 16697.0], [152.0, 122.0], [156.0, 9.0], [173.0, 266.0], [168.0, 149.0], [182.0, 18.5], [184.0, 7.0], [198.0, 143.0], [201.0, 157.0], [213.0, 16468.0], [219.0, 248.0], [221.0, 116.0], [227.0, 31.5], [228.0, 232.5], [236.0, 231.5], [245.0, 12.0], [241.0, 130.0], [247.0, 268.5], [246.0, 93.5], [240.0, 14.0], [251.0, 282.0], [248.0, 102.0], [250.0, 16621.0], [257.0, 299.0], [266.0, 16619.0], [259.0, 16570.0], [262.0, 16598.0], [274.0, 124.5], [279.0, 306.0], [287.0, 16278.0], [273.0, 271.0], [276.0, 263.0], [280.0, 19.5], [284.0, 222.5], [281.0, 16672.5], [290.0, 6705.0], [299.0, 115.0], [298.0, 16530.0], [292.0, 193.0], [313.0, 16.0], [312.0, 286.0], [334.0, 201.0], [326.0, 89.0], [344.0, 44.5], [338.0, 197.5], [341.0, 15.0], [349.0, 177.0], [350.0, 57.0], [351.0, 224.0], [343.0, 222.0], [362.0, 17.0], [366.0, 243.0], [381.0, 79.0], [379.0, 249.0], [386.0, 189.0], [412.0, 168.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[131.0, 64.0], [168.0, 158.0], [184.0, 8.0], [198.0, 162.0], [201.0, 162.5], [219.0, 0.0], [227.0, 4.0], [228.0, 0.0], [236.0, 0.0], [247.0, 0.0], [246.0, 40.0], [240.0, 27.0], [248.0, 136.0], [257.0, 0.0], [266.0, 0.0], [262.0, 0.0], [279.0, 0.0], [287.0, 0.0], [273.0, 0.0], [281.0, 0.0], [290.0, 0.0], [299.0, 0.0], [298.0, 16608.0], [312.0, 0.0], [334.0, 0.0], [338.0, 0.0], [349.0, 0.0], [351.0, 0.0], [343.0, 0.0], [366.0, 0.0], [379.0, 0.0], [386.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 412.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 18.933333333333334, "minX": 1.70661564E12, "maxY": 53.233333333333334, "series": [{"data": [[1.70661594E12, 53.18333333333333], [1.70661576E12, 53.233333333333334], [1.70661582E12, 53.233333333333334], [1.70661564E12, 18.933333333333334], [1.7066157E12, 52.416666666666664], [1.70661588E12, 52.766666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70661594E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.70661564E12, "maxY": 52.81666666666667, "series": [{"data": [[1.70661594E12, 52.583333333333336], [1.70661576E12, 52.7], [1.70661582E12, 52.81666666666667], [1.70661564E12, 16.433333333333334], [1.7066157E12, 52.1], [1.706616E12, 2.5], [1.70661588E12, 52.6]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70661594E12, 0.15], [1.70661576E12, 0.08333333333333333], [1.70661582E12, 0.13333333333333333], [1.70661588E12, 0.03333333333333333]], "isOverall": false, "label": "401", "isController": false}, {"data": [[1.70661594E12, 0.45], [1.70661576E12, 0.45], [1.70661582E12, 0.2833333333333333], [1.7066157E12, 0.31666666666666665], [1.70661588E12, 0.13333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.706616E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.70661564E12, "maxY": 11.083333333333334, "series": [{"data": [[1.70661594E12, 9.983333333333333], [1.70661576E12, 10.383333333333333], [1.70661582E12, 9.866666666666667], [1.70661564E12, 4.15], [1.7066157E12, 10.583333333333334], [1.706616E12, 0.18333333333333332], [1.70661588E12, 11.083333333333334]], "isOverall": false, "label": "get menu-success", "isController": false}, {"data": [[1.70661594E12, 0.3333333333333333], [1.70661576E12, 0.26666666666666666], [1.70661582E12, 0.21666666666666667], [1.7066157E12, 0.18333333333333332], [1.70661588E12, 0.08333333333333333]], "isOverall": false, "label": "get menu-failure", "isController": false}, {"data": [[1.70661594E12, 10.616666666666667], [1.70661576E12, 10.55], [1.70661582E12, 11.0], [1.70661564E12, 2.5], [1.7066157E12, 10.1], [1.706616E12, 0.9166666666666666], [1.70661588E12, 10.166666666666666]], "isOverall": false, "label": "log out-success", "isController": false}, {"data": [[1.70661594E12, 0.13333333333333333], [1.70661576E12, 0.1], [1.70661582E12, 0.08333333333333333], [1.7066157E12, 0.016666666666666666], [1.70661588E12, 0.03333333333333333]], "isOverall": false, "label": "log out-failure", "isController": false}, {"data": [[1.70661594E12, 10.75], [1.70661576E12, 10.65], [1.70661582E12, 11.083333333333334], [1.70661564E12, 2.5], [1.7066157E12, 10.116666666666667], [1.70661588E12, 10.2]], "isOverall": false, "label": "调试取样器-success", "isController": false}, {"data": [[1.70661594E12, 10.366666666666667], [1.70661576E12, 10.666666666666666], [1.70661582E12, 10.433333333333334], [1.70661564E12, 4.783333333333333], [1.7066157E12, 10.233333333333333], [1.706616E12, 0.48333333333333334], [1.70661588E12, 10.616666666666667]], "isOverall": false, "label": "login-success", "isController": false}, {"data": [[1.70661594E12, 0.05], [1.70661576E12, 0.11666666666666667], [1.70661582E12, 0.05], [1.7066157E12, 0.11666666666666667], [1.70661588E12, 0.03333333333333333]], "isOverall": false, "label": "confirm menu-failure", "isController": false}, {"data": [[1.70661594E12, 10.866666666666667], [1.70661576E12, 10.45], [1.70661582E12, 10.433333333333334], [1.70661564E12, 2.5], [1.7066157E12, 11.066666666666666], [1.706616E12, 0.9166666666666666], [1.70661588E12, 10.533333333333333]], "isOverall": false, "label": "confirm menu-success", "isController": false}, {"data": [[1.70661594E12, 0.08333333333333333], [1.70661576E12, 0.05], [1.70661582E12, 0.06666666666666667], [1.70661588E12, 0.016666666666666666]], "isOverall": false, "label": "login-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.706616E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.70661564E12, "maxY": 52.81666666666667, "series": [{"data": [[1.70661594E12, 52.583333333333336], [1.70661576E12, 52.7], [1.70661582E12, 52.81666666666667], [1.70661564E12, 16.433333333333334], [1.7066157E12, 52.1], [1.706616E12, 2.5], [1.70661588E12, 52.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70661594E12, 0.6], [1.70661576E12, 0.5333333333333333], [1.70661582E12, 0.4166666666666667], [1.7066157E12, 0.31666666666666665], [1.70661588E12, 0.16666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.706616E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

